<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="parsefunction_8c" kind="file" language="C++">
    <compoundname>parsefunction.c</compoundname>
    <includes refid="globals_8h" local="yes">globals.h</includes>
    <includes refid="parsefunction_8h" local="yes">parsefunction.h</includes>
    <includes local="yes">SDL.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="315">
        <label>globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="316" relation="include">
        </childnode>
      </node>
      <node id="314">
        <label>dumb-ways-to-memorize/parsefunction.c</label>
        <link refid="parsefunction.c"/>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
      </node>
      <node id="318">
        <label>parsefunction.h</label>
        <link refid="parsefunction_8h"/>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="321" relation="include">
        </childnode>
      </node>
      <node id="321">
        <label>SDL.h</label>
      </node>
      <node id="316">
        <label>jsmn.h</label>
        <link refid="jsmn_8h"/>
        <childnode refid="317" relation="include">
        </childnode>
      </node>
      <node id="323">
        <label>parseobject.h</label>
        <link refid="parseobject_8h"/>
        <childnode refid="316" relation="include">
        </childnode>
      </node>
      <node id="317">
        <label>stddef.h</label>
      </node>
      <node id="324">
        <label>string.h</label>
      </node>
      <node id="319">
        <label>entity.h</label>
        <link refid="entity_8h"/>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
      </node>
      <node id="320">
        <label>graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
      </node>
      <node id="325">
        <label>stdio.h</label>
      </node>
      <node id="322">
        <label>ai_interpret.h</label>
        <link refid="ai__interpret_8h"/>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="parsefunction_8c_1a77aa3443e1cc11d1389a851b108f3328" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* FunctionNames[]</definition>
        <argsstring>[]</argsstring>
        <name>FunctionNames</name>
        <initializer>= {&quot;X mouse&quot;, &quot;X&quot;, &quot;mouse&quot;, &quot;self&quot;, &quot;at-point&quot;, &quot;world&quot; , 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.c" line="8" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="parsefunction_8c_1a69c92da9a6a5e5dd4c02c68ab396ab9b" prot="public" static="no" mutable="no">
        <type>void</type>
        <definition>void FunctionSymbols</definition>
        <argsstring></argsstring>
        <name>FunctionSymbols</name>
        <initializer>= {<ref refid="parsefunction_8h_1a0f50ddf2c031233309190bfe8e3f8701" kindref="member">GetXMouse</ref>, <ref refid="parsefunction_8h_1a2f1ce1fc3533578da89e9d9e566769af" kindref="member">GetX</ref>, <ref refid="parsefunction_8h_1a9f48ba431a0a1cfb77ac410398303773" kindref="member">GetMousePos</ref>, <ref refid="parsefunction_8h_1ad5c9fe379d9ad3c5c1047b2d290c0302" kindref="member">GetSelf</ref>, <ref refid="parsefunction_8h_1a2bd9d331736aa28b1650dcb48d2ad141" kindref="member">GetAtPoint</ref>, <ref refid="parsefunction_8h_1a73c2d9e32b37716a4fa1a886f7cbb1e3" kindref="member">GetWorld</ref>, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.c" line="9" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="parsefunction_8c_1a3364b018786a8ca3a643e80ee703807f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ParseToFunction</definition>
        <argsstring>(const char *name)</argsstring>
        <name>ParseToFunction</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.c" line="11" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="11" bodyend="23"/>
        <references refid="parsefunction_8c_1a77aa3443e1cc11d1389a851b108f3328" compoundref="parsefunction_8c" startline="8">FunctionNames</references>
        <references refid="parsefunction_8c_1a69c92da9a6a5e5dd4c02c68ab396ab9b" compoundref="parsefunction_8c" startline="9">FunctionSymbols</references>
      </memberdef>
      <memberdef kind="function" id="parsefunction_8c_1a73c2d9e32b37716a4fa1a886f7cbb1e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetWorld</definition>
        <argsstring>(entity_t *self, entity_t **targ)</argsstring>
        <name>GetWorld</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> **</type>
          <declname>targ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the world entities.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">self</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the class instance that this method operates on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">targ</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the targ.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/30/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.c" line="25" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="25" bodyend="29"/>
        <references refid="entity_8c_1a725e495de3797c12610995f701dd8a6a" compoundref="entity_8c" startline="11">gEntities</references>
      </memberdef>
      <memberdef kind="function" id="parsefunction_8c_1a2bd9d331736aa28b1650dcb48d2ad141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetAtPoint</definition>
        <argsstring>(entity_t *self, entity_t **targ)</argsstring>
        <name>GetAtPoint</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> **</type>
          <declname>targ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the entity at the point specified by the mouse.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">self</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the class instance that this method operates on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">targ</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the targ.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/30/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.c" line="31" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="31" bodyend="38"/>
        <references refid="parsefunction_8c_1a9f48ba431a0a1cfb77ac410398303773" compoundref="parsefunction_8c" startline="53" endline="57">GetMousePos</references>
        <references refid="entity_8c_1a69811b56fbaa2dfc61154fb027632ea8" compoundref="entity_8c" startline="355" endline="369">LookForEntityAtPos</references>
      </memberdef>
      <memberdef kind="function" id="parsefunction_8c_1ad5c9fe379d9ad3c5c1047b2d290c0302" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetSelf</definition>
        <argsstring>(entity_t *self, entity_t **targ)</argsstring>
        <name>GetSelf</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> **</type>
          <declname>targ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets self and makes it targ.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">self</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the class instance that this method operates on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">targ</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the targ.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/30/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.c" line="40" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="parsefunction_8c_1a2f1ce1fc3533578da89e9d9e566769af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetX</definition>
        <argsstring>(entity_t *self, int *button)</argsstring>
        <name>GetX</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>button</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the status of the button of the power_up.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">self</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the class instance that this method operates on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">button</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the button.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/30/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.c" line="47" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="parsefunction_8c_1a9f48ba431a0a1cfb77ac410398303773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetMousePos</definition>
        <argsstring>(entity_t *self, vec2_t *pos)</argsstring>
        <name>GetMousePos</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="globals_8h_1a773f2054819bb6014f1e50baa39cb5e3" kindref="member">vec2_t</ref> *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets mouse position.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">self</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the class instance that this method operates on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pos</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the position.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/30/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.c" line="53" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="53" bodyend="57"/>
        <references refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" compoundref="globals_8h" startline="21">vec2_s::x</references>
        <references refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" compoundref="globals_8h" startline="22">vec2_s::y</references>
      </memberdef>
      <memberdef kind="function" id="parsefunction_8c_1a0f50ddf2c031233309190bfe8e3f8701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetXMouse</definition>
        <argsstring>(entity_t *self, int *button, vec2_t *pos)</argsstring>
        <name>GetXMouse</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>button</declname>
        </param>
        <param>
          <type><ref refid="globals_8h_1a773f2054819bb6014f1e50baa39cb5e3" kindref="member">vec2_t</ref> *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets status of button and mouse position.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">self</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the class instance that this method operates on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">button</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the button. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pos</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the position.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/30/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.c" line="59" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="59" bodyend="63"/>
        <references refid="parsefunction_8c_1a2f1ce1fc3533578da89e9d9e566769af" compoundref="parsefunction_8c" startline="47" endline="51">GetX</references>
        <references refid="parsefunction_8c_1a9f48ba431a0a1cfb77ac410398303773" compoundref="parsefunction_8c" startline="53" endline="57">GetMousePos</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globals_8h" kindref="compound">globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parsefunction_8h" kindref="compound">parsefunction.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SDL.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//Function<sp/>Globals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="parsefunction_8h_1a77aa3443e1cc11d1389a851b108f3328" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="parsefunction_8c_1a77aa3443e1cc11d1389a851b108f3328" kindref="member">FunctionNames</ref>[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;X<sp/>mouse&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mouse&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;self&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;at-point&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;world&quot;</highlight><highlight class="normal"><sp/>,<sp/>0};</highlight></codeline>
<codeline lineno="9" refid="parsefunction_8h_1a1a22b108a457c916e27af13baf7c97a7" refkind="member"><highlight class="normal">void<sp/>(*<ref refid="parsefunction_8c_1a69c92da9a6a5e5dd4c02c68ab396ab9b" kindref="member">FunctionSymbols</ref>[])<sp/>=<sp/>{<ref refid="parsefunction_8c_1a0f50ddf2c031233309190bfe8e3f8701" kindref="member">GetXMouse</ref>,<sp/><ref refid="parsefunction_8c_1a2f1ce1fc3533578da89e9d9e566769af" kindref="member">GetX</ref>,<sp/><ref refid="parsefunction_8c_1a9f48ba431a0a1cfb77ac410398303773" kindref="member">GetMousePos</ref>,<sp/><ref refid="parsefunction_8c_1ad5c9fe379d9ad3c5c1047b2d290c0302" kindref="member">GetSelf</ref>,<sp/><ref refid="parsefunction_8c_1a2bd9d331736aa28b1650dcb48d2ad141" kindref="member">GetAtPoint</ref>,<sp/><ref refid="parsefunction_8c_1a73c2d9e32b37716a4fa1a886f7cbb1e3" kindref="member">GetWorld</ref>,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="parsefunction_8h_1a3364b018786a8ca3a643e80ee703807f" refkind="member"><highlight class="normal">void<sp/>(*<ref refid="parsefunction_8c_1a3364b018786a8ca3a643e80ee703807f" kindref="member">ParseToFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structobject__s_1a5ac083a645d964373f022d03df4849c8" kindref="member">name</ref>))</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/><ref refid="parsefunction_8c_1a77aa3443e1cc11d1389a851b108f3328" kindref="member">FunctionNames</ref>[i];<sp/>i++)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="parsefunction_8c_1a77aa3443e1cc11d1389a851b108f3328" kindref="member">FunctionNames</ref>[i],<sp/>name))</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="parsefunction_8c_1a69c92da9a6a5e5dd4c02c68ab396ab9b" kindref="member">FunctionSymbols</ref>[i];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="parsefunction_8h_1a73c2d9e32b37716a4fa1a886f7cbb1e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsefunction_8c_1a73c2d9e32b37716a4fa1a886f7cbb1e3" kindref="member">GetWorld</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>**targ)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>*targ<sp/>=<sp/><ref refid="entity_8c_1a725e495de3797c12610995f701dd8a6a" kindref="member">gEntities</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="parsefunction_8h_1a2bd9d331736aa28b1650dcb48d2ad141" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsefunction_8c_1a2bd9d331736aa28b1650dcb48d2ad141" kindref="member">GetAtPoint</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>**targ)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvec2__s" kindref="compound">vec2_t</ref><sp/>*temp<sp/>=<sp/>(<ref refid="structvec2__s" kindref="compound">vec2_t</ref>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structvec2__s" kindref="compound">vec2_t</ref>));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsefunction_8c_1a9f48ba431a0a1cfb77ac410398303773" kindref="member">GetMousePos</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>temp);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>*targ<sp/>=<sp/><ref refid="entity_8c_1a69811b56fbaa2dfc61154fb027632ea8" kindref="member">LookForEntityAtPos</ref>(*temp);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>free(temp);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="parsefunction_8h_1ad5c9fe379d9ad3c5c1047b2d290c0302" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsefunction_8c_1ad5c9fe379d9ad3c5c1047b2d290c0302" kindref="member">GetSelf</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>**targ)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>*targ<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="parsefunction_8h_1a2f1ce1fc3533578da89e9d9e566769af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsefunction_8c_1a2f1ce1fc3533578da89e9d9e566769af" kindref="member">GetX</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*button)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>*button<sp/>=<sp/>SDL_GetKeyFromName(</highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="parsefunction_8h_1a9f48ba431a0a1cfb77ac410398303773" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsefunction_8c_1a9f48ba431a0a1cfb77ac410398303773" kindref="member">GetMousePos</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="structvec2__s" kindref="compound">vec2_t</ref><sp/>*pos)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GetRelativeMouseState(<sp/>&amp;pos-&gt;<ref refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>,<sp/>&amp;pos-&gt;<ref refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="parsefunction_8h_1a0f50ddf2c031233309190bfe8e3f8701" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsefunction_8c_1a0f50ddf2c031233309190bfe8e3f8701" kindref="member">GetXMouse</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>button,<sp/><ref refid="structvec2__s" kindref="compound">vec2_t</ref><sp/>*pos)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsefunction_8c_1a2f1ce1fc3533578da89e9d9e566769af" kindref="member">GetX</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>button);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsefunction_8c_1a9f48ba431a0a1cfb77ac410398303773" kindref="member">GetMousePos</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>pos);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="dumb-ways-to-memorize/parsefunction.c"/>
  </compounddef>
</doxygen>
