<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structpower__s" kind="struct" language="C++" prot="public">
    <compoundname>power_s</compoundname>
    <includes refid="parsepowerup_8h" local="no">parsepowerup.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structpower__s_1a5ac083a645d964373f022d03df4849c8" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The name of the power up </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsepowerup.h" line="41" column="1" bodyfile="dumb-ways-to-memorize/parsepowerup.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpower__s_1a99fd6ee1c03eaf0de0f3e2c71237db69" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* UpdateInput) (power_t *self)</definition>
        <argsstring>)(power_t *self)</argsstring>
        <name>UpdateInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function to update the input for the power_up </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsepowerup.h" line="42" column="1" bodyfile="dumb-ways-to-memorize/parsepowerup.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpower__s_1a8e7faa42ca042b4df438d3c82427d2ee" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* GetTarg) (entity_t *self, entity_t **targ)</definition>
        <argsstring>)(entity_t *self, entity_t **targ)</argsstring>
        <name>GetTarg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function which calculates who or what is the specified target </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsepowerup.h" line="43" column="1" bodyfile="dumb-ways-to-memorize/parsepowerup.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpower__s_1a3cad653c3718314662c4a98659778999" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* UpdateUse) (power_t *power)</definition>
        <argsstring>)(power_t *power)</argsstring>
        <name>UpdateUse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function which updates the power_up </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsepowerup.h" line="44" column="1" bodyfile="dumb-ways-to-memorize/parsepowerup.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpower__s_1a0547996a48a142c5c5006ce1dd3020a5" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* DoPower) (entity_t *targ, entity_t *info)</definition>
        <argsstring>)(entity_t *targ, entity_t *info)</argsstring>
        <name>DoPower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function which does the power_up , called after all the updates </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsepowerup.h" line="45" column="1" bodyfile="dumb-ways-to-memorize/parsepowerup.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpower__s_1ab8646ebc46bf478ca09510b7a01c7223" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int uses</definition>
        <argsstring></argsstring>
        <name>uses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of times this power can get used - <simplesect kind="see"><para><ref refid="parsepowerup_8h_1a2231c1a21540cc394825ca5e5df7cab4" kindref="member">use_type_t</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsepowerup.h" line="46" column="1" bodyfile="dumb-ways-to-memorize/parsepowerup.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpower__s_1a92e471ab75337ebde8ffbddf14890542" prot="public" static="no" mutable="no">
        <type><ref refid="parsepowerup_8h_1a3482867a9df48b02d0dcfe459b6e81c5" kindref="member">info_type_t</ref></type>
        <definition>info_type_t info_type</definition>
        <argsstring></argsstring>
        <name>info_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The type of info the powe up needs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsepowerup.h" line="47" column="1" bodyfile="dumb-ways-to-memorize/parsepowerup.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpower__s_1a6729e2052b01af694ccadb9c401b57a0" prot="public" static="no" mutable="no">
        <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
        <definition>entity_t* target</definition>
        <argsstring></argsstring>
        <name>target</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Target for the power_up </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsepowerup.h" line="48" column="1" bodyfile="dumb-ways-to-memorize/parsepowerup.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpower__s_1abdbfaddb317fd1c7b9bdd58ea49d0395" prot="public" static="no" mutable="no">
        <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
        <definition>entity_t* info</definition>
        <argsstring></argsstring>
        <name>info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The information that the power_up uses </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsepowerup.h" line="49" column="1" bodyfile="dumb-ways-to-memorize/parsepowerup.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The structure for our power_up system.</para><para><simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/30/2016 </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="41">
        <label>sprite_s</label>
        <link refid="structsprite__s"/>
        <childnode refid="39" relation="usage">
          <edgelabel>mSize</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>mAnimations</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>entity_s</label>
        <link refid="structentity__s"/>
        <childnode refid="39" relation="usage">
          <edgelabel>mVelocity</edgelabel>
          <edgelabel>mPosition</edgelabel>
          <edgelabel>mAccel</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>mData</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>mAnimation</edgelabel>
          <edgelabel>mSprites</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>power_s</label>
        <link refid="structpower__s"/>
        <childnode refid="38" relation="usage">
          <edgelabel>target</edgelabel>
          <edgelabel>info</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>vec2_s</label>
        <link refid="structvec2__s"/>
      </node>
      <node id="40">
        <label>ai_function_s</label>
        <link refid="structai__function__s"/>
        <childnode refid="40" relation="usage">
          <edgelabel>mLink</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>Frame</label>
        <link refid="struct_frame"/>
        <childnode refid="39" relation="usage">
          <edgelabel>Position</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="dumb-ways-to-memorize/parsepowerup.h" line="40" column="1" bodyfile="dumb-ways-to-memorize/parsepowerup.h" bodystart="39" bodyend="51"/>
    <listofallmembers>
      <member refid="structpower__s_1a0547996a48a142c5c5006ce1dd3020a5" prot="public" virt="non-virtual"><scope>power_s</scope><name>DoPower</name></member>
      <member refid="structpower__s_1a8e7faa42ca042b4df438d3c82427d2ee" prot="public" virt="non-virtual"><scope>power_s</scope><name>GetTarg</name></member>
      <member refid="structpower__s_1abdbfaddb317fd1c7b9bdd58ea49d0395" prot="public" virt="non-virtual"><scope>power_s</scope><name>info</name></member>
      <member refid="structpower__s_1a92e471ab75337ebde8ffbddf14890542" prot="public" virt="non-virtual"><scope>power_s</scope><name>info_type</name></member>
      <member refid="structpower__s_1a5ac083a645d964373f022d03df4849c8" prot="public" virt="non-virtual"><scope>power_s</scope><name>name</name></member>
      <member refid="structpower__s_1a6729e2052b01af694ccadb9c401b57a0" prot="public" virt="non-virtual"><scope>power_s</scope><name>target</name></member>
      <member refid="structpower__s_1a99fd6ee1c03eaf0de0f3e2c71237db69" prot="public" virt="non-virtual"><scope>power_s</scope><name>UpdateInput</name></member>
      <member refid="structpower__s_1a3cad653c3718314662c4a98659778999" prot="public" virt="non-virtual"><scope>power_s</scope><name>UpdateUse</name></member>
      <member refid="structpower__s_1ab8646ebc46bf478ca09510b7a01c7223" prot="public" virt="non-virtual"><scope>power_s</scope><name>uses</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
