<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ai__interpret_8c" kind="file" language="C++">
    <compoundname>ai_interpret.c</compoundname>
    <includes refid="ai__interpret_8h" local="yes">ai_interpret.h</includes>
    <includes refid="entity_8h" local="yes">entity.h</includes>
    <includes refid="parsevariable_8h" local="yes">parsevariable.h</includes>
    <includes refid="parsepowerup_8h" local="yes">parsepowerup.h</includes>
    <includes refid="mystrings_8h" local="yes">mystrings.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="2">
        <label>globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>mystrings.h</label>
        <link refid="mystrings_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>parsepowerup.h</label>
        <link refid="parsepowerup_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>SDL.h</label>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>jsmn.h</label>
        <link refid="jsmn_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>parseobject.h</label>
        <link refid="parseobject_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>parsevariable.h</label>
        <link refid="parsevariable_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>entity.h</label>
        <link refid="entity_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="0">
        <label>dumb-ways-to-memorize/ai_interpret.c</label>
        <link refid="ai_interpret.c"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
      <node id="1">
        <label>ai_interpret.h</label>
        <link refid="ai__interpret_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ai__interpret_8c_1a449e08cb7867c0c42e9ad59904dcb947" prot="public" static="no" mutable="no">
        <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
        <definition>ai_function_t* gVariableAIs</definition>
        <argsstring></argsstring>
        <name>gVariableAIs</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The AI&apos;s of type variable </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="9" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ai__interpret_8c_1a86b6f52e393a91915168567c0c60709c" prot="public" static="no" mutable="no">
        <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
        <definition>ai_function_t* gPresetAIs</definition>
        <argsstring></argsstring>
        <name>gPresetAIs</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The AI&apos;s of type preset </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="10" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ai__interpret_8c_1a4d72b855449c33319a1ad798a9fc3fc7" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* gAI_Variables[]</definition>
        <argsstring>[]</argsstring>
        <name>gAI_Variables</name>
        <initializer>= {&quot;speed&quot;, &quot;frames&quot;, &quot;time&quot;, &quot;damage&quot;, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The variables to be parsed for ai data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="12" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ai__interpret_8c_1ad51a73747c32e703010066d34b299de2" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* gAI_Actions[]</definition>
        <argsstring>[]</argsstring>
        <name>gAI_Actions</name>
        <initializer>= {&quot;nothing&quot;, &quot;move&quot;, &quot;walk&quot;, &quot;jump&quot;,&quot;attack&quot;,0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The actions that are related to ai functions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="13" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ai__interpret_8c_1ab5cd8fb380975357a1de5deae48bf85f" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* gAI_Conditions[]</definition>
        <argsstring>[]</argsstring>
        <name>gAI_Conditions</name>
        <initializer>= {&quot;distance_player&quot;, &quot;distance_object&quot;, &quot;link_ai&quot;, &quot;link_action&quot;, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The conditions for the ai function to be executed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="14" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ai__interpret_8c_1a5ad36cd8551508ec69032e3dc782a1ba" prot="public" static="no" mutable="no">
        <type>void(*)(<ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *)</type>
        <definition>void(*)(entity_t *) GetFunctionAI(ai_function_t *data)</definition>
        <argsstring>(ai_function_t *data)</argsstring>
        <name>GetFunctionAI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a function pointer to the think function, given ai_function data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">parameter1</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the first parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null if it fails, else a GetFunctionAI(ai_function_t *data.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="238" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="238" bodyend="259"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ai__interpret_8c_1a899aebed78e696979cefcf070b027cad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NothingAI</definition>
        <argsstring>(entity_t *ent)</argsstring>
        <name>NothingAI</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>AI that does nothing for its think, except make sure values are set.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ent</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the ent.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="25" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="25" bodyend="48"/>
        <references refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" compoundref="entity_8h" startline="34">entity_s::mData</references>
        <references refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" compoundref="ai__interpret_8h" startline="101">ai_function_s::mFlags</references>
        <references refid="structentity__s_1afe71918d74f1053c28126544dce2f32b" compoundref="entity_8h" startline="30">entity_s::mCollisionType</references>
        <references refid="globals_8h_1a09e75d7e17aa0fd73648231363dcc13aa7e4186c206af11ddf23d64e3d19c4bdb" compoundref="globals_8h" startline="56">COLLISION_TYPE_RAGDOLL</references>
        <references refid="structentity__s_1a24bdc1525ed5bcbf2a8c7027c9e1db5f" compoundref="entity_8h" startline="24">entity_s::mNextThink</references>
        <references refid="game_8c_1a708e57fe7cda9dcf5fc11de7d0ec0e5e" compoundref="game_8c" startline="50">gCurrentTime</references>
        <references refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" compoundref="ai__interpret_8h" startline="102">ai_function_s::mVariables</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" compoundref="ai__interpret_8h" startline="58">AI_VAR_FRAMES</references>
        <references refid="globals_8h_1a33fabd29c10aabcb416dfbf5c84d3e08" compoundref="globals_8h" startline="135">FRAME_DELAY</references>
        <references refid="structentity__s_1a890d42df13307b51280d145a6b05211d" compoundref="entity_8h" startline="26">entity_s::mDamage</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" compoundref="ai__interpret_8h" startline="60">AI_VAR_DAMAGE</references>
        <references refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" compoundref="entity_8h" startline="27">entity_s::mWeight</references>
        <references refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" compoundref="ai__interpret_8h" startline="71">AI_FLAG_GRAVITY</references>
        <references refid="entity_8c_1a018dc9e984dbb58b293f263775b528c6" compoundref="entity_8c" startline="301" endline="314">FindCachedEntity</references>
        <references refid="structentity__s_1ad5201d7f075979ee60c684961d6a4ead" compoundref="entity_8h" startline="35">entity_s::mName</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" compoundref="ai__interpret_8h" startline="59">AI_VAR_TIME</references>
        <references refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" compoundref="ai__interpret_8h" startline="106">ai_function_s::mLink</references>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8c_1a10ee1734c344fd6bed742812af740c88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MoveAI</definition>
        <argsstring>(entity_t *ent)</argsstring>
        <name>MoveAI</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>AI to Move ent from point A to B w/o collisions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ent</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the ent.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016</para></simplesect>
Learn how to lerp. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="61" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="61" bodyend="93"/>
        <references refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" compoundref="entity_8h" startline="34">entity_s::mData</references>
        <references refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" compoundref="ai__interpret_8h" startline="101">ai_function_s::mFlags</references>
        <references refid="structentity__s_1afe71918d74f1053c28126544dce2f32b" compoundref="entity_8h" startline="30">entity_s::mCollisionType</references>
        <references refid="globals_8h_1a09e75d7e17aa0fd73648231363dcc13aadaf36ae19b0226a720a707942aea87e5" compoundref="globals_8h" startline="57">COLLISION_TYPE_CLIP</references>
        <references refid="structentity__s_1a24bdc1525ed5bcbf2a8c7027c9e1db5f" compoundref="entity_8h" startline="24">entity_s::mNextThink</references>
        <references refid="game_8c_1a708e57fe7cda9dcf5fc11de7d0ec0e5e" compoundref="game_8c" startline="50">gCurrentTime</references>
        <references refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" compoundref="ai__interpret_8h" startline="102">ai_function_s::mVariables</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" compoundref="ai__interpret_8h" startline="58">AI_VAR_FRAMES</references>
        <references refid="globals_8h_1a33fabd29c10aabcb416dfbf5c84d3e08" compoundref="globals_8h" startline="135">FRAME_DELAY</references>
        <references refid="structentity__s_1a890d42df13307b51280d145a6b05211d" compoundref="entity_8h" startline="26">entity_s::mDamage</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" compoundref="ai__interpret_8h" startline="60">AI_VAR_DAMAGE</references>
        <references refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" compoundref="entity_8h" startline="27">entity_s::mWeight</references>
        <references refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" compoundref="ai__interpret_8h" startline="71">AI_FLAG_GRAVITY</references>
        <references refid="entity_8c_1a018dc9e984dbb58b293f263775b528c6" compoundref="entity_8c" startline="301" endline="314">FindCachedEntity</references>
        <references refid="structentity__s_1ad5201d7f075979ee60c684961d6a4ead" compoundref="entity_8h" startline="35">entity_s::mName</references>
        <references refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" compoundref="globals_8h" startline="21">vec2_s::x</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" compoundref="ai__interpret_8h" startline="56">AI_VAR_DIR_X</references>
        <references refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" compoundref="globals_8h" startline="22">vec2_s::y</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" compoundref="ai__interpret_8h" startline="57">AI_VAR_DIR_Y</references>
        <references refid="globals_8h_1aa9e0b764ef33951a7a3e46dfa128837b" compoundref="mymath_8c" startline="41" endline="49">Vec2MultiplyScalar</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a52140aacf61b5d7be0229d847281ad2b" compoundref="ai__interpret_8h" startline="55">AI_VAR_SPEED</references>
        <references refid="globals_8h_1a0b07daa7e4d5ab9bc9842dbd07ffbd1c" compoundref="mymath_8c" startline="20" endline="28">Vec2Add</references>
        <references refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" compoundref="entity_8h" startline="37">entity_s::mVelocity</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" compoundref="ai__interpret_8h" startline="59">AI_VAR_TIME</references>
        <references refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" compoundref="ai__interpret_8h" startline="106">ai_function_s::mLink</references>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8c_1a187e8425c18dfb7aca0508d0a7057f44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WalkAI</definition>
        <argsstring>(entity_t *ent)</argsstring>
        <name>WalkAI</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>AI to &quot;walk&quot; entity from point A to B w/ collisions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ent</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the ent.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016</para></simplesect>
<xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>Lerp </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="106" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="106" bodyend="136"/>
        <references refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" compoundref="entity_8h" startline="34">entity_s::mData</references>
        <references refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" compoundref="ai__interpret_8h" startline="101">ai_function_s::mFlags</references>
        <references refid="structentity__s_1afe71918d74f1053c28126544dce2f32b" compoundref="entity_8h" startline="30">entity_s::mCollisionType</references>
        <references refid="globals_8h_1a09e75d7e17aa0fd73648231363dcc13aa7e4186c206af11ddf23d64e3d19c4bdb" compoundref="globals_8h" startline="56">COLLISION_TYPE_RAGDOLL</references>
        <references refid="structentity__s_1a24bdc1525ed5bcbf2a8c7027c9e1db5f" compoundref="entity_8h" startline="24">entity_s::mNextThink</references>
        <references refid="game_8c_1a708e57fe7cda9dcf5fc11de7d0ec0e5e" compoundref="game_8c" startline="50">gCurrentTime</references>
        <references refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" compoundref="ai__interpret_8h" startline="102">ai_function_s::mVariables</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" compoundref="ai__interpret_8h" startline="58">AI_VAR_FRAMES</references>
        <references refid="globals_8h_1a33fabd29c10aabcb416dfbf5c84d3e08" compoundref="globals_8h" startline="135">FRAME_DELAY</references>
        <references refid="structentity__s_1a890d42df13307b51280d145a6b05211d" compoundref="entity_8h" startline="26">entity_s::mDamage</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" compoundref="ai__interpret_8h" startline="60">AI_VAR_DAMAGE</references>
        <references refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" compoundref="entity_8h" startline="27">entity_s::mWeight</references>
        <references refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" compoundref="ai__interpret_8h" startline="71">AI_FLAG_GRAVITY</references>
        <references refid="entity_8c_1a018dc9e984dbb58b293f263775b528c6" compoundref="entity_8c" startline="301" endline="314">FindCachedEntity</references>
        <references refid="structentity__s_1ad5201d7f075979ee60c684961d6a4ead" compoundref="entity_8h" startline="35">entity_s::mName</references>
        <references refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" compoundref="globals_8h" startline="21">vec2_s::x</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" compoundref="ai__interpret_8h" startline="56">AI_VAR_DIR_X</references>
        <references refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" compoundref="globals_8h" startline="22">vec2_s::y</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" compoundref="ai__interpret_8h" startline="57">AI_VAR_DIR_Y</references>
        <references refid="globals_8h_1aa9e0b764ef33951a7a3e46dfa128837b" compoundref="mymath_8c" startline="41" endline="49">Vec2MultiplyScalar</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a52140aacf61b5d7be0229d847281ad2b" compoundref="ai__interpret_8h" startline="55">AI_VAR_SPEED</references>
        <references refid="globals_8h_1a0b07daa7e4d5ab9bc9842dbd07ffbd1c" compoundref="mymath_8c" startline="20" endline="28">Vec2Add</references>
        <references refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" compoundref="entity_8h" startline="37">entity_s::mVelocity</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" compoundref="ai__interpret_8h" startline="59">AI_VAR_TIME</references>
        <references refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" compoundref="ai__interpret_8h" startline="106">ai_function_s::mLink</references>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8c_1a9ca66c7d5e6e94ce7118ff064d84b086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void JumpAI</definition>
        <argsstring>(entity_t *ent)</argsstring>
        <name>JumpAI</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>AI to change velocity of the entity, defaults to a jumping movement.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ent</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the ent.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="147" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="147" bodyend="187"/>
        <references refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" compoundref="entity_8h" startline="34">entity_s::mData</references>
        <references refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" compoundref="ai__interpret_8h" startline="101">ai_function_s::mFlags</references>
        <references refid="structentity__s_1afe71918d74f1053c28126544dce2f32b" compoundref="entity_8h" startline="30">entity_s::mCollisionType</references>
        <references refid="globals_8h_1a09e75d7e17aa0fd73648231363dcc13aa7e4186c206af11ddf23d64e3d19c4bdb" compoundref="globals_8h" startline="56">COLLISION_TYPE_RAGDOLL</references>
        <references refid="structentity__s_1a24bdc1525ed5bcbf2a8c7027c9e1db5f" compoundref="entity_8h" startline="24">entity_s::mNextThink</references>
        <references refid="game_8c_1a708e57fe7cda9dcf5fc11de7d0ec0e5e" compoundref="game_8c" startline="50">gCurrentTime</references>
        <references refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" compoundref="ai__interpret_8h" startline="102">ai_function_s::mVariables</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" compoundref="ai__interpret_8h" startline="58">AI_VAR_FRAMES</references>
        <references refid="globals_8h_1a33fabd29c10aabcb416dfbf5c84d3e08" compoundref="globals_8h" startline="135">FRAME_DELAY</references>
        <references refid="structentity__s_1a890d42df13307b51280d145a6b05211d" compoundref="entity_8h" startline="26">entity_s::mDamage</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" compoundref="ai__interpret_8h" startline="60">AI_VAR_DAMAGE</references>
        <references refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" compoundref="entity_8h" startline="27">entity_s::mWeight</references>
        <references refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" compoundref="ai__interpret_8h" startline="71">AI_FLAG_GRAVITY</references>
        <references refid="entity_8c_1a018dc9e984dbb58b293f263775b528c6" compoundref="entity_8c" startline="301" endline="314">FindCachedEntity</references>
        <references refid="structentity__s_1ad5201d7f075979ee60c684961d6a4ead" compoundref="entity_8h" startline="35">entity_s::mName</references>
        <references refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" compoundref="entity_8h" startline="37">entity_s::mVelocity</references>
        <references refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" compoundref="globals_8h" startline="22">vec2_s::y</references>
        <references refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" compoundref="globals_8h" startline="21">vec2_s::x</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" compoundref="ai__interpret_8h" startline="56">AI_VAR_DIR_X</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" compoundref="ai__interpret_8h" startline="57">AI_VAR_DIR_Y</references>
        <references refid="globals_8h_1aa9e0b764ef33951a7a3e46dfa128837b" compoundref="mymath_8c" startline="41" endline="49">Vec2MultiplyScalar</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a52140aacf61b5d7be0229d847281ad2b" compoundref="ai__interpret_8h" startline="55">AI_VAR_SPEED</references>
        <references refid="globals_8h_1a0b07daa7e4d5ab9bc9842dbd07ffbd1c" compoundref="mymath_8c" startline="20" endline="28">Vec2Add</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" compoundref="ai__interpret_8h" startline="59">AI_VAR_TIME</references>
        <references refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" compoundref="ai__interpret_8h" startline="106">ai_function_s::mLink</references>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8c_1ae87f37befef63c363d791c175cbac93e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AttackAI</definition>
        <argsstring>(entity_t *ent)</argsstring>
        <name>AttackAI</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>AI for entity attacks, &quot;spawns&quot; a hit box / entity in front of Entity</para><para><simplesect kind="note"><para>Currently Untested</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ent</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the ent.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="200" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="200" bodyend="236"/>
        <references refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" compoundref="entity_8h" startline="34">entity_s::mData</references>
        <references refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" compoundref="ai__interpret_8h" startline="101">ai_function_s::mFlags</references>
        <references refid="structentity__s_1afe71918d74f1053c28126544dce2f32b" compoundref="entity_8h" startline="30">entity_s::mCollisionType</references>
        <references refid="globals_8h_1a09e75d7e17aa0fd73648231363dcc13aa7e4186c206af11ddf23d64e3d19c4bdb" compoundref="globals_8h" startline="56">COLLISION_TYPE_RAGDOLL</references>
        <references refid="structentity__s_1a24bdc1525ed5bcbf2a8c7027c9e1db5f" compoundref="entity_8h" startline="24">entity_s::mNextThink</references>
        <references refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" compoundref="ai__interpret_8h" startline="102">ai_function_s::mVariables</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" compoundref="ai__interpret_8h" startline="58">AI_VAR_FRAMES</references>
        <references refid="globals_8h_1a33fabd29c10aabcb416dfbf5c84d3e08" compoundref="globals_8h" startline="135">FRAME_DELAY</references>
        <references refid="structentity__s_1a890d42df13307b51280d145a6b05211d" compoundref="entity_8h" startline="26">entity_s::mDamage</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" compoundref="ai__interpret_8h" startline="60">AI_VAR_DAMAGE</references>
        <references refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" compoundref="entity_8h" startline="27">entity_s::mWeight</references>
        <references refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" compoundref="ai__interpret_8h" startline="71">AI_FLAG_GRAVITY</references>
        <references refid="entity_8c_1a018dc9e984dbb58b293f263775b528c6" compoundref="entity_8c" startline="301" endline="314">FindCachedEntity</references>
        <references refid="structentity__s_1ad5201d7f075979ee60c684961d6a4ead" compoundref="entity_8h" startline="35">entity_s::mName</references>
        <references refid="structai__function__s_1ad290bc1093389f523421449cfcab6a9c" compoundref="ai__interpret_8h" startline="104">ai_function_s::mObject</references>
        <references refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" compoundref="entity_8h" startline="37">entity_s::mVelocity</references>
        <references refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" compoundref="globals_8h" startline="21">vec2_s::x</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" compoundref="ai__interpret_8h" startline="56">AI_VAR_DIR_X</references>
        <references refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" compoundref="globals_8h" startline="22">vec2_s::y</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" compoundref="ai__interpret_8h" startline="57">AI_VAR_DIR_Y</references>
        <references refid="parsepowerup_8c_1a050ba84fee976778201dc7aff3e6ff41" compoundref="parsepowerup_8c" startline="41" endline="57">Spawn</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" compoundref="ai__interpret_8h" startline="59">AI_VAR_TIME</references>
        <references refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" compoundref="ai__interpret_8h" startline="106">ai_function_s::mLink</references>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8c_1a487d35ce74f749b0bfb024a900699f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
        <definition>ai_function_t* ParseAI</definition>
        <argsstring>(object_t *obj, char *g_str, char **variables)</argsstring>
        <name>ParseAI</name>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>g_str</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>variables</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses AI behavior using the variables given and the AI obj/file specified.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">g_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">variables</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the variables.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null if it fails, else a pointer to an ai_function_t.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="261" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="261" bodyend="391"/>
        <references refid="parseobject_8c_1a0d7610fbd167c6f81519e6ab3403e3bd" compoundref="parseobject_8c" startline="120" endline="142">FindObject</references>
        <references refid="ai__interpret_8h_1aa438859ab4448dbffef630c7df6fa8da" compoundref="ai__interpret_8h" startline="13">AI_VAR_STR</references>
        <references refid="ai__interpret_8h_1a8241201468b0b49abac3940cb0527ed7" compoundref="ai__interpret_8h" startline="10">AI_FUNCTION_OBJECT</references>
        <references refid="structobject__s_1a5ac083a645d964373f022d03df4849c8" compoundref="parseobject_8h" startline="24">object_s::name</references>
        <references refid="mystrings_8c_1a6466498df69994b55bb62b9b53652142" compoundref="mystrings_8c" startline="10" endline="32">FindKey</references>
        <references refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" compoundref="parseobject_8h" startline="22">object_s::keys</references>
        <references refid="ai__interpret_8h_1aa3f803bbc58a2e44d676b2d4e0a55e66" compoundref="ai__interpret_8h" startline="26">AI_TYPE_STR</references>
        <references refid="mystrings_8c_1a78d7d9580e10b30e6409ebfeb29e5cfe" compoundref="mystrings_8c" startline="34" endline="51">JsmnToString</references>
        <references refid="structobject__s_1ab74cb2267ebadadd15e6bb59e85cc3f9" compoundref="parseobject_8h" startline="23">object_s::values</references>
        <references refid="globals_8h_1ab5272b6a1f2bf961c7534ec91a243715" compoundref="mymath_8c" startline="51" endline="64">CountMem</references>
        <references refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" compoundref="parseobject_8h" startline="21">object_s::children</references>
        <references refid="ai__interpret_8c_1a4d72b855449c33319a1ad798a9fc3fc7" compoundref="ai__interpret_8c" startline="12">gAI_Variables</references>
        <references refid="ai__interpret_8c_1a38a992ac4f024da776101ad1a2957ac4" compoundref="ai__interpret_8c" startline="501" endline="547">SetAI_Var</references>
        <references refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" compoundref="mystrings_8c" startline="92" endline="119">StrToInt</references>
        <references refid="ai__interpret_8c_1ad51a73747c32e703010066d34b299de2" compoundref="ai__interpret_8c" startline="13">gAI_Actions</references>
        <references refid="ai__interpret_8c_1a5d87dca860c5320136e684cbe422ca21" compoundref="ai__interpret_8c" startline="549" endline="625">SetAI_Action</references>
        <references refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffaa8c277933e2d21a6fde065ab745d0fdf" compoundref="ai__interpret_8h" startline="78">AI_ACTION_NOTHING</references>
        <references refid="ai__interpret_8c_1ab5cd8fb380975357a1de5deae48bf85f" compoundref="ai__interpret_8c" startline="14">gAI_Conditions</references>
        <references refid="parseobject_8c_1aef0cb86d9b54e11206d154c369cb9a7e" compoundref="parseobject_8c" startline="144" endline="168">CountObjectMembers</references>
        <references refid="ai__interpret_8c_1a16e24cd82a74fa54781c203aaccec738" compoundref="ai__interpret_8c" startline="627" endline="662">SetAI_Check</references>
        <references refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" compoundref="ai__interpret_8h" startline="101">ai_function_s::mFlags</references>
        <references refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" compoundref="ai__interpret_8h" startline="71">AI_FLAG_GRAVITY</references>
        <references refid="structai__function__s_1af4cc7fbcaa3a1268cb1a174203486a8c" compoundref="ai__interpret_8h" startline="99">ai_function_s::mType</references>
        <references refid="ai__interpret_8c_1a38d0ac016fd6a956b4fcdd5eefdff0c1" compoundref="ai__interpret_8c" startline="697" endline="707">StrToAI_Type</references>
        <references refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" compoundref="ai__interpret_8h" startline="106">ai_function_s::mLink</references>
        <references refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2f4801c84fb1ead492802fc8b93d1619" compoundref="ai__interpret_8h" startline="70">AI_FLAG_CHECK_OBJECT</references>
        <references refid="ai__interpret_8h_1a20a59586d1951b3e6c3353504b58332b" compoundref="ai__interpret_8h" startline="33">AI_SPECIFY_OBJ_STR</references>
        <references refid="structai__function__s_1ae9037e9c23c85312470746c5c4379814" compoundref="ai__interpret_8h" startline="105">ai_function_s::mObjectCheck</references>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8c_1a325c62634a19a96fcd9117b5f59968d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
        <definition>ai_function_t* ParsePresetAI</definition>
        <argsstring>(object_t *obj, char *g_str)</argsstring>
        <name>ParsePresetAI</name>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>g_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse a preset AI, with values determined by whats in the file.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">g_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null if it fails, else a pointer to an ai_function_t.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="393" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="393" bodyend="499"/>
        <references refid="parseobject_8c_1a0d7610fbd167c6f81519e6ab3403e3bd" compoundref="parseobject_8c" startline="120" endline="142">FindObject</references>
        <references refid="ai__interpret_8h_1aa438859ab4448dbffef630c7df6fa8da" compoundref="ai__interpret_8h" startline="13">AI_VAR_STR</references>
        <references refid="ai__interpret_8h_1a8241201468b0b49abac3940cb0527ed7" compoundref="ai__interpret_8h" startline="10">AI_FUNCTION_OBJECT</references>
        <references refid="structobject__s_1a5ac083a645d964373f022d03df4849c8" compoundref="parseobject_8h" startline="24">object_s::name</references>
        <references refid="mystrings_8c_1a6466498df69994b55bb62b9b53652142" compoundref="mystrings_8c" startline="10" endline="32">FindKey</references>
        <references refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" compoundref="parseobject_8h" startline="22">object_s::keys</references>
        <references refid="ai__interpret_8h_1aa3f803bbc58a2e44d676b2d4e0a55e66" compoundref="ai__interpret_8h" startline="26">AI_TYPE_STR</references>
        <references refid="mystrings_8c_1a78d7d9580e10b30e6409ebfeb29e5cfe" compoundref="mystrings_8c" startline="34" endline="51">JsmnToString</references>
        <references refid="structobject__s_1ab74cb2267ebadadd15e6bb59e85cc3f9" compoundref="parseobject_8h" startline="23">object_s::values</references>
        <references refid="globals_8h_1ab5272b6a1f2bf961c7534ec91a243715" compoundref="mymath_8c" startline="51" endline="64">CountMem</references>
        <references refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" compoundref="parseobject_8h" startline="21">object_s::children</references>
        <references refid="ai__interpret_8c_1a4d72b855449c33319a1ad798a9fc3fc7" compoundref="ai__interpret_8c" startline="12">gAI_Variables</references>
        <references refid="mystrings_8c_1ac183085aec4f8b1867b5737aacb9c37f" compoundref="mystrings_8c" startline="53" endline="82">FindValue</references>
        <references refid="ai__interpret_8c_1a38a992ac4f024da776101ad1a2957ac4" compoundref="ai__interpret_8c" startline="501" endline="547">SetAI_Var</references>
        <references refid="ai__interpret_8c_1ad51a73747c32e703010066d34b299de2" compoundref="ai__interpret_8c" startline="13">gAI_Actions</references>
        <references refid="ai__interpret_8c_1a5d87dca860c5320136e684cbe422ca21" compoundref="ai__interpret_8c" startline="549" endline="625">SetAI_Action</references>
        <references refid="ai__interpret_8c_1ab5cd8fb380975357a1de5deae48bf85f" compoundref="ai__interpret_8c" startline="14">gAI_Conditions</references>
        <references refid="parseobject_8c_1aef0cb86d9b54e11206d154c369cb9a7e" compoundref="parseobject_8c" startline="144" endline="168">CountObjectMembers</references>
        <references refid="ai__interpret_8c_1a16e24cd82a74fa54781c203aaccec738" compoundref="ai__interpret_8c" startline="627" endline="662">SetAI_Check</references>
        <references refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" compoundref="ai__interpret_8h" startline="101">ai_function_s::mFlags</references>
        <references refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" compoundref="ai__interpret_8h" startline="71">AI_FLAG_GRAVITY</references>
        <references refid="structai__function__s_1af4cc7fbcaa3a1268cb1a174203486a8c" compoundref="ai__interpret_8h" startline="99">ai_function_s::mType</references>
        <references refid="ai__interpret_8c_1a38d0ac016fd6a956b4fcdd5eefdff0c1" compoundref="ai__interpret_8c" startline="697" endline="707">StrToAI_Type</references>
        <references refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" compoundref="ai__interpret_8h" startline="106">ai_function_s::mLink</references>
        <references refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2f4801c84fb1ead492802fc8b93d1619" compoundref="ai__interpret_8h" startline="70">AI_FLAG_CHECK_OBJECT</references>
        <references refid="ai__interpret_8h_1a20a59586d1951b3e6c3353504b58332b" compoundref="ai__interpret_8h" startline="33">AI_SPECIFY_OBJ_STR</references>
        <references refid="structai__function__s_1ae9037e9c23c85312470746c5c4379814" compoundref="ai__interpret_8h" startline="105">ai_function_s::mObjectCheck</references>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8c_1a38a992ac4f024da776101ad1a2957ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetAI_Var</definition>
        <argsstring>(ai_function_t *function, char *data_str, char *var_str)</argsstring>
        <name>SetAI_Var</name>
        <param>
          <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>data_str</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>var_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets AI variables in ai_function-&gt;mVariables.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">function</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">data_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the data string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">var_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the variable string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="501" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="501" bodyend="547"/>
        <references refid="ai__interpret_8h_1ada4ce31f6b1ccb11b329f13b403fbb5b" compoundref="ai__interpret_8h" startline="18">AI_VAR_SPEED_STR</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a52140aacf61b5d7be0229d847281ad2b" compoundref="ai__interpret_8h" startline="55">AI_VAR_SPEED</references>
        <references refid="ai__interpret_8h_1a4fd3497e396da261e5049f3125e20d29" compoundref="ai__interpret_8h" startline="38">AI_BASE_SPEED</references>
        <references refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" compoundref="mystrings_8c" startline="92" endline="119">StrToInt</references>
        <references refid="ai__interpret_8h_1af77f162f72ac7de280a09bf538af8714" compoundref="ai__interpret_8h" startline="15">AI_VAR_FRAMES_STR</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" compoundref="ai__interpret_8h" startline="58">AI_VAR_FRAMES</references>
        <references refid="ai__interpret_8h_1a2072f0a2f2335d17070a938b2b3f378d" compoundref="ai__interpret_8h" startline="39">AI_BASE_THINK_FRAMES</references>
        <references refid="ai__interpret_8h_1acb5318abad3a57b7184c30bb2c7777c9" compoundref="ai__interpret_8h" startline="16">AI_VAR_TIME_STR</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" compoundref="ai__interpret_8h" startline="59">AI_VAR_TIME</references>
        <references refid="ai__interpret_8h_1a1026f6edc576815f9c9ba6e4da0690a0" compoundref="ai__interpret_8h" startline="17">AI_VAR_DAMAGE_STR</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" compoundref="ai__interpret_8h" startline="60">AI_VAR_DAMAGE</references>
        <references refid="ai__interpret_8h_1a9e473d026b1cb0faf976cd27350420f5" compoundref="ai__interpret_8h" startline="40">AI_BASE_DAMAGE</references>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8c_1a5d87dca860c5320136e684cbe422ca21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetAI_Action</definition>
        <argsstring>(ai_function_t *function, object_t *obj, jsmntok_t *tok, char *g_str, char *action_str)</argsstring>
        <name>SetAI_Action</name>
        <param>
          <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
          <declname>function</declname>
        </param>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="structjsmntok__t" kindref="compound">jsmntok_t</ref> *</type>
          <declname>tok</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>g_str</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>action_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets AI action defined in ai_actions to the ai_function</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">function</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">tok</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the tok. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">g_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">action_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the action string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="549" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="549" bodyend="625"/>
        <references refid="ai__interpret_8h_1ab18b182365b15628c10327316844aab8" compoundref="ai__interpret_8h" startline="21">AI_ACTION_NOTHING_STR</references>
        <references refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffaa8c277933e2d21a6fde065ab745d0fdf" compoundref="ai__interpret_8h" startline="78">AI_ACTION_NOTHING</references>
        <references refid="ai__interpret_8h_1ab64c56f26a1b1a7715487c72b9f28dbd" compoundref="ai__interpret_8h" startline="22">AI_ACTION_MOVE_STR</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" compoundref="ai__interpret_8h" startline="56">AI_VAR_DIR_X</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" compoundref="ai__interpret_8h" startline="57">AI_VAR_DIR_Y</references>
        <references refid="parsevariable_8c_1aece06ba78503ca86b77daa6c0f64d01f" compoundref="parsevariable_8c" startline="186" endline="201">ParseToVec2</references>
        <references refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" compoundref="globals_8h" startline="21">vec2_s::x</references>
        <references refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" compoundref="globals_8h" startline="22">vec2_s::y</references>
        <references refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa6b5238de81f107855780253611db0147" compoundref="ai__interpret_8h" startline="79">AI_ACTION_MOVE</references>
        <references refid="ai__interpret_8h_1abc7fe2d04eb73a338cb3fe88f72844a8" compoundref="ai__interpret_8h" startline="23">AI_ACTION_WALK_STR</references>
        <references refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa5a4cdc97564cafbc4ce6b8a11eec0ce4" compoundref="ai__interpret_8h" startline="80">AI_ACTION_WALK</references>
        <references refid="ai__interpret_8h_1a46d6cd208af1d4bf3095ee3c7a1e739b" compoundref="ai__interpret_8h" startline="24">AI_ACTION_JUMP_STR</references>
        <references refid="ai__interpret_8h_1aab127305df5b44889696f3220565be08" compoundref="ai__interpret_8h" startline="37">AI_BASE_JUMP</references>
        <references refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa10840c0a524082dc68990373e17f2128" compoundref="ai__interpret_8h" startline="81">AI_ACTION_JUMP</references>
        <references refid="ai__interpret_8h_1adede65c5d71cf37ecdd755a6909f7a81" compoundref="ai__interpret_8h" startline="25">AI_ACTION_ATTACK_STR</references>
        <references refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffacd9af8f735c788a43a9a38b14748691a" compoundref="ai__interpret_8h" startline="82">AI_ACTION_ATTACK</references>
        <references refid="mystrings_8c_1a78d7d9580e10b30e6409ebfeb29e5cfe" compoundref="mystrings_8c" startline="34" endline="51">JsmnToString</references>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8c_1a16e24cd82a74fa54781c203aaccec738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetAI_Check</definition>
        <argsstring>(ai_function_t *function, char **variables_str, char *data_str, char *check_str)</argsstring>
        <name>SetAI_Check</name>
        <param>
          <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>variables_str</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>data_str</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>check_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets checks that need to occur for the ai_function to be called.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">function</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">variables_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the variables string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">data_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the data string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">check_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the check string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="627" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="627" bodyend="662"/>
        <references refid="ai__interpret_8h_1a13cbd28a585c1577751efca68da844fa" compoundref="ai__interpret_8h" startline="34">AI_LINK_ACTION</references>
        <references refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a682c194be42cbd5ca0d0deabb0239876" compoundref="ai__interpret_8h" startline="61">AI_VAR_CHECK</references>
        <references refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" compoundref="mystrings_8c" startline="92" endline="119">StrToInt</references>
        <references refid="ai__interpret_8h_1a743b388cb87c1457c328fafa797372fe" compoundref="ai__interpret_8h" startline="31">AI_CHECK_PLAYER_STR</references>
        <references refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a1e62188aa9d46d657686622ed91447e2" compoundref="ai__interpret_8h" startline="69">AI_FLAG_CHECK_PLAYER</references>
        <references refid="ai__interpret_8h_1ae8363acda061b3665d4092cbb0f860ac" compoundref="ai__interpret_8h" startline="32">AI_CHECK_OBJECT_STR</references>
        <references refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2f4801c84fb1ead492802fc8b93d1619" compoundref="ai__interpret_8h" startline="70">AI_FLAG_CHECK_OBJECT</references>
        <references refid="ai__interpret_8h_1a678f1e1d230bf4bc224407b101e89d30" compoundref="ai__interpret_8h" startline="35">AI_LINK_AI</references>
        <references refid="mystrings_8c_1a496e2427daae7d276aa1c25bf7173f9b" compoundref="mystrings_8c" startline="192" endline="261">ConvertFileToUseable</references>
        <references refid="parseobject_8c_1abeb996817aa47a5e463a47275c897483" compoundref="parseobject_8c" startline="8" endline="117">ParseToObject</references>
        <references refid="ai__interpret_8c_1a487d35ce74f749b0bfb024a900699f37" compoundref="ai__interpret_8c" startline="261" endline="391">ParseAI</references>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8c_1a766fc5dc0fd99733613cc7a396f6efdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int InitAISystem</definition>
        <argsstring>()</argsstring>
        <name>InitAISystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init AI system, similar to Entity init, for now....</para><para><simplesect kind="return"><para>An int.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="664" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="664" bodyend="684"/>
        <references refid="ai__interpret_8h_1adfd8cb6f070423c4a34b4009b0fb47e3" compoundref="ai__interpret_8h" startline="8">MAX_AI</references>
        <references refid="ai__interpret_8c_1a7a593ea725968a09171ad562877652a1" compoundref="ai__interpret_8c" startline="686" endline="695">ShutdownAISystem</references>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8c_1a7a593ea725968a09171ad562877652a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShutdownAISystem</definition>
        <argsstring>()</argsstring>
        <name>ShutdownAISystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shutdown AI system, just frees the global variables simple.</para><para><simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/30/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="686" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="686" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8c_1a38d0ac016fd6a956b4fcdd5eefdff0c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159" kindref="member">ai_type_t</ref></type>
        <definition>ai_type_t StrToAI_Type</definition>
        <argsstring>(const char *str)</argsstring>
        <name>StrToAI_Type</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts a str to an AI type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>str as an ai_type_t.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.c" line="697" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="697" bodyend="707"/>
        <references refid="ai__interpret_8h_1a81d12be75ce1905126f4e82e9edb951a" compoundref="ai__interpret_8h" startline="27">AI_TYPE_PRESET_STR</references>
        <references refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159a6122d777385c6b1ae97b800595e46e54" compoundref="ai__interpret_8h" startline="46">AI_TYPE_PRESET</references>
        <references refid="ai__interpret_8h_1aee545ee676dd6fbcc4ce58b97d821f4e" compoundref="ai__interpret_8h" startline="28">AI_TYPE_VARIABLE_STR</references>
        <references refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159ac795c273b7af067af5b7fabfa7a711ab" compoundref="ai__interpret_8h" startline="47">AI_TYPE_VARIABLE</references>
        <references refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159adcedad9c8bae06b1e0a33bf7534bb8be" compoundref="ai__interpret_8h" startline="45">AI_TYPE_NULL</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ai__interpret_8h" kindref="compound">ai_interpret.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="entity_8h" kindref="compound">entity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parsevariable_8h" kindref="compound">parsevariable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parsepowerup_8h" kindref="compound">parsepowerup.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mystrings_8h" kindref="compound">mystrings.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="ai__interpret_8h_1a449e08cb7867c0c42e9ad59904dcb947" refkind="member"><highlight class="normal"><ref refid="structai__function__s" kindref="compound">ai_function_t</ref><sp/>*<sp/><ref refid="ai__interpret_8c_1a449e08cb7867c0c42e9ad59904dcb947" kindref="member">gVariableAIs</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10" refid="ai__interpret_8h_1a86b6f52e393a91915168567c0c60709c" refkind="member"><highlight class="normal"><ref refid="structai__function__s" kindref="compound">ai_function_t</ref><sp/>*<sp/><ref refid="ai__interpret_8c_1a86b6f52e393a91915168567c0c60709c" kindref="member">gPresetAIs</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="ai__interpret_8h_1a4d72b855449c33319a1ad798a9fc3fc7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="ai__interpret_8c_1a4d72b855449c33319a1ad798a9fc3fc7" kindref="member">gAI_Variables</ref>[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;speed&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;frames&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;damage&quot;</highlight><highlight class="normal">,<sp/>0};</highlight></codeline>
<codeline lineno="13" refid="ai__interpret_8h_1ad51a73747c32e703010066d34b299de2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="ai__interpret_8c_1ad51a73747c32e703010066d34b299de2" kindref="member">gAI_Actions</ref>[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;nothing&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;move&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;walk&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;jump&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;attack&quot;</highlight><highlight class="normal">,0};</highlight></codeline>
<codeline lineno="14" refid="ai__interpret_8h_1ab5cd8fb380975357a1de5deae48bf85f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="ai__interpret_8c_1ab5cd8fb380975357a1de5deae48bf85f" kindref="member">gAI_Conditions</ref>[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;distance_player&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;distance_object&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;link_ai&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;link_action&quot;</highlight><highlight class="normal">,<sp/>0};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="ai__interpret_8c_1a899aebed78e696979cefcf070b027cad" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1a899aebed78e696979cefcf070b027cad" kindref="member">NothingAI</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*ent)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvec2__s" kindref="compound">vec2_t</ref><sp/>temp_vec2;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref><sp/>||<sp/>!ent)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;MoveAI<sp/>given<sp/>a<sp/>null<sp/>paramerter<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" kindref="member">mFlags</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Standard<sp/>Vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1afe71918d74f1053c28126544dce2f32b" kindref="member">mCollisionType</ref><sp/>=<sp/><ref refid="globals_8h_1a09e75d7e17aa0fd73648231363dcc13aa7e4186c206af11ddf23d64e3d19c4bdb" kindref="member">COLLISION_TYPE_RAGDOLL</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a24bdc1525ed5bcbf2a8c7027c9e1db5f" kindref="member">mNextThink</ref><sp/>=<sp/><ref refid="game_8c_1a708e57fe7cda9dcf5fc11de7d0ec0e5e" kindref="member">gCurrentTime</ref><sp/>+<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" kindref="member">AI_VAR_FRAMES</ref>]*<ref refid="globals_8h_1a33fabd29c10aabcb416dfbf5c84d3e08" kindref="member">FRAME_DELAY</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a890d42df13307b51280d145a6b05211d" kindref="member">mDamage</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" kindref="member">AI_VAR_DAMAGE</ref>];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" kindref="member">mWeight</ref><sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" kindref="member">AI_FLAG_GRAVITY</ref>)<sp/>?<sp/>0<sp/>:<sp/><ref refid="entity_8c_1a018dc9e984dbb58b293f263775b528c6" kindref="member">FindCachedEntity</ref>(ent-&gt;<ref refid="structentity__s_1ad5201d7f075979ee60c684961d6a4ead" kindref="member">mName</ref>)-&gt;<ref refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" kindref="member">mWeight</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>--ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" kindref="member">AI_VAR_TIME</ref>]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" kindref="member">AI_VAR_TIME</ref>]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" kindref="member">mLink</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="ai__interpret_8c_1a10ee1734c344fd6bed742812af740c88" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1a10ee1734c344fd6bed742812af740c88" kindref="member">MoveAI</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*ent)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvec2__s" kindref="compound">vec2_t</ref><sp/>temp_vec2;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref><sp/>||<sp/>!ent)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;MoveAI<sp/>given<sp/>a<sp/>null<sp/>paramerter<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" kindref="member">mFlags</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Standard<sp/>Vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1afe71918d74f1053c28126544dce2f32b" kindref="member">mCollisionType</ref><sp/>=<sp/><ref refid="globals_8h_1a09e75d7e17aa0fd73648231363dcc13aadaf36ae19b0226a720a707942aea87e5" kindref="member">COLLISION_TYPE_CLIP</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a24bdc1525ed5bcbf2a8c7027c9e1db5f" kindref="member">mNextThink</ref><sp/>=<sp/><ref refid="game_8c_1a708e57fe7cda9dcf5fc11de7d0ec0e5e" kindref="member">gCurrentTime</ref><sp/>+<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" kindref="member">AI_VAR_FRAMES</ref>]*<ref refid="globals_8h_1a33fabd29c10aabcb416dfbf5c84d3e08" kindref="member">FRAME_DELAY</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a890d42df13307b51280d145a6b05211d" kindref="member">mDamage</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" kindref="member">AI_VAR_DAMAGE</ref>];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" kindref="member">mWeight</ref><sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" kindref="member">AI_FLAG_GRAVITY</ref>)<sp/>?<sp/>0<sp/>:<sp/><ref refid="entity_8c_1a018dc9e984dbb58b293f263775b528c6" kindref="member">FindCachedEntity</ref>(ent-&gt;<ref refid="structentity__s_1ad5201d7f075979ee60c684961d6a4ead" kindref="member">mName</ref>)-&gt;<ref refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" kindref="member">mWeight</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_vec2.<ref refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_vec2.<ref refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" kindref="member">AI_VAR_DIR_Y</ref>];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>normalize<sp/>temp_vec2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="globals_8h_1aa9e0b764ef33951a7a3e46dfa128837b" kindref="member">Vec2MultiplyScalar</ref>(&amp;temp_vec2,ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a52140aacf61b5d7be0229d847281ad2b" kindref="member">AI_VAR_SPEED</ref>],&amp;temp_vec2);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="globals_8h_1a0b07daa7e4d5ab9bc9842dbd07ffbd1c" kindref="member">Vec2Add</ref>(&amp;temp_vec2,<sp/>&amp;ent-&gt;<ref refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" kindref="member">mVelocity</ref>,<sp/>&amp;ent-&gt;<ref refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" kindref="member">mVelocity</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>--ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" kindref="member">AI_VAR_TIME</ref>]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" kindref="member">AI_VAR_TIME</ref>]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" kindref="member">mLink</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="ai__interpret_8c_1a187e8425c18dfb7aca0508d0a7057f44" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1a187e8425c18dfb7aca0508d0a7057f44" kindref="member">WalkAI</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*ent)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvec2__s" kindref="compound">vec2_t</ref><sp/>temp_vec2;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref><sp/>||<sp/>!ent)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;MoveAI<sp/>given<sp/>a<sp/>null<sp/>paramerter<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" kindref="member">mFlags</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Standard<sp/>Vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1afe71918d74f1053c28126544dce2f32b" kindref="member">mCollisionType</ref><sp/>=<sp/><ref refid="globals_8h_1a09e75d7e17aa0fd73648231363dcc13aa7e4186c206af11ddf23d64e3d19c4bdb" kindref="member">COLLISION_TYPE_RAGDOLL</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a24bdc1525ed5bcbf2a8c7027c9e1db5f" kindref="member">mNextThink</ref><sp/>=<sp/><ref refid="game_8c_1a708e57fe7cda9dcf5fc11de7d0ec0e5e" kindref="member">gCurrentTime</ref><sp/>+<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" kindref="member">AI_VAR_FRAMES</ref>]*<ref refid="globals_8h_1a33fabd29c10aabcb416dfbf5c84d3e08" kindref="member">FRAME_DELAY</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a890d42df13307b51280d145a6b05211d" kindref="member">mDamage</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" kindref="member">AI_VAR_DAMAGE</ref>];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" kindref="member">mWeight</ref><sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" kindref="member">AI_FLAG_GRAVITY</ref>)<sp/>?<sp/>0<sp/>:<sp/><ref refid="entity_8c_1a018dc9e984dbb58b293f263775b528c6" kindref="member">FindCachedEntity</ref>(ent-&gt;<ref refid="structentity__s_1ad5201d7f075979ee60c684961d6a4ead" kindref="member">mName</ref>)-&gt;<ref refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" kindref="member">mWeight</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_vec2.<ref refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_vec2.<ref refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" kindref="member">AI_VAR_DIR_Y</ref>];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>normalize<sp/>temp_vec2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="globals_8h_1aa9e0b764ef33951a7a3e46dfa128837b" kindref="member">Vec2MultiplyScalar</ref>(&amp;temp_vec2,ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a52140aacf61b5d7be0229d847281ad2b" kindref="member">AI_VAR_SPEED</ref>],&amp;temp_vec2);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="globals_8h_1a0b07daa7e4d5ab9bc9842dbd07ffbd1c" kindref="member">Vec2Add</ref>(&amp;temp_vec2,<sp/>&amp;ent-&gt;<ref refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" kindref="member">mVelocity</ref>,<sp/>&amp;ent-&gt;<ref refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" kindref="member">mVelocity</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>--ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" kindref="member">AI_VAR_TIME</ref>]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" kindref="member">AI_VAR_TIME</ref>]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" kindref="member">mLink</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="ai__interpret_8c_1a9ca66c7d5e6e94ce7118ff064d84b086" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1a9ca66c7d5e6e94ce7118ff064d84b086" kindref="member">JumpAI</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*ent)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvec2__s" kindref="compound">vec2_t</ref><sp/>temp_vec2;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref><sp/>||<sp/>!ent)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;MoveAI<sp/>given<sp/>a<sp/>null<sp/>paramerter<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" kindref="member">mFlags</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Standard<sp/>Vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1afe71918d74f1053c28126544dce2f32b" kindref="member">mCollisionType</ref><sp/>=<sp/><ref refid="globals_8h_1a09e75d7e17aa0fd73648231363dcc13aa7e4186c206af11ddf23d64e3d19c4bdb" kindref="member">COLLISION_TYPE_RAGDOLL</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a24bdc1525ed5bcbf2a8c7027c9e1db5f" kindref="member">mNextThink</ref><sp/>=<sp/><ref refid="game_8c_1a708e57fe7cda9dcf5fc11de7d0ec0e5e" kindref="member">gCurrentTime</ref><sp/>+<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" kindref="member">AI_VAR_FRAMES</ref>]*<ref refid="globals_8h_1a33fabd29c10aabcb416dfbf5c84d3e08" kindref="member">FRAME_DELAY</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a890d42df13307b51280d145a6b05211d" kindref="member">mDamage</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" kindref="member">AI_VAR_DAMAGE</ref>];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" kindref="member">mWeight</ref><sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" kindref="member">AI_FLAG_GRAVITY</ref>)<sp/>?<sp/>0<sp/>:<sp/><ref refid="entity_8c_1a018dc9e984dbb58b293f263775b528c6" kindref="member">FindCachedEntity</ref>(ent-&gt;<ref refid="structentity__s_1ad5201d7f075979ee60c684961d6a4ead" kindref="member">mName</ref>)-&gt;<ref refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" kindref="member">mWeight</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ent-&gt;<ref refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" kindref="member">mVelocity</ref>.<ref refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_vec2.<ref refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_vec2.<ref refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" kindref="member">AI_VAR_DIR_Y</ref>];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>normalize<sp/>temp_vec2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="globals_8h_1aa9e0b764ef33951a7a3e46dfa128837b" kindref="member">Vec2MultiplyScalar</ref>(&amp;temp_vec2,ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a52140aacf61b5d7be0229d847281ad2b" kindref="member">AI_VAR_SPEED</ref>],&amp;temp_vec2);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(ent-&gt;<ref refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" kindref="member">mVelocity</ref>.<ref refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref><sp/>==<sp/>temp_vec2.<ref refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>)<sp/>&amp;<sp/>(ent-&gt;<ref refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" kindref="member">mVelocity</ref>.<ref refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref><sp/>==<sp/>temp_vec2.<ref refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>)<sp/>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="globals_8h_1a0b07daa7e4d5ab9bc9842dbd07ffbd1c" kindref="member">Vec2Add</ref>(&amp;temp_vec2,<sp/>&amp;ent-&gt;<ref refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" kindref="member">mVelocity</ref>,<sp/>&amp;ent-&gt;<ref refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" kindref="member">mVelocity</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>--ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" kindref="member">AI_VAR_TIME</ref>]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" kindref="member">AI_VAR_TIME</ref>]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" kindref="member">mLink</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="ai__interpret_8c_1ae87f37befef63c363d791c175cbac93e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1ae87f37befef63c363d791c175cbac93e" kindref="member">AttackAI</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*ent)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvec2__s" kindref="compound">vec2_t</ref><sp/>temp_vec2;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*temp_ent;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref><sp/>||<sp/>!ent)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;MoveAI<sp/>given<sp/>a<sp/>null<sp/>paramerter<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" kindref="member">mFlags</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Standard<sp/>Vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1afe71918d74f1053c28126544dce2f32b" kindref="member">mCollisionType</ref><sp/>=<sp/><ref refid="globals_8h_1a09e75d7e17aa0fd73648231363dcc13aa7e4186c206af11ddf23d64e3d19c4bdb" kindref="member">COLLISION_TYPE_RAGDOLL</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a24bdc1525ed5bcbf2a8c7027c9e1db5f" kindref="member">mNextThink</ref><sp/>=<sp/>SDL_GetTicks()<sp/>+<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" kindref="member">AI_VAR_FRAMES</ref>]*<ref refid="globals_8h_1a33fabd29c10aabcb416dfbf5c84d3e08" kindref="member">FRAME_DELAY</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a890d42df13307b51280d145a6b05211d" kindref="member">mDamage</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" kindref="member">AI_VAR_DAMAGE</ref>];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" kindref="member">mWeight</ref><sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" kindref="member">AI_FLAG_GRAVITY</ref>)<sp/>?<sp/>0<sp/>:<sp/><ref refid="entity_8c_1a018dc9e984dbb58b293f263775b528c6" kindref="member">FindCachedEntity</ref>(ent-&gt;<ref refid="structentity__s_1ad5201d7f075979ee60c684961d6a4ead" kindref="member">mName</ref>)-&gt;<ref refid="structentity__s_1a069df5fe6b0f5a8eb03b0cc4c2e0ba43" kindref="member">mWeight</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1ad290bc1093389f523421449cfcab6a9c" kindref="member">mObject</ref>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_ent<sp/>=<sp/><ref refid="entity_8c_1a018dc9e984dbb58b293f263775b528c6" kindref="member">FindCachedEntity</ref>(ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1ad290bc1093389f523421449cfcab6a9c" kindref="member">mObject</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp_ent)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_ent-&gt;<ref refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" kindref="member">mVelocity</ref>.<ref refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_ent-&gt;<ref refid="structentity__s_1ad3ee4f856561237cfaeb8af26759aec1" kindref="member">mVelocity</ref>.<ref refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" kindref="member">AI_VAR_DIR_Y</ref>];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="parsepowerup_8c_1a050ba84fee976778201dc7aff3e6ff41" kindref="member">Spawn</ref>(ent,<sp/>temp_ent);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>--ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" kindref="member">AI_VAR_TIME</ref>]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" kindref="member">AI_VAR_TIME</ref>]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref><sp/>=<sp/>ent-&gt;<ref refid="structentity__s_1af3ccc93f657a50bc80718e0fe9ad367f" kindref="member">mData</ref>-&gt;<ref refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" kindref="member">mLink</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="entity_8h_1a5ad36cd8551508ec69032e3dc782a1ba" refkind="member"><highlight class="normal">void<sp/>(*<ref refid="ai__interpret_8c_1a5ad36cd8551508ec69032e3dc782a1ba" kindref="member">GetFunctionAI</ref>(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref><sp/>*data))(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(data-&gt;mAction)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal">(<ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffaa8c277933e2d21a6fde065ab745d0fdf" kindref="member">AI_ACTION_NOTHING</ref>)<sp/>:<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1a899aebed78e696979cefcf070b027cad" kindref="member">NothingAI</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal">(<ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa6b5238de81f107855780253611db0147" kindref="member">AI_ACTION_MOVE</ref>):</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1a10ee1734c344fd6bed742812af740c88" kindref="member">MoveAI</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal">(<ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa5a4cdc97564cafbc4ce6b8a11eec0ce4" kindref="member">AI_ACTION_WALK</ref>):<sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1a187e8425c18dfb7aca0508d0a7057f44" kindref="member">WalkAI</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal">(<ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa10840c0a524082dc68990373e17f2128" kindref="member">AI_ACTION_JUMP</ref>):</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1a9ca66c7d5e6e94ce7118ff064d84b086" kindref="member">JumpAI</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal">(<ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffacd9af8f735c788a43a9a38b14748691a" kindref="member">AI_ACTION_ATTACK</ref>):</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1ae87f37befef63c363d791c175cbac93e" kindref="member">AttackAI</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="ai__interpret_8h_1a487d35ce74f749b0bfb024a900699f37" refkind="member"><highlight class="normal"><ref refid="structai__function__s" kindref="compound">ai_function_t</ref><sp/>*<ref refid="ai__interpret_8c_1a487d35ce74f749b0bfb024a900699f37" kindref="member">ParseAI</ref>(<ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*g_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**variables)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k,children,<sp/>position,<sp/>variables_i,<sp/>gravity;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structai__function__s" kindref="compound">ai_function_t</ref><sp/>*retVal;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsmntok__t" kindref="compound">jsmntok_t</ref><sp/>*temp_tok,<sp/>*action_tok;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*temp_obj,<sp/>*action_obj,<sp/>*variables_obj;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*temp_str,<sp/>*type_str,<sp/>**variables_str;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!obj<sp/>||<sp/>!g_str)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="parseobject_8c_1a0d7610fbd167c6f81519e6ab3403e3bd" kindref="member">FindObject</ref>(obj,<sp/><ref refid="ai__interpret_8h_1aa438859ab4448dbffef630c7df6fa8da" kindref="member">AI_VAR_STR</ref>))</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gravity<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gravity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_obj<sp/>=<sp/><ref refid="parseobject_8c_1a0d7610fbd167c6f81519e6ab3403e3bd" kindref="member">FindObject</ref>(obj,<sp/><ref refid="ai__interpret_8h_1a8241201468b0b49abac3940cb0527ed7" kindref="member">AI_FUNCTION_OBJECT</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!temp_obj)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>thinks<sp/>in<sp/>ai<sp/>:<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>obj-&gt;<ref refid="structobject__s_1a5ac083a645d964373f022d03df4849c8" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_tok<sp/>=<sp/><ref refid="mystrings_8c_1a6466498df69994b55bb62b9b53652142" kindref="member">FindKey</ref>(obj-&gt;<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>,<sp/><ref refid="ai__interpret_8h_1aa3f803bbc58a2e44d676b2d4e0a55e66" kindref="member">AI_TYPE_STR</ref>,<sp/>g_str);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!temp_tok)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>types<sp/>in<sp/>ai<sp/>:<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>obj-&gt;<ref refid="structobject__s_1a5ac083a645d964373f022d03df4849c8" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>position<sp/>=<sp/>temp_tok<sp/>-<sp/>obj-&gt;<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>type_str<sp/>=<sp/><ref refid="mystrings_8c_1a78d7d9580e10b30e6409ebfeb29e5cfe" kindref="member">JsmnToString</ref>(&amp;obj-&gt;<ref refid="structobject__s_1ab74cb2267ebadadd15e6bb59e85cc3f9" kindref="member">values</ref>[position],<sp/>g_str);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>children<sp/>=<sp/><ref refid="globals_8h_1ab5272b6a1f2bf961c7534ec91a243715" kindref="member">CountMem</ref>(temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structobject__s" kindref="compound">object_t</ref>));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>)*(children+1));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(retVal,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>)*(children+1));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>children;<sp/>i++)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/><ref refid="ai__interpret_8c_1a4d72b855449c33319a1ad798a9fc3fc7" kindref="member">gAI_Variables</ref>[j];<sp/>j++<sp/>)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_tok<sp/>=<sp/><ref refid="mystrings_8c_1a6466498df69994b55bb62b9b53652142" kindref="member">FindKey</ref>(temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>,<ref refid="ai__interpret_8c_1a4d72b855449c33319a1ad798a9fc3fc7" kindref="member">gAI_Variables</ref>[j],<sp/>g_str);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>=<sp/>temp_tok<sp/>-<sp/>temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref><sp/>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(position<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_str<sp/>=<sp/><ref refid="mystrings_8c_1a78d7d9580e10b30e6409ebfeb29e5cfe" kindref="member">JsmnToString</ref>(&amp;temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1ab74cb2267ebadadd15e6bb59e85cc3f9" kindref="member">values</ref>[position],<sp/>g_str);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8c_1a38a992ac4f024da776101ad1a2957ac4" kindref="member">SetAI_Var</ref>(&amp;retVal[i],<sp/>variables[<ref refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" kindref="member">StrToInt</ref>(temp_str)],<sp/><ref refid="ai__interpret_8c_1a4d72b855449c33319a1ad798a9fc3fc7" kindref="member">gAI_Variables</ref>[j]);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp_str)<sp/>free(temp_str);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/><ref refid="ai__interpret_8c_1ad51a73747c32e703010066d34b299de2" kindref="member">gAI_Actions</ref>[j];<sp/>j++<sp/>)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_obj<sp/>=<sp/><ref refid="parseobject_8c_1a0d7610fbd167c6f81519e6ab3403e3bd" kindref="member">FindObject</ref>(&amp;temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i],<sp/><ref refid="ai__interpret_8c_1ad51a73747c32e703010066d34b299de2" kindref="member">gAI_Actions</ref>[j]);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_tok<sp/>=<sp/><ref refid="mystrings_8c_1a6466498df69994b55bb62b9b53652142" kindref="member">FindKey</ref>(temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>,<sp/><ref refid="ai__interpret_8c_1ad51a73747c32e703010066d34b299de2" kindref="member">gAI_Actions</ref>[j],<sp/>g_str);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!action_obj<sp/>&amp;&amp;<sp/>!action_tok)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>=<sp/>action_tok<sp/>-<sp/>temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>=<sp/>position<sp/>&lt;<sp/>0<sp/>?<sp/>0<sp/>:<sp/>position;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_str<sp/>=<sp/><ref refid="mystrings_8c_1a78d7d9580e10b30e6409ebfeb29e5cfe" kindref="member">JsmnToString</ref>(&amp;temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1ab74cb2267ebadadd15e6bb59e85cc3f9" kindref="member">values</ref>[position],<sp/>g_str);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" kindref="member">StrToInt</ref>(temp_str))</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8c_1a5d87dca860c5320136e684cbe422ca21" kindref="member">SetAI_Action</ref>(&amp;retVal[i],<sp/>NULL,<sp/>NULL,<sp/>g_str,<sp/><ref refid="ai__interpret_8c_1ad51a73747c32e703010066d34b299de2" kindref="member">gAI_Actions</ref>[<ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffaa8c277933e2d21a6fde065ab745d0fdf" kindref="member">AI_ACTION_NOTHING</ref>]<sp/>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8c_1a5d87dca860c5320136e684cbe422ca21" kindref="member">SetAI_Action</ref>(&amp;retVal[i],action_obj,<sp/>action_tok,<sp/>g_str,<sp/><ref refid="ai__interpret_8c_1ad51a73747c32e703010066d34b299de2" kindref="member">gAI_Actions</ref>[j]);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/><ref refid="ai__interpret_8c_1ab5cd8fb380975357a1de5deae48bf85f" kindref="member">gAI_Conditions</ref>[j];<sp/>j++)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_tok<sp/>=<sp/><ref refid="mystrings_8c_1a6466498df69994b55bb62b9b53652142" kindref="member">FindKey</ref>(temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>,<sp/><ref refid="ai__interpret_8c_1ab5cd8fb380975357a1de5deae48bf85f" kindref="member">gAI_Conditions</ref>[j],<sp/>g_str);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!temp_tok)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables_obj<sp/>=<sp/><ref refid="parseobject_8c_1a0d7610fbd167c6f81519e6ab3403e3bd" kindref="member">FindObject</ref>(&amp;temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i],<sp/><ref refid="ai__interpret_8h_1aa438859ab4448dbffef630c7df6fa8da" kindref="member">AI_VAR_STR</ref>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!variables_obj)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables_str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables_i<sp/>=<sp/><ref refid="parseobject_8c_1aef0cb86d9b54e11206d154c369cb9a7e" kindref="member">CountObjectMembers</ref>(variables_obj,<sp/>g_str);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables_str<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)*(variables_i+1));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables_str[variables_i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>variables_i;<sp/>k++)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_str<sp/>=<sp/><ref refid="mystrings_8c_1a78d7d9580e10b30e6409ebfeb29e5cfe" kindref="member">JsmnToString</ref>(&amp;variables_obj-&gt;<ref refid="structobject__s_1ab74cb2267ebadadd15e6bb59e85cc3f9" kindref="member">values</ref>[k],<sp/>g_str);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables_str[k]<sp/>=<sp/>temp_str<sp/>?<sp/>variables[<ref refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" kindref="member">StrToInt</ref>(temp_str)]<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp_str)<sp/>free(temp_str);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>=<sp/>temp_tok<sp/>-<sp/>temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_str<sp/>=<sp/><ref refid="mystrings_8c_1a78d7d9580e10b30e6409ebfeb29e5cfe" kindref="member">JsmnToString</ref>(&amp;temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1ab74cb2267ebadadd15e6bb59e85cc3f9" kindref="member">values</ref>[position],<sp/>g_str);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8c_1a16e24cd82a74fa54781c203aaccec738" kindref="member">SetAI_Check</ref>(&amp;retVal[i],<sp/>variables_str,<sp/>variables[<ref refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" kindref="member">StrToInt</ref>(temp_str)],<sp/><ref refid="ai__interpret_8c_1ab5cd8fb380975357a1de5deae48bf85f" kindref="member">gAI_Conditions</ref>[j]);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp_str)<sp/>free(temp_str);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal[i].<ref refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" kindref="member">mFlags</ref><sp/>|=<sp/>gravity<sp/>?<sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" kindref="member">AI_FLAG_GRAVITY</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal[i].<ref refid="structai__function__s_1af4cc7fbcaa3a1268cb1a174203486a8c" kindref="member">mType</ref><sp/>=<sp/><ref refid="ai__interpret_8c_1a38d0ac016fd6a956b4fcdd5eefdff0c1" kindref="member">StrToAI_Type</ref>(type_str);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Linking<sp/>and<sp/>conditionals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>children;<sp/>i++)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retVal[i].mLink)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal[i].<ref refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" kindref="member">mLink</ref><sp/>=<sp/>(i+1<sp/>==<sp/>children)<sp/>?<sp/>retVal:<sp/>&amp;retVal[i+1];</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retVal[i].mFlags<sp/>&amp;<sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2f4801c84fb1ead492802fc8b93d1619" kindref="member">AI_FLAG_CHECK_OBJECT</ref>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_tok<sp/>=<sp/><ref refid="mystrings_8c_1a6466498df69994b55bb62b9b53652142" kindref="member">FindKey</ref>(temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>,<sp/><ref refid="ai__interpret_8h_1a20a59586d1951b3e6c3353504b58332b" kindref="member">AI_SPECIFY_OBJ_STR</ref>,<sp/>g_str);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!temp_tok)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>=<sp/>temp_tok<sp/>-<sp/>temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal[i].<ref refid="structai__function__s_1ae9037e9c23c85312470746c5c4379814" kindref="member">mObjectCheck</ref><sp/>=<sp/><ref refid="mystrings_8c_1a78d7d9580e10b30e6409ebfeb29e5cfe" kindref="member">JsmnToString</ref>(&amp;temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1ab74cb2267ebadadd15e6bb59e85cc3f9" kindref="member">values</ref>[position],<sp/>g_str);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="ai__interpret_8h_1a325c62634a19a96fcd9117b5f59968d6" refkind="member"><highlight class="normal"><ref refid="structai__function__s" kindref="compound">ai_function_t</ref>*<sp/><ref refid="ai__interpret_8c_1a325c62634a19a96fcd9117b5f59968d6" kindref="member">ParsePresetAI</ref>(<ref refid="structobject__s" kindref="compound">object_t</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>g_str)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k,children,<sp/>position,<sp/>variables,<sp/>gravity;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structai__function__s" kindref="compound">ai_function_t</ref><sp/>*retVal;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsmntok__t" kindref="compound">jsmntok_t</ref><sp/>*temp_tok,<sp/>*action_tok;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*temp_obj,<sp/>*action_obj,<sp/>*variables_obj;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*temp_str,<sp/>*type_str,<sp/>**variables_str;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!obj<sp/>||<sp/>!g_str)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="parseobject_8c_1a0d7610fbd167c6f81519e6ab3403e3bd" kindref="member">FindObject</ref>(obj,<sp/><ref refid="ai__interpret_8h_1aa438859ab4448dbffef630c7df6fa8da" kindref="member">AI_VAR_STR</ref>))</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gravity<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gravity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_obj<sp/>=<sp/><ref refid="parseobject_8c_1a0d7610fbd167c6f81519e6ab3403e3bd" kindref="member">FindObject</ref>(obj,<sp/><ref refid="ai__interpret_8h_1a8241201468b0b49abac3940cb0527ed7" kindref="member">AI_FUNCTION_OBJECT</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!temp_obj)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>thinks<sp/>in<sp/>ai<sp/>:<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>obj-&gt;<ref refid="structobject__s_1a5ac083a645d964373f022d03df4849c8" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_tok<sp/>=<sp/><ref refid="mystrings_8c_1a6466498df69994b55bb62b9b53652142" kindref="member">FindKey</ref>(obj-&gt;<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>,<sp/><ref refid="ai__interpret_8h_1aa3f803bbc58a2e44d676b2d4e0a55e66" kindref="member">AI_TYPE_STR</ref>,<sp/>g_str);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!temp_tok)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>types<sp/>in<sp/>ai<sp/>:<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>obj-&gt;<ref refid="structobject__s_1a5ac083a645d964373f022d03df4849c8" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>position<sp/>=<sp/>temp_tok<sp/>-<sp/>obj-&gt;<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>type_str<sp/>=<sp/><ref refid="mystrings_8c_1a78d7d9580e10b30e6409ebfeb29e5cfe" kindref="member">JsmnToString</ref>(&amp;obj-&gt;<ref refid="structobject__s_1ab74cb2267ebadadd15e6bb59e85cc3f9" kindref="member">values</ref>[position],<sp/>g_str);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>children<sp/>=<sp/><ref refid="globals_8h_1ab5272b6a1f2bf961c7534ec91a243715" kindref="member">CountMem</ref>(temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structobject__s" kindref="compound">object_t</ref>));</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>)*(children+1));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(retVal,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>)*(children+1));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>children;<sp/>i++)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/><ref refid="ai__interpret_8c_1a4d72b855449c33319a1ad798a9fc3fc7" kindref="member">gAI_Variables</ref>[j];<sp/>j++<sp/>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_str<sp/>=<sp/><ref refid="mystrings_8c_1ac183085aec4f8b1867b5737aacb9c37f" kindref="member">FindValue</ref>(&amp;temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i],<sp/><ref refid="ai__interpret_8c_1a4d72b855449c33319a1ad798a9fc3fc7" kindref="member">gAI_Variables</ref>[j]<sp/>,g_str);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8c_1a38a992ac4f024da776101ad1a2957ac4" kindref="member">SetAI_Var</ref>(&amp;retVal[i],<sp/>temp_str,<sp/><ref refid="ai__interpret_8c_1a4d72b855449c33319a1ad798a9fc3fc7" kindref="member">gAI_Variables</ref>[j]);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp_str)<sp/>free(temp_str);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/><ref refid="ai__interpret_8c_1ad51a73747c32e703010066d34b299de2" kindref="member">gAI_Actions</ref>[j];<sp/>j++<sp/>)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_obj<sp/>=<sp/><ref refid="parseobject_8c_1a0d7610fbd167c6f81519e6ab3403e3bd" kindref="member">FindObject</ref>(&amp;temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i],<sp/><ref refid="ai__interpret_8c_1ad51a73747c32e703010066d34b299de2" kindref="member">gAI_Actions</ref>[j]);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_tok<sp/>=<sp/><ref refid="mystrings_8c_1a6466498df69994b55bb62b9b53652142" kindref="member">FindKey</ref>(temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>,<sp/><ref refid="ai__interpret_8c_1ad51a73747c32e703010066d34b299de2" kindref="member">gAI_Actions</ref>[j],<sp/>g_str);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!action_obj<sp/>&amp;&amp;<sp/>!action_tok)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8c_1a5d87dca860c5320136e684cbe422ca21" kindref="member">SetAI_Action</ref>(&amp;retVal[i],action_obj,<sp/>action_tok,<sp/>g_str,<sp/><ref refid="ai__interpret_8c_1ad51a73747c32e703010066d34b299de2" kindref="member">gAI_Actions</ref>[j]);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/><ref refid="ai__interpret_8c_1ab5cd8fb380975357a1de5deae48bf85f" kindref="member">gAI_Conditions</ref>[j];<sp/>j++)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_str<sp/>=<sp/><ref refid="mystrings_8c_1ac183085aec4f8b1867b5737aacb9c37f" kindref="member">FindValue</ref>(&amp;temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i],<sp/><ref refid="ai__interpret_8c_1ab5cd8fb380975357a1de5deae48bf85f" kindref="member">gAI_Conditions</ref>[j]<sp/>,g_str);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!temp_str)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables_obj<sp/>=<sp/><ref refid="parseobject_8c_1a0d7610fbd167c6f81519e6ab3403e3bd" kindref="member">FindObject</ref>(&amp;temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i],<sp/><ref refid="ai__interpret_8h_1aa438859ab4448dbffef630c7df6fa8da" kindref="member">AI_VAR_STR</ref>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!variables_obj)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables_str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables<sp/>=<sp/><ref refid="parseobject_8c_1aef0cb86d9b54e11206d154c369cb9a7e" kindref="member">CountObjectMembers</ref>(variables_obj,<sp/>g_str);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables_str<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)*(variables+1));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables_str[variables]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>variables;<sp/>k++)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables_str[k]<sp/>=<sp/><ref refid="mystrings_8c_1a78d7d9580e10b30e6409ebfeb29e5cfe" kindref="member">JsmnToString</ref>(&amp;variables_obj-&gt;<ref refid="structobject__s_1ab74cb2267ebadadd15e6bb59e85cc3f9" kindref="member">values</ref>[k],g_str);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8c_1a16e24cd82a74fa54781c203aaccec738" kindref="member">SetAI_Check</ref>(&amp;retVal[i],<sp/>variables_str,<sp/>temp_str,<sp/><ref refid="ai__interpret_8c_1ab5cd8fb380975357a1de5deae48bf85f" kindref="member">gAI_Conditions</ref>[j]);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp_str)<sp/>free(temp_str);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal[i].<ref refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" kindref="member">mFlags</ref><sp/>|=<sp/>gravity<sp/>?<sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" kindref="member">AI_FLAG_GRAVITY</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal[i].<ref refid="structai__function__s_1af4cc7fbcaa3a1268cb1a174203486a8c" kindref="member">mType</ref><sp/>=<sp/><ref refid="ai__interpret_8c_1a38d0ac016fd6a956b4fcdd5eefdff0c1" kindref="member">StrToAI_Type</ref>(type_str);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Linking<sp/>and<sp/>conditionals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>children;<sp/>i++)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!retVal[i].mLink)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal[i].<ref refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" kindref="member">mLink</ref><sp/>=<sp/>(i+1<sp/>==<sp/>children)<sp/>?<sp/>retVal:<sp/>&amp;retVal[i+1];</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retVal[i].mFlags<sp/>&amp;<sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2f4801c84fb1ead492802fc8b93d1619" kindref="member">AI_FLAG_CHECK_OBJECT</ref>)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_tok<sp/>=<sp/><ref refid="mystrings_8c_1a6466498df69994b55bb62b9b53652142" kindref="member">FindKey</ref>(temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>,<sp/><ref refid="ai__interpret_8h_1a20a59586d1951b3e6c3353504b58332b" kindref="member">AI_SPECIFY_OBJ_STR</ref>,<sp/>g_str);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!temp_tok)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>=<sp/>temp_tok<sp/>-<sp/>temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal[i].<ref refid="structai__function__s_1ae9037e9c23c85312470746c5c4379814" kindref="member">mObjectCheck</ref><sp/>=<sp/><ref refid="mystrings_8c_1a78d7d9580e10b30e6409ebfeb29e5cfe" kindref="member">JsmnToString</ref>(&amp;temp_obj-&gt;<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>[i].<ref refid="structobject__s_1ab74cb2267ebadadd15e6bb59e85cc3f9" kindref="member">values</ref>[position],<sp/>g_str);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="ai__interpret_8h_1a38a992ac4f024da776101ad1a2957ac4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1a38a992ac4f024da776101ad1a2957ac4" kindref="member">SetAI_Var</ref>(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>var_str)</highlight></codeline>
<codeline lineno="502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!var_str)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="ai__interpret_8h_1ada4ce31f6b1ccb11b329f13b403fbb5b" kindref="member">AI_VAR_SPEED_STR</ref>,<sp/>var_str))</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data_str)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a52140aacf61b5d7be0229d847281ad2b" kindref="member">AI_VAR_SPEED</ref>]<sp/>=<sp/><ref refid="ai__interpret_8h_1a4fd3497e396da261e5049f3125e20d29" kindref="member">AI_BASE_SPEED</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a52140aacf61b5d7be0229d847281ad2b" kindref="member">AI_VAR_SPEED</ref>]<sp/>=<sp/><ref refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" kindref="member">StrToInt</ref>(data_str);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="ai__interpret_8h_1af77f162f72ac7de280a09bf538af8714" kindref="member">AI_VAR_FRAMES_STR</ref>,<sp/>var_str))</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data_str)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" kindref="member">AI_VAR_FRAMES</ref>]<sp/>=<sp/><ref refid="ai__interpret_8h_1a2072f0a2f2335d17070a938b2b3f378d" kindref="member">AI_BASE_THINK_FRAMES</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" kindref="member">AI_VAR_FRAMES</ref>]<sp/>=<sp/><ref refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" kindref="member">StrToInt</ref>(data_str);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="ai__interpret_8h_1acb5318abad3a57b7184c30bb2c7777c9" kindref="member">AI_VAR_TIME_STR</ref>,<sp/>var_str))</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data_str)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" kindref="member">AI_VAR_TIME</ref>]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" kindref="member">AI_VAR_TIME</ref>]<sp/>=<sp/><ref refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" kindref="member">StrToInt</ref>(data_str);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="ai__interpret_8h_1a1026f6edc576815f9c9ba6e4da0690a0" kindref="member">AI_VAR_DAMAGE_STR</ref>,<sp/>var_str))</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data_str)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" kindref="member">AI_VAR_DAMAGE</ref>]<sp/>=<sp/><ref refid="ai__interpret_8h_1a9e473d026b1cb0faf976cd27350420f5" kindref="member">AI_BASE_DAMAGE</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" kindref="member">AI_VAR_DAMAGE</ref>]<sp/>=<sp/><ref refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" kindref="member">StrToInt</ref>(data_str);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="ai__interpret_8h_1a5d87dca860c5320136e684cbe422ca21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1a5d87dca860c5320136e684cbe422ca21" kindref="member">SetAI_Action</ref>(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="structobject__s" kindref="compound">object_t</ref>*<sp/>obj,<sp/><ref refid="structjsmntok__t" kindref="compound">jsmntok_t</ref>*<sp/>tok,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>g_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>action_str)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvec2__s" kindref="compound">vec2_t</ref><sp/>*temp_vec2;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!action_str<sp/>||<sp/>!</highlight><highlight class="keyword">function</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="ai__interpret_8h_1ab18b182365b15628c10327316844aab8" kindref="member">AI_ACTION_NOTHING_STR</ref>,<sp/>action_str))</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mAction<sp/>=<sp/><ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffaa8c277933e2d21a6fde065ab745d0fdf" kindref="member">AI_ACTION_NOTHING</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="ai__interpret_8h_1ab64c56f26a1b1a7715487c72b9f28dbd" kindref="member">AI_ACTION_MOVE_STR</ref>,<sp/>action_str))</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!obj)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" kindref="member">AI_VAR_DIR_Y</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(temp_vec2<sp/>=<sp/><ref refid="parsevariable_8c_1aece06ba78503ca86b77daa6c0f64d01f" kindref="member">ParseToVec2</ref>(obj,<sp/>g_str))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>]<sp/>=<sp/>temp_vec2-&gt;<ref refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>]<sp/>=<sp/>temp_vec2-&gt;<ref refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" kindref="member">AI_VAR_DIR_Y</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mAction<sp/>=<sp/><ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa6b5238de81f107855780253611db0147" kindref="member">AI_ACTION_MOVE</ref>;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="ai__interpret_8h_1abc7fe2d04eb73a338cb3fe88f72844a8" kindref="member">AI_ACTION_WALK_STR</ref>,<sp/>action_str))</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!obj)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" kindref="member">AI_VAR_DIR_Y</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(temp_vec2<sp/>=<sp/><ref refid="parsevariable_8c_1aece06ba78503ca86b77daa6c0f64d01f" kindref="member">ParseToVec2</ref>(obj,<sp/>g_str))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>]<sp/>=<sp/>temp_vec2-&gt;<ref refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>]<sp/>=<sp/>temp_vec2-&gt;<ref refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" kindref="member">AI_VAR_DIR_Y</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mAction<sp/>=<sp/><ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa5a4cdc97564cafbc4ce6b8a11eec0ce4" kindref="member">AI_ACTION_WALK</ref>;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="ai__interpret_8h_1a46d6cd208af1d4bf3095ee3c7a1e739b" kindref="member">AI_ACTION_JUMP_STR</ref>,<sp/>action_str))</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!obj)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" kindref="member">AI_VAR_DIR_Y</ref>]<sp/>=<sp/><ref refid="ai__interpret_8h_1aab127305df5b44889696f3220565be08" kindref="member">AI_BASE_JUMP</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(temp_vec2<sp/>=<sp/><ref refid="parsevariable_8c_1aece06ba78503ca86b77daa6c0f64d01f" kindref="member">ParseToVec2</ref>(obj,<sp/>g_str))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>]<sp/>=<sp/>temp_vec2-&gt;<ref refid="structvec2__s_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>]<sp/>=<sp/>temp_vec2-&gt;<ref refid="structvec2__s_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" kindref="member">AI_VAR_DIR_Y</ref>]<sp/>=<sp/><ref refid="ai__interpret_8h_1aab127305df5b44889696f3220565be08" kindref="member">AI_BASE_JUMP</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mAction<sp/>=<sp/><ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa10840c0a524082dc68990373e17f2128" kindref="member">AI_ACTION_JUMP</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="ai__interpret_8h_1adede65c5d71cf37ecdd755a6909f7a81" kindref="member">AI_ACTION_ATTACK_STR</ref>,<sp/>action_str))</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mAction<sp/>=<sp/><ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffacd9af8f735c788a43a9a38b14748691a" kindref="member">AI_ACTION_ATTACK</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mObject<sp/>=<sp/><ref refid="mystrings_8c_1a78d7d9580e10b30e6409ebfeb29e5cfe" kindref="member">JsmnToString</ref>(tok,<sp/>g_str);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="ai__interpret_8h_1a16e24cd82a74fa54781c203aaccec738" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1a16e24cd82a74fa54781c203aaccec738" kindref="member">SetAI_Check</ref>(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>variables_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>check_str)</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structai__function__s" kindref="compound">ai_function_t</ref><sp/>*temp_ai;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*temp_obj;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsmntok__t" kindref="compound">jsmntok_t</ref><sp/>*temp_tok;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*temp_str;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!check_str<sp/>||<sp/>!</highlight><highlight class="keyword">function</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="ai__interpret_8h_1a13cbd28a585c1577751efca68da844fa" kindref="member">AI_LINK_ACTION</ref>,<sp/>check_str)<sp/>)</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a682c194be42cbd5ca0d0deabb0239876" kindref="member">AI_VAR_CHECK</ref>]<sp/>=<sp/><ref refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" kindref="member">StrToInt</ref>(data_str);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="ai__interpret_8h_1a743b388cb87c1457c328fafa797372fe" kindref="member">AI_CHECK_PLAYER_STR</ref>,<sp/>check_str))</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a682c194be42cbd5ca0d0deabb0239876" kindref="member">AI_VAR_CHECK</ref>]<sp/>=<sp/><ref refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" kindref="member">StrToInt</ref>(data_str);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mFlags<sp/>|=<sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a1e62188aa9d46d657686622ed91447e2" kindref="member">AI_FLAG_CHECK_PLAYER</ref>;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="ai__interpret_8h_1ae8363acda061b3665d4092cbb0f860ac" kindref="member">AI_CHECK_OBJECT_STR</ref>,<sp/>check_str))</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mVariables[<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a682c194be42cbd5ca0d0deabb0239876" kindref="member">AI_VAR_CHECK</ref>]<sp/>=<sp/><ref refid="mystrings_8c_1a7847ecf365cd64921278854576e5ddcc" kindref="member">StrToInt</ref>(data_str);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mFlags<sp/>|=<sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2f4801c84fb1ead492802fc8b93d1619" kindref="member">AI_FLAG_CHECK_OBJECT</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(<ref refid="ai__interpret_8h_1a678f1e1d230bf4bc224407b101e89d30" kindref="member">AI_LINK_AI</ref>,<sp/>check_str))</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mystrings_8c_1a496e2427daae7d276aa1c25bf7173f9b" kindref="member">ConvertFileToUseable</ref>(data_str,<sp/>NULL,<sp/>&amp;temp_str,<sp/>&amp;temp_tok);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!temp_str<sp/>||<sp/>!temp_tok)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_obj<sp/>=<sp/><ref refid="parseobject_8c_1abeb996817aa47a5e463a47275c897483" kindref="member">ParseToObject</ref>(temp_tok,<sp/>temp_str);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">-&gt;mLink<sp/>=<sp/><ref refid="ai__interpret_8c_1a487d35ce74f749b0bfb024a900699f37" kindref="member">ParseAI</ref>(temp_obj,<sp/>temp_str,<sp/>variables_str);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="ai__interpret_8h_1a766fc5dc0fd99733613cc7a396f6efdf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1a766fc5dc0fd99733613cc7a396f6efdf" kindref="member">InitAISystem</ref>()</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gVariableAIs)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>init<sp/>AI<sp/>system,<sp/>while<sp/>already<sp/>inited<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>gVariableAIs<sp/>=<sp/>(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>)*(<ref refid="ai__interpret_8h_1adfd8cb6f070423c4a34b4009b0fb47e3" kindref="member">MAX_AI</ref>+1));</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>gPresetAIs<sp/>=<sp/>(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>)*(<ref refid="ai__interpret_8h_1adfd8cb6f070423c4a34b4009b0fb47e3" kindref="member">MAX_AI</ref>+1));</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!gVariableAIs<sp/>||<sp/>!gPresetAIs)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;AI<sp/>malloc<sp/>error<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(gVariableAIs,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>)*(<ref refid="ai__interpret_8h_1adfd8cb6f070423c4a34b4009b0fb47e3" kindref="member">MAX_AI</ref>+1));</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(gPresetAIs,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>)*(<ref refid="ai__interpret_8h_1adfd8cb6f070423c4a34b4009b0fb47e3" kindref="member">MAX_AI</ref>+1));</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>atexit(<ref refid="ai__interpret_8c_1a7a593ea725968a09171ad562877652a1" kindref="member">ShutdownAISystem</ref>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="ai__interpret_8h_1a7a593ea725968a09171ad562877652a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8c_1a7a593ea725968a09171ad562877652a1" kindref="member">ShutdownAISystem</ref>()</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!gVariableAIs<sp/>||<sp/>!gPresetAIs)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;AI<sp/>not<sp/>initialized<sp/>before<sp/>shutdown<sp/>called<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>free(gVariableAIs);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>free(gPresetAIs);</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697" refid="ai__interpret_8h_1a38d0ac016fd6a956b4fcdd5eefdff0c1" refkind="member"><highlight class="normal"><ref refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159" kindref="member">ai_type_t</ref><sp/><ref refid="ai__interpret_8c_1a38d0ac016fd6a956b4fcdd5eefdff0c1" kindref="member">StrToAI_Type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(str,<sp/><ref refid="ai__interpret_8h_1a81d12be75ce1905126f4e82e9edb951a" kindref="member">AI_TYPE_PRESET_STR</ref>))</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159a6122d777385c6b1ae97b800595e46e54" kindref="member">AI_TYPE_PRESET</ref>;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(str,<sp/><ref refid="ai__interpret_8h_1aee545ee676dd6fbcc4ce58b97d821f4e" kindref="member">AI_TYPE_VARIABLE_STR</ref>))</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159ac795c273b7af067af5b7fabfa7a711ab" kindref="member">AI_TYPE_VARIABLE</ref>;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159adcedad9c8bae06b1e0a33bf7534bb8be" kindref="member">AI_TYPE_NULL</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="dumb-ways-to-memorize/ai_interpret.c"/>
  </compounddef>
</doxygen>
