<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ai__interpret_8h" kind="file" language="C++">
    <compoundname>ai_interpret.h</compoundname>
    <includes refid="globals_8h" local="yes">globals.h</includes>
    <includes refid="parseobject_8h" local="yes">parseobject.h</includes>
    <includedby refid="ai__interpret_8c" local="yes">dumb-ways-to-memorize/ai_interpret.c</includedby>
    <includedby refid="entity_8h" local="yes">dumb-ways-to-memorize/entity.h</includedby>
    <includedby refid="parselevel_8c" local="yes">dumb-ways-to-memorize/parselevel.c</includedby>
    <incdepgraph>
      <node id="15">
        <label>globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>jsmn.h</label>
        <link refid="jsmn_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>parseobject.h</label>
        <link refid="parseobject_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stddef.h</label>
      </node>
      <node id="14">
        <label>dumb-ways-to-memorize/ai_interpret.h</label>
        <link refid="ai_interpret.h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="25">
        <label>dumb-ways-to-memorize/parsepowerup.c</label>
        <link refid="parsepowerup_8c"/>
      </node>
      <node id="27">
        <label>dumb-ways-to-memorize/parsepowerup.h</label>
        <link refid="parsepowerup_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>dumb-ways-to-memorize/parsefunction.c</label>
        <link refid="parsefunction_8c"/>
      </node>
      <node id="36">
        <label>dumb-ways-to-memorize/parsefunction.h</label>
        <link refid="parsefunction_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>dumb-ways-to-memorize/game.c</label>
        <link refid="game_8c"/>
      </node>
      <node id="33">
        <label>dumb-ways-to-memorize/dumb_physics.c</label>
        <link refid="dumb__physics_8c"/>
      </node>
      <node id="32">
        <label>dumb-ways-to-memorize/dumb_physics.h</label>
        <link refid="dumb__physics_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>dumb-ways-to-memorize/menu.c</label>
        <link refid="menu_8c"/>
      </node>
      <node id="30">
        <label>dumb-ways-to-memorize/player.c</label>
        <link refid="player_8c"/>
      </node>
      <node id="34">
        <label>dumb-ways-to-memorize/player.h</label>
        <link refid="player_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>dumb-ways-to-memorize/parsevariable.c</label>
        <link refid="parsevariable_8c"/>
      </node>
      <node id="22">
        <label>dumb-ways-to-memorize/parsevariable.h</label>
        <link refid="parsevariable_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>dumb-ways-to-memorize/parselevel.c</label>
        <link refid="parselevel_8c"/>
      </node>
      <node id="35">
        <label>dumb-ways-to-memorize/parselevel.h</label>
        <link refid="parselevel_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>dumb-ways-to-memorize/entity.c</label>
        <link refid="entity_8c"/>
      </node>
      <node id="21">
        <label>dumb-ways-to-memorize/entity.h</label>
        <link refid="entity_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>dumb-ways-to-memorize/ai_interpret.c</label>
        <link refid="ai__interpret_8c"/>
      </node>
      <node id="19">
        <label>dumb-ways-to-memorize/ai_interpret.h</label>
        <link refid="ai_interpret.h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>dumb-ways-to-memorize/quick_controller.c</label>
        <link refid="quick__controller_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structai__function__s" prot="public">ai_function_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ai__interpret_8h_1adfd8cb6f070423c4a34b4009b0fb47e3" prot="public" static="no">
        <name>MAX_AI</name>
        <initializer>255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="8" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a2e44d65e5471bdee5cf225da4ad2fa13" prot="public" static="no">
        <name>AI_PATH</name>
        <initializer>&quot;AI/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="9" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a8241201468b0b49abac3940cb0527ed7" prot="public" static="no">
        <name>AI_FUNCTION_OBJECT</name>
        <initializer>&quot;Think&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="10" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1acc4636e00d8f71734fc22104c3f064c7" prot="public" static="no">
        <name>AI_VAR_G_STR</name>
        <initializer>&quot;Variables&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="11" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a8c4d9e215c2975e145bccbf8f49b4cb3" prot="public" static="no">
        <name>AI_RECURSIVE_STR</name>
        <initializer>&quot;AI_Recursive&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="12" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1aa438859ab4448dbffef630c7df6fa8da" prot="public" static="no">
        <name>AI_VAR_STR</name>
        <initializer>&quot;variables&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="13" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1af77f162f72ac7de280a09bf538af8714" prot="public" static="no">
        <name>AI_VAR_FRAMES_STR</name>
        <initializer>&quot;frames&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="15" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1acb5318abad3a57b7184c30bb2c7777c9" prot="public" static="no">
        <name>AI_VAR_TIME_STR</name>
        <initializer>&quot;time&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="16" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a1026f6edc576815f9c9ba6e4da0690a0" prot="public" static="no">
        <name>AI_VAR_DAMAGE_STR</name>
        <initializer>&quot;damage&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="17" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1ada4ce31f6b1ccb11b329f13b403fbb5b" prot="public" static="no">
        <name>AI_VAR_SPEED_STR</name>
        <initializer>&quot;speed&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="18" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a70f88dc6c4b3bb3364101130db4b0452" prot="public" static="no">
        <name>AI_VAR_GRAVITY_STR</name>
        <initializer>&quot;gravity&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="19" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1ab18b182365b15628c10327316844aab8" prot="public" static="no">
        <name>AI_ACTION_NOTHING_STR</name>
        <initializer>&quot;nothing&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="21" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1ab64c56f26a1b1a7715487c72b9f28dbd" prot="public" static="no">
        <name>AI_ACTION_MOVE_STR</name>
        <initializer>&quot;move&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="22" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1abc7fe2d04eb73a338cb3fe88f72844a8" prot="public" static="no">
        <name>AI_ACTION_WALK_STR</name>
        <initializer>&quot;walk&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="23" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a46d6cd208af1d4bf3095ee3c7a1e739b" prot="public" static="no">
        <name>AI_ACTION_JUMP_STR</name>
        <initializer>&quot;jump&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="24" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1adede65c5d71cf37ecdd755a6909f7a81" prot="public" static="no">
        <name>AI_ACTION_ATTACK_STR</name>
        <initializer>&quot;attack&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="25" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1aa3f803bbc58a2e44d676b2d4e0a55e66" prot="public" static="no">
        <name>AI_TYPE_STR</name>
        <initializer>&quot;AI_Type&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="26" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a81d12be75ce1905126f4e82e9edb951a" prot="public" static="no">
        <name>AI_TYPE_PRESET_STR</name>
        <initializer>&quot;preset&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="27" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1aee545ee676dd6fbcc4ce58b97d821f4e" prot="public" static="no">
        <name>AI_TYPE_VARIABLE_STR</name>
        <initializer>&quot;variable&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="28" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a359a134c740c26d3f8eb41174d483405" prot="public" static="no">
        <name>AI_CHECK_STR</name>
        <initializer>&quot;condition&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="29" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a743b388cb87c1457c328fafa797372fe" prot="public" static="no">
        <name>AI_CHECK_PLAYER_STR</name>
        <initializer>&quot;distance_player&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="31" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1ae8363acda061b3665d4092cbb0f860ac" prot="public" static="no">
        <name>AI_CHECK_OBJECT_STR</name>
        <initializer>&quot;distance_object&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="32" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a20a59586d1951b3e6c3353504b58332b" prot="public" static="no">
        <name>AI_SPECIFY_OBJ_STR</name>
        <initializer>&quot;object_check&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="33" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a13cbd28a585c1577751efca68da844fa" prot="public" static="no">
        <name>AI_LINK_ACTION</name>
        <initializer>&quot;link_action&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="34" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a678f1e1d230bf4bc224407b101e89d30" prot="public" static="no">
        <name>AI_LINK_AI</name>
        <initializer>&quot;link_ai&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="35" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1aab127305df5b44889696f3220565be08" prot="public" static="no">
        <name>AI_BASE_JUMP</name>
        <initializer>-5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="37" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a4fd3497e396da261e5049f3125e20d29" prot="public" static="no">
        <name>AI_BASE_SPEED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="38" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a2072f0a2f2335d17070a938b2b3f378d" prot="public" static="no">
        <name>AI_BASE_THINK_FRAMES</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="39" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ai__interpret_8h_1a9e473d026b1cb0faf976cd27350420f5" prot="public" static="no">
        <name>AI_BASE_DAMAGE</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="40" column="9" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159" prot="public" static="no">
        <name>ai_type_t</name>
        <enumvalue id="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159adcedad9c8bae06b1e0a33bf7534bb8be" prot="public">
          <name>AI_TYPE_NULL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159a6122d777385c6b1ae97b800595e46e54" prot="public">
          <name>AI_TYPE_PRESET</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the ai type preset option </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159ac795c273b7af067af5b7fabfa7a711ab" prot="public">
          <name>AI_TYPE_VARIABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the ai type variable , which states there needs to be more values given </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159a83ca55055c0e00f9355c3e48bef19b2a" prot="public">
          <name>AI_TYPE_RECURSIVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the ai type recursive option, which values turn into more functions </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the enum for ai_types </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="44" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="enum" id="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47" prot="public" static="no">
        <name>ai_variables_t</name>
        <enumvalue id="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a52140aacf61b5d7be0229d847281ad2b" prot="public">
          <name>AI_VAR_SPEED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the ai variable speed option </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" prot="public">
          <name>AI_VAR_DIR_X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the ai variable for the x direction </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" prot="public">
          <name>AI_VAR_DIR_Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the ai variable for the y direction </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" prot="public">
          <name>AI_VAR_FRAMES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the ai variable for the amount of frames this action happens </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" prot="public">
          <name>AI_VAR_TIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the ai variable for the amount of times to repeat this action </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" prot="public">
          <name>AI_VAR_DAMAGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the ai variable for the damage this action should be </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a682c194be42cbd5ca0d0deabb0239876" prot="public">
          <name>AI_VAR_CHECK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the ai variable for whether there is a condition that needs to be met b4 the action can be done </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a63a64e0e8db6e4f80553f0f42dba43bd" prot="public">
          <name>AI_VAR_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the enum for the variables in mVariables </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="53" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="52" bodyend="64"/>
      </memberdef>
      <memberdef kind="enum" id="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23" prot="public" static="no">
        <name>ai_flags_t</name>
        <enumvalue id="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a1e62188aa9d46d657686622ed91447e2" prot="public">
          <name>AI_FLAG_CHECK_PLAYER</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2f4801c84fb1ead492802fc8b93d1619" prot="public">
          <name>AI_FLAG_CHECK_OBJECT</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" prot="public">
          <name>AI_FLAG_GRAVITY</name>
          <initializer>= 0x4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the enum for what flags are set on the ai </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="68" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="67" bodyend="73"/>
      </memberdef>
      <memberdef kind="enum" id="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dff" prot="public" static="no">
        <name>ai_actions_t</name>
        <enumvalue id="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffaa8c277933e2d21a6fde065ab745d0fdf" prot="public">
          <name>AI_ACTION_NOTHING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa6b5238de81f107855780253611db0147" prot="public">
          <name>AI_ACTION_MOVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa5a4cdc97564cafbc4ce6b8a11eec0ce4" prot="public">
          <name>AI_ACTION_WALK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa10840c0a524082dc68990373e17f2128" prot="public">
          <name>AI_ACTION_JUMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffacd9af8f735c788a43a9a38b14748691a" prot="public">
          <name>AI_ACTION_ATTACK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa34da75a350277c5cd7ebfb9cf5fe5655" prot="public">
          <name>AI_ACTION_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the enum for action types </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="77" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="76" bodyend="85"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" prot="public" static="no">
        <type>struct <ref refid="structai__function__s" kindref="compound">ai_function_s</ref></type>
        <definition>typedef struct ai_function_s ai_function_t</definition>
        <argsstring></argsstring>
        <name>ai_function_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="30" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ai__interpret_8h_1a4d72b855449c33319a1ad798a9fc3fc7" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* gAI_Variables[]</definition>
        <argsstring>[]</argsstring>
        <name>gAI_Variables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="14" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ai__interpret_8h_1ad51a73747c32e703010066d34b299de2" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* gAI_Actions[]</definition>
        <argsstring>[]</argsstring>
        <name>gAI_Actions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="20" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ai__interpret_8h_1ab5cd8fb380975357a1de5deae48bf85f" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* gAI_Conditions[]</definition>
        <argsstring>[]</argsstring>
        <name>gAI_Conditions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="30" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ai__interpret_8h_1a449e08cb7867c0c42e9ad59904dcb947" prot="public" static="no" mutable="no">
        <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
        <definition>ai_function_t* gVariableAIs</definition>
        <argsstring></argsstring>
        <name>gVariableAIs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="117" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ai__interpret_8h_1a86b6f52e393a91915168567c0c60709c" prot="public" static="no" mutable="no">
        <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
        <definition>ai_function_t* gPresetAIs</definition>
        <argsstring></argsstring>
        <name>gPresetAIs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="118" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ai__interpret_8h_1a487d35ce74f749b0bfb024a900699f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
        <definition>ai_function_t* ParseAI</definition>
        <argsstring>(object_t *obj, char *g_str, char **variables)</argsstring>
        <name>ParseAI</name>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>g_str</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>variables</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses AI behavior using the variables given and the AI obj/file specified.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">g_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">variables</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the variables.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null if it fails, else a pointer to an ai_function_t.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="120" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="284" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8h_1a325c62634a19a96fcd9117b5f59968d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
        <definition>ai_function_t* ParsePresetAI</definition>
        <argsstring>(object_t *obj, char *g_str)</argsstring>
        <name>ParsePresetAI</name>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>g_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse a preset AI, with values determined by whats in the file.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">g_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null if it fails, else a pointer to an ai_function_t.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="121" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="428" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8h_1a38a992ac4f024da776101ad1a2957ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetAI_Var</definition>
        <argsstring>(ai_function_t *function, char *data_str, char *var_str)</argsstring>
        <name>SetAI_Var</name>
        <param>
          <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>data_str</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>var_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets AI variables in ai_function-&gt;mVariables.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">function</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">data_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the data string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">var_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the variable string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="122" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="547" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8h_1a5d87dca860c5320136e684cbe422ca21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetAI_Action</definition>
        <argsstring>(ai_function_t *function, object_t *obj, jsmntok_t *tok, char *g_str, char *action_str)</argsstring>
        <name>SetAI_Action</name>
        <param>
          <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
          <declname>function</declname>
        </param>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="structjsmntok__t" kindref="compound">jsmntok_t</ref> *</type>
          <declname>tok</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>g_str</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>action_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets AI action defined in ai_actions to the ai_function</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">function</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">tok</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the tok. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">g_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">action_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the action string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="123" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="608" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8h_1a16e24cd82a74fa54781c203aaccec738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetAI_Check</definition>
        <argsstring>(ai_function_t *function, char **variables_str, char *data_str, char *check_str)</argsstring>
        <name>SetAI_Check</name>
        <param>
          <type><ref refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" kindref="member">ai_function_t</ref> *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>variables_str</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>data_str</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>check_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets checks that need to occur for the ai_function to be called.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">function</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">variables_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the variables string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">data_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the data string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">check_str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the check string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="124" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="698" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8h_1a766fc5dc0fd99733613cc7a396f6efdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int InitAISystem</definition>
        <argsstring>()</argsstring>
        <name>InitAISystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init AI system, similar to Entity init, for now....</para><para><simplesect kind="return"><para>An int.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="126" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="744" bodyend="764"/>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8h_1a7a593ea725968a09171ad562877652a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ShutdownAISystem</definition>
        <argsstring>()</argsstring>
        <name>ShutdownAISystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ai__interpret_8h_1a38d0ac016fd6a956b4fcdd5eefdff0c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159" kindref="member">ai_type_t</ref></type>
        <definition>ai_type_t StrToAI_Type</definition>
        <argsstring>(const char *str)</argsstring>
        <name>StrToAI_Type</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts a str to an AI type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>str as an ai_type_t.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/ai_interpret.h" line="129" column="1" bodyfile="dumb-ways-to-memorize/ai_interpret.c" bodystart="777" bodyend="787"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__AI_INTERPRET_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AI_INTERPRET_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globals_8h" kindref="compound">globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parseobject_8h" kindref="compound">parseobject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="ai__interpret_8h_1adfd8cb6f070423c4a34b4009b0fb47e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_AI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="ai__interpret_8h_1a2e44d65e5471bdee5cf225da4ad2fa13" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_PATH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;AI/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="ai__interpret_8h_1a8241201468b0b49abac3940cb0527ed7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_FUNCTION_OBJECT<sp/><sp/><sp/><sp/><sp/><sp/>&quot;Think&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="ai__interpret_8h_1acc4636e00d8f71734fc22104c3f064c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_VAR_G_STR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Variables&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="ai__interpret_8h_1a8c4d9e215c2975e145bccbf8f49b4cb3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_RECURSIVE_STR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;AI_Recursive&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="ai__interpret_8h_1aa438859ab4448dbffef630c7df6fa8da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_VAR_STR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;variables&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="ai__interpret_8h_1a4d72b855449c33319a1ad798a9fc3fc7" kindref="member">gAI_Variables</ref>[];</highlight></codeline>
<codeline lineno="15" refid="ai__interpret_8h_1af77f162f72ac7de280a09bf538af8714" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_VAR_FRAMES_STR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;frames&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="ai__interpret_8h_1acb5318abad3a57b7184c30bb2c7777c9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_VAR_TIME_STR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;time&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="ai__interpret_8h_1a1026f6edc576815f9c9ba6e4da0690a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_VAR_DAMAGE_STR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;damage&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="ai__interpret_8h_1ada4ce31f6b1ccb11b329f13b403fbb5b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_VAR_SPEED_STR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;speed&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="ai__interpret_8h_1a70f88dc6c4b3bb3364101130db4b0452" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_VAR_GRAVITY_STR<sp/><sp/><sp/><sp/><sp/><sp/>&quot;gravity&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="ai__interpret_8h_1ad51a73747c32e703010066d34b299de2" kindref="member">gAI_Actions</ref>[];</highlight></codeline>
<codeline lineno="21" refid="ai__interpret_8h_1ab18b182365b15628c10327316844aab8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_ACTION_NOTHING_STR<sp/><sp/><sp/>&quot;nothing&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="ai__interpret_8h_1ab64c56f26a1b1a7715487c72b9f28dbd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_ACTION_MOVE_STR<sp/><sp/><sp/><sp/><sp/><sp/>&quot;move&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="ai__interpret_8h_1abc7fe2d04eb73a338cb3fe88f72844a8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_ACTION_WALK_STR<sp/><sp/><sp/><sp/><sp/><sp/>&quot;walk&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="ai__interpret_8h_1a46d6cd208af1d4bf3095ee3c7a1e739b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_ACTION_JUMP_STR<sp/><sp/><sp/><sp/><sp/><sp/>&quot;jump&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="ai__interpret_8h_1adede65c5d71cf37ecdd755a6909f7a81" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_ACTION_ATTACK_STR<sp/><sp/><sp/><sp/>&quot;attack&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="ai__interpret_8h_1aa3f803bbc58a2e44d676b2d4e0a55e66" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_TYPE_STR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;AI_Type&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="ai__interpret_8h_1a81d12be75ce1905126f4e82e9edb951a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_TYPE_PRESET_STR<sp/><sp/><sp/><sp/><sp/><sp/>&quot;preset&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="ai__interpret_8h_1aee545ee676dd6fbcc4ce58b97d821f4e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_TYPE_VARIABLE_STR<sp/><sp/><sp/><sp/>&quot;variable&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="ai__interpret_8h_1a359a134c740c26d3f8eb41174d483405" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_CHECK_STR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;condition&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="ai__interpret_8h_1ab5cd8fb380975357a1de5deae48bf85f" kindref="member">gAI_Conditions</ref>[];</highlight></codeline>
<codeline lineno="31" refid="ai__interpret_8h_1a743b388cb87c1457c328fafa797372fe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_CHECK_PLAYER_STR<sp/><sp/><sp/><sp/><sp/>&quot;distance_player&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="ai__interpret_8h_1ae8363acda061b3665d4092cbb0f860ac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_CHECK_OBJECT_STR<sp/><sp/><sp/><sp/><sp/>&quot;distance_object&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="ai__interpret_8h_1a20a59586d1951b3e6c3353504b58332b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_SPECIFY_OBJ_STR<sp/><sp/><sp/><sp/><sp/><sp/>&quot;object_check&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="ai__interpret_8h_1a13cbd28a585c1577751efca68da844fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_LINK_ACTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;link_action&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="ai__interpret_8h_1a678f1e1d230bf4bc224407b101e89d30" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_LINK_AI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;link_ai&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="ai__interpret_8h_1aab127305df5b44889696f3220565be08" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_BASE_JUMP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="ai__interpret_8h_1a4fd3497e396da261e5049f3125e20d29" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_BASE_SPEED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="ai__interpret_8h_1a2072f0a2f2335d17070a938b2b3f378d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_BASE_THINK_FRAMES<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="ai__interpret_8h_1a9e473d026b1cb0faf976cd27350420f5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_BASE_DAMAGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45" refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159adcedad9c8bae06b1e0a33bf7534bb8be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159adcedad9c8bae06b1e0a33bf7534bb8be" kindref="member">AI_TYPE_NULL</ref>,</highlight></codeline>
<codeline lineno="46" refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159a6122d777385c6b1ae97b800595e46e54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159a6122d777385c6b1ae97b800595e46e54" kindref="member">AI_TYPE_PRESET</ref><sp/>=<sp/>0x1,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159ac795c273b7af067af5b7fabfa7a711ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159ac795c273b7af067af5b7fabfa7a711ab" kindref="member">AI_TYPE_VARIABLE</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159a83ca55055c0e00f9355c3e48bef19b2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159a83ca55055c0e00f9355c3e48bef19b2a" kindref="member">AI_TYPE_RECURSIVE</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<ref refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159" kindref="member">ai_type_t</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a52140aacf61b5d7be0229d847281ad2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a52140aacf61b5d7be0229d847281ad2b" kindref="member">AI_VAR_SPEED</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619" kindref="member">AI_VAR_DIR_X</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44" kindref="member">AI_VAR_DIR_Y</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122" kindref="member">AI_VAR_FRAMES</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1" kindref="member">AI_VAR_TIME</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60" refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c" kindref="member">AI_VAR_DAMAGE</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a682c194be42cbd5ca0d0deabb0239876" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a682c194be42cbd5ca0d0deabb0239876" kindref="member">AI_VAR_CHECK</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a63a64e0e8db6e4f80553f0f42dba43bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47a63a64e0e8db6e4f80553f0f42dba43bd" kindref="member">AI_VAR_MAX</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<ref refid="ai__interpret_8h_1a0fd706f9f199bde94857277c893baa47" kindref="member">ai_variables_t</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69" refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a1e62188aa9d46d657686622ed91447e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a1e62188aa9d46d657686622ed91447e2" kindref="member">AI_FLAG_CHECK_PLAYER</ref><sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="70" refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2f4801c84fb1ead492802fc8b93d1619" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2f4801c84fb1ead492802fc8b93d1619" kindref="member">AI_FLAG_CHECK_OBJECT</ref><sp/>=<sp/>0x2,</highlight></codeline>
<codeline lineno="71" refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9" kindref="member">AI_FLAG_GRAVITY</ref><sp/>=<sp/>0x4,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<ref refid="ai__interpret_8h_1aab487a4dae4d7338733bfd01a5658b23" kindref="member">ai_flags_t</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dff" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78" refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffaa8c277933e2d21a6fde065ab745d0fdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffaa8c277933e2d21a6fde065ab745d0fdf" kindref="member">AI_ACTION_NOTHING</ref>,</highlight></codeline>
<codeline lineno="79" refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa6b5238de81f107855780253611db0147" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa6b5238de81f107855780253611db0147" kindref="member">AI_ACTION_MOVE</ref>,</highlight></codeline>
<codeline lineno="80" refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa5a4cdc97564cafbc4ce6b8a11eec0ce4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa5a4cdc97564cafbc4ce6b8a11eec0ce4" kindref="member">AI_ACTION_WALK</ref>,</highlight></codeline>
<codeline lineno="81" refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa10840c0a524082dc68990373e17f2128" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa10840c0a524082dc68990373e17f2128" kindref="member">AI_ACTION_JUMP</ref>,</highlight></codeline>
<codeline lineno="82" refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffacd9af8f735c788a43a9a38b14748691a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffacd9af8f735c788a43a9a38b14748691a" kindref="member">AI_ACTION_ATTACK</ref>,</highlight></codeline>
<codeline lineno="83" refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa34da75a350277c5cd7ebfb9cf5fe5655" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dffa34da75a350277c5cd7ebfb9cf5fe5655" kindref="member">AI_ACTION_MAX</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}<ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dff" kindref="member">ai_actions_t</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="ai__interpret_8h_1a93e23f66130135adeb83b13c29f36fca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structai__function__s" kindref="compound">ai_function_s</ref><sp/><ref refid="structai__function__s" kindref="compound">ai_function_t</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="structai__function__s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structai__function__s" kindref="compound">ai_function_s</ref></highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99" refid="structai__function__s_1af4cc7fbcaa3a1268cb1a174203486a8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159" kindref="member">ai_type_t</ref><sp/><ref refid="structai__function__s_1af4cc7fbcaa3a1268cb1a174203486a8c" kindref="member">mType</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100" refid="structai__function__s_1a99f128ebf8f9bb2be7e2ffaee33c5554" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ai__interpret_8h_1a42492ef6b9956883af49be159eb55dff" kindref="member">ai_actions_t</ref><sp/><ref refid="structai__function__s_1a99f128ebf8f9bb2be7e2ffaee33c5554" kindref="member">mAction</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101" refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structai__function__s_1ab64996ddf8cd7006232fcb79bc296b03" kindref="member">mFlags</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102" refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structai__function__s_1a889d5923f6b7628af2fe824149b5a942" kindref="member">mVariables</ref>[7];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mVariables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[2<sp/>,<sp/>3]<sp/>-<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4<sp/>-<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5<sp/>-<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6<sp/>-<sp/>damage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>7<sp/>-<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="structai__function__s_1ad290bc1093389f523421449cfcab6a9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structai__function__s_1ad290bc1093389f523421449cfcab6a9c" kindref="member">mObject</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112" refid="structai__function__s_1ae9037e9c23c85312470746c5c4379814" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structai__function__s_1ae9037e9c23c85312470746c5c4379814" kindref="member">mObjectCheck</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113" refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structai__function__s" kindref="compound">ai_function_t</ref><sp/>*<ref refid="structai__function__s_1a7965c244eab12a7cdc29c447b8c76dbc" kindref="member">mLink</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structai__function__s" kindref="compound">ai_function_t</ref><sp/>*<ref refid="ai__interpret_8h_1a449e08cb7867c0c42e9ad59904dcb947" kindref="member">gVariableAIs</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structai__function__s" kindref="compound">ai_function_t</ref><sp/>*<ref refid="ai__interpret_8h_1a86b6f52e393a91915168567c0c60709c" kindref="member">gPresetAIs</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="structai__function__s" kindref="compound">ai_function_t</ref><sp/>*<ref refid="ai__interpret_8h_1a487d35ce74f749b0bfb024a900699f37" kindref="member">ParseAI</ref>(<ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*g_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**variables);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="structai__function__s" kindref="compound">ai_function_t</ref><sp/>*<ref refid="ai__interpret_8h_1a325c62634a19a96fcd9117b5f59968d6" kindref="member">ParsePresetAI</ref>(<ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*g_str);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8h_1a38a992ac4f024da776101ad1a2957ac4" kindref="member">SetAI_Var</ref>(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>data_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>var_str);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8h_1a5d87dca860c5320136e684cbe422ca21" kindref="member">SetAI_Action</ref>(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/><ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*<sp/>obj,<sp/><ref refid="structjsmntok__t" kindref="compound">jsmntok_t</ref>*<sp/>tok,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>g_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>action_str);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8h_1a16e24cd82a74fa54781c203aaccec738" kindref="member">SetAI_Check</ref>(<ref refid="structai__function__s" kindref="compound">ai_function_t</ref>*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>variables_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>data_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>check_str);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>*GetFunctionAI(ai_function_t<sp/>*data);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8h_1a766fc5dc0fd99733613cc7a396f6efdf" kindref="member">InitAISystem</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ai__interpret_8h_1a7a593ea725968a09171ad562877652a1" kindref="member">ShutdownAISystem</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="ai__interpret_8h_1a9fc7d2b2756bda7167434e15ddd43159" kindref="member">ai_type_t</ref><sp/><ref refid="ai__interpret_8h_1a38d0ac016fd6a956b4fcdd5eefdff0c1" kindref="member">StrToAI_Type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="dumb-ways-to-memorize/ai_interpret.h"/>
  </compounddef>
</doxygen>
