<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="parseobject_8h" kind="file" language="C++">
    <compoundname>parseobject.h</compoundname>
    <includes refid="jsmn_8h" local="no">jsmn.h</includes>
    <includedby refid="ai__interpret_8h" local="yes">dumb-ways-to-memorize/ai_interpret.h</includedby>
    <includedby refid="parsevariable_8h" local="yes">dumb-ways-to-memorize/parsevariable.h</includedby>
    <includedby refid="parsepowerup_8h" local="yes">dumb-ways-to-memorize/parsepowerup.h</includedby>
    <includedby refid="parselevel_8h" local="yes">dumb-ways-to-memorize/parselevel.h</includedby>
    <includedby refid="game_8c" local="yes">dumb-ways-to-memorize/game.c</includedby>
    <includedby refid="menu_8h" local="yes">dumb-ways-to-memorize/menu.h</includedby>
    <includedby refid="mystrings_8c" local="yes">dumb-ways-to-memorize/mystrings.c</includedby>
    <includedby refid="parselevel_8c" local="yes">dumb-ways-to-memorize/parselevel.c</includedby>
    <includedby refid="parseobject_8c" local="yes">dumb-ways-to-memorize/parseobject.c</includedby>
    <includedby refid="parsepowerup_8c" local="yes">dumb-ways-to-memorize/parsepowerup.c</includedby>
    <includedby refid="parsevariable_8c" local="yes">dumb-ways-to-memorize/parsevariable.c</includedby>
    <incdepgraph>
      <node id="379">
        <label>jsmn.h</label>
        <link refid="jsmn_8h"/>
        <childnode refid="380" relation="include">
        </childnode>
      </node>
      <node id="378">
        <label>dumb-ways-to-memorize/parseobject.h</label>
        <link refid="parseobject.h"/>
        <childnode refid="379" relation="include">
        </childnode>
      </node>
      <node id="380">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="402">
        <label>dumb-ways-to-memorize/mystrings.c</label>
        <link refid="mystrings_8c"/>
      </node>
      <node id="388">
        <label>dumb-ways-to-memorize/parsepowerup.c</label>
        <link refid="parsepowerup_8c"/>
      </node>
      <node id="390">
        <label>dumb-ways-to-memorize/parsepowerup.h</label>
        <link refid="parsepowerup_8h"/>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
      </node>
      <node id="400">
        <label>dumb-ways-to-memorize/parsefunction.c</label>
        <link refid="parsefunction_8c"/>
      </node>
      <node id="399">
        <label>dumb-ways-to-memorize/parsefunction.h</label>
        <link refid="parsefunction_8h"/>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
      </node>
      <node id="386">
        <label>dumb-ways-to-memorize/game.c</label>
        <link refid="game_8c"/>
      </node>
      <node id="396">
        <label>dumb-ways-to-memorize/dumb_physics.c</label>
        <link refid="dumb__physics_8c"/>
      </node>
      <node id="395">
        <label>dumb-ways-to-memorize/dumb_physics.h</label>
        <link refid="dumb__physics_8h"/>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
      </node>
      <node id="392">
        <label>dumb-ways-to-memorize/menu.c</label>
        <link refid="menu_8c"/>
      </node>
      <node id="401">
        <label>dumb-ways-to-memorize/menu.h</label>
        <link refid="menu_8h"/>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
      </node>
      <node id="403">
        <label>dumb-ways-to-memorize/parseobject.c</label>
        <link refid="parseobject_8c"/>
      </node>
      <node id="381">
        <label>dumb-ways-to-memorize/parseobject.h</label>
        <link refid="parseobject.h"/>
        <childnode refid="382" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
      </node>
      <node id="393">
        <label>dumb-ways-to-memorize/player.c</label>
        <link refid="player_8c"/>
      </node>
      <node id="397">
        <label>dumb-ways-to-memorize/player.h</label>
        <link refid="player_8h"/>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
      </node>
      <node id="389">
        <label>dumb-ways-to-memorize/parsevariable.c</label>
        <link refid="parsevariable_8c"/>
      </node>
      <node id="385">
        <label>dumb-ways-to-memorize/parsevariable.h</label>
        <link refid="parsevariable_8h"/>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
      </node>
      <node id="387">
        <label>dumb-ways-to-memorize/parselevel.c</label>
        <link refid="parselevel_8c"/>
      </node>
      <node id="398">
        <label>dumb-ways-to-memorize/parselevel.h</label>
        <link refid="parselevel_8h"/>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
      </node>
      <node id="391">
        <label>dumb-ways-to-memorize/entity.c</label>
        <link refid="entity_8c"/>
      </node>
      <node id="384">
        <label>dumb-ways-to-memorize/entity.h</label>
        <link refid="entity_8h"/>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
      </node>
      <node id="383">
        <label>dumb-ways-to-memorize/ai_interpret.c</label>
        <link refid="ai__interpret_8c"/>
      </node>
      <node id="382">
        <label>dumb-ways-to-memorize/ai_interpret.h</label>
        <link refid="ai__interpret_8h"/>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
      </node>
      <node id="394">
        <label>dumb-ways-to-memorize/quick_controller.c</label>
        <link refid="quick__controller_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structobject__s" prot="public">object_s</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" prot="public" static="no">
        <type>struct <ref refid="structobject__s" kindref="compound">object_s</ref></type>
        <definition>typedef struct object_s object_t</definition>
        <argsstring></argsstring>
        <name>object_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parseobject.h" line="237" column="1" bodyfile="dumb-ways-to-memorize/parseobject.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="parseobject_8h_1abeb996817aa47a5e463a47275c897483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
        <definition>object_t* ParseToObject</definition>
        <argsstring>(jsmntok_t *token, char *g_str)</argsstring>
        <name>ParseToObject</name>
        <param>
          <type><ref refid="structjsmntok__t" kindref="compound">jsmntok_t</ref> *</type>
          <declname>token</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>g_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse to object, this object has no parent.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">token</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the token that begins with object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the global string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null if it fails, else an object_t*.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>2/1/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parseobject.h" line="38" column="1" bodyfile="dumb-ways-to-memorize/parseobject.c" bodystart="8" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="parseobject_8h_1a0d7610fbd167c6f81519e6ab3403e3bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
        <definition>object_t* FindObject</definition>
        <argsstring>(object_t *obj, char *name)</argsstring>
        <name>FindObject</name>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Searches for the first object in object list that matches name.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">name</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the name.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null if it fails, else the found object.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>2/27/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parseobject.h" line="51" column="1" bodyfile="dumb-ways-to-memorize/parseobject.c" bodystart="120" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="parseobject_8h_1aef0cb86d9b54e11206d154c369cb9a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CountObjectMembers</definition>
        <argsstring>(object_t *obj, char *g_str)</argsstring>
        <name>CountObjectMembers</name>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>g_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parseobject.h" line="54" column="1" bodyfile="dumb-ways-to-memorize/parseobject.c" bodystart="144" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="parseobject_8h_1acaa82337937e66fae84e360325cabdc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CountObjectChildren</definition>
        <argsstring>(object_t *obj)</argsstring>
        <name>CountObjectChildren</name>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parseobject.h" line="57" column="1" bodyfile="dumb-ways-to-memorize/parseobject.c" bodystart="170" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="parseobject_8h_1ae7d41e06515589776dc92961481d56ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PrintObject</definition>
        <argsstring>(object_t *obj, char *g_str)</argsstring>
        <name>PrintObject</name>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>g_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parseobject.h" line="60" column="1" bodyfile="dumb-ways-to-memorize/parseobject.c" bodystart="188" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="parseobject_8h_1a66550ec5ad5119b002932431e1ce8578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CopyObjectToObjectArray</definition>
        <argsstring>(object_t **dst, object_t *src, int size)</argsstring>
        <name>CopyObjectToObjectArray</name>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parseobject.h" line="63" column="1" bodyfile="dumb-ways-to-memorize/parseobject.c" bodystart="237" bodyend="291"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__PARSE_OBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PARSE_OBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="jsmn_8h" kindref="compound">jsmn.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structobject__s" kindref="compound">object_s</ref><sp/><ref refid="structobject__s" kindref="compound">object_t</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="structobject__s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structobject__s" kindref="compound">object_s</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20" refid="structobject__s_1a444f5b5cbba653b103c8841fa8536b8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*<ref refid="structobject__s_1a444f5b5cbba653b103c8841fa8536b8d" kindref="member">parent</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21" refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*<ref refid="structobject__s_1a2746ae4a23a7e9cd4c7d266d32c3f30f" kindref="member">children</ref>;<sp/></highlight></codeline>
<codeline lineno="22" refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsmntok__t" kindref="compound">jsmntok_t</ref><sp/>*<ref refid="structobject__s_1a720905251b014f5c9ec82e66e8463f4e" kindref="member">keys</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23" refid="structobject__s_1ab74cb2267ebadadd15e6bb59e85cc3f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjsmntok__t" kindref="compound">jsmntok_t</ref><sp/>*<ref refid="structobject__s_1ab74cb2267ebadadd15e6bb59e85cc3f9" kindref="member">values</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="24" refid="structobject__s_1a5ac083a645d964373f022d03df4849c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structobject__s_1a5ac083a645d964373f022d03df4849c8" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*<ref refid="parseobject_8h_1abeb996817aa47a5e463a47275c897483" kindref="member">ParseToObject</ref>(<ref refid="structjsmntok__t" kindref="compound">jsmntok_t</ref><sp/>*token,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*g_str);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*<ref refid="parseobject_8h_1a0d7610fbd167c6f81519e6ab3403e3bd" kindref="member">FindObject</ref>(<ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structobject__s_1a5ac083a645d964373f022d03df4849c8" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//Recursive<sp/>Member<sp/>Count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="parseobject_8h_1aef0cb86d9b54e11206d154c369cb9a7e" kindref="member">CountObjectMembers</ref>(<ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*g_str);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//Recursive<sp/>Children<sp/>Count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="parseobject_8h_1acaa82337937e66fae84e360325cabdc6" kindref="member">CountObjectChildren</ref>(<ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*obj);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recursive<sp/>Print<sp/>for<sp/>Objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parseobject_8h_1ae7d41e06515589776dc92961481d56ab" kindref="member">PrintObject</ref>(<ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*obj,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*g_str);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copy&apos;s<sp/>object<sp/>into<sp/>a<sp/>object_array<sp/>,dynamically<sp/>allocates<sp/>if<sp/>dst<sp/>not<sp/>big<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="parseobject_8h_1a66550ec5ad5119b002932431e1ce8578" kindref="member">CopyObjectToObjectArray</ref>(<ref refid="structobject__s" kindref="compound">object_t</ref><sp/>**dst,<sp/><ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="dumb-ways-to-memorize/parseobject.h"/>
  </compounddef>
</doxygen>
