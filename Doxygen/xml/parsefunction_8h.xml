<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="parsefunction_8h" kind="file" language="C++">
    <compoundname>parsefunction.h</compoundname>
    <includes refid="entity_8h" local="yes">entity.h</includes>
    <includes local="yes">SDL.h</includes>
    <includedby refid="parsefunction_8c" local="yes">dumb-ways-to-memorize/parsefunction.c</includedby>
    <includedby refid="parsepowerup_8c" local="yes">dumb-ways-to-memorize/parsepowerup.c</includedby>
    <incdepgraph>
      <node id="328">
        <label>globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="329" relation="include">
        </childnode>
      </node>
      <node id="326">
        <label>dumb-ways-to-memorize/parsefunction.h</label>
        <link refid="parsefunction.h"/>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
      </node>
      <node id="332">
        <label>SDL.h</label>
      </node>
      <node id="329">
        <label>jsmn.h</label>
        <link refid="jsmn_8h"/>
        <childnode refid="330" relation="include">
        </childnode>
      </node>
      <node id="334">
        <label>parseobject.h</label>
        <link refid="parseobject_8h"/>
        <childnode refid="329" relation="include">
        </childnode>
      </node>
      <node id="330">
        <label>stddef.h</label>
      </node>
      <node id="327">
        <label>entity.h</label>
        <link refid="entity_8h"/>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
      </node>
      <node id="331">
        <label>graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
      </node>
      <node id="333">
        <label>ai_interpret.h</label>
        <link refid="ai__interpret_8h"/>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="337">
        <label>dumb-ways-to-memorize/parsepowerup.c</label>
        <link refid="parsepowerup_8c"/>
      </node>
      <node id="336">
        <label>dumb-ways-to-memorize/parsefunction.c</label>
        <link refid="parsefunction_8c"/>
      </node>
      <node id="335">
        <label>dumb-ways-to-memorize/parsefunction.h</label>
        <link refid="parsefunction.h"/>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="parsefunction_8h_1a77aa3443e1cc11d1389a851b108f3328" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* FunctionNames[]</definition>
        <argsstring>[]</argsstring>
        <name>FunctionNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.h" line="18" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="parsefunction_8h_1a1a22b108a457c916e27af13baf7c97a7" prot="public" static="no" mutable="no">
        <type>void *[]</type>
        <definition>void*[] FunctionSymbols</definition>
        <argsstring></argsstring>
        <name>FunctionSymbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.h" line="19" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="parsefunction_8h_1a3364b018786a8ca3a643e80ee703807f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ParseToFunction</definition>
        <argsstring>(const char *name)</argsstring>
        <name>ParseToFunction</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.h" line="7" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="11" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="parsefunction_8h_1a73c2d9e32b37716a4fa1a886f7cbb1e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetWorld</definition>
        <argsstring>(entity_t *self, entity_t **targ)</argsstring>
        <name>GetWorld</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> **</type>
          <declname>targ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.h" line="10" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="parsefunction_8h_1a2bd9d331736aa28b1650dcb48d2ad141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetAtPoint</definition>
        <argsstring>(entity_t *self, entity_t **targ)</argsstring>
        <name>GetAtPoint</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> **</type>
          <declname>targ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.h" line="11" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="31" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="parsefunction_8h_1ad5c9fe379d9ad3c5c1047b2d290c0302" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetSelf</definition>
        <argsstring>(entity_t *self, entity_t **targ)</argsstring>
        <name>GetSelf</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> **</type>
          <declname>targ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.h" line="12" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="parsefunction_8h_1a2f1ce1fc3533578da89e9d9e566769af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetX</definition>
        <argsstring>(entity_t *self, int *button)</argsstring>
        <name>GetX</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>button</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.h" line="13" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="parsefunction_8h_1a9f48ba431a0a1cfb77ac410398303773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetMousePos</definition>
        <argsstring>(entity_t *self, vec2_t *pos)</argsstring>
        <name>GetMousePos</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="globals_8h_1a773f2054819bb6014f1e50baa39cb5e3" kindref="member">vec2_t</ref> *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.h" line="14" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="parsefunction_8h_1a0f50ddf2c031233309190bfe8e3f8701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetXMouse</definition>
        <argsstring>(entity_t *self, int *button, vec2_t *pos)</argsstring>
        <name>GetXMouse</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>button</declname>
        </param>
        <param>
          <type><ref refid="globals_8h_1a773f2054819bb6014f1e50baa39cb5e3" kindref="member">vec2_t</ref> *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsefunction.h" line="15" column="1" bodyfile="dumb-ways-to-memorize/parsefunction.c" bodystart="59" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__PARSE_FUNCTION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PARSE_FUNCTION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="entity_8h" kindref="compound">entity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SDL.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">void<sp/>(*<ref refid="parsefunction_8h_1a3364b018786a8ca3a643e80ee703807f" kindref="member">ParseToFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="player_8c_1a5ac083a645d964373f022d03df4849c8" kindref="member">name</ref>));</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//Functions<sp/>to<sp/>Parse<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsefunction_8h_1a73c2d9e32b37716a4fa1a886f7cbb1e3" kindref="member">GetWorld</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>**targ);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsefunction_8h_1a2bd9d331736aa28b1650dcb48d2ad141" kindref="member">GetAtPoint</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>**targ);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsefunction_8h_1ad5c9fe379d9ad3c5c1047b2d290c0302" kindref="member">GetSelf</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>**targ);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsefunction_8h_1a2f1ce1fc3533578da89e9d9e566769af" kindref="member">GetX</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>button);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsefunction_8h_1a9f48ba431a0a1cfb77ac410398303773" kindref="member">GetMousePos</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="structvec2__s" kindref="compound">vec2_t</ref><sp/>*pos);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsefunction_8h_1a0f50ddf2c031233309190bfe8e3f8701" kindref="member">GetXMouse</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>button,<sp/><ref refid="structvec2__s" kindref="compound">vec2_t</ref><sp/>*pos);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//Functions<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="parsefunction_8h_1a77aa3443e1cc11d1389a851b108f3328" kindref="member">FunctionNames</ref>[];</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="parsefunction_8h_1a1a22b108a457c916e27af13baf7c97a7" kindref="member">FunctionSymbols</ref>[]);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="dumb-ways-to-memorize/parsefunction.h"/>
  </compounddef>
</doxygen>
