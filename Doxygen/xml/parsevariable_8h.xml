<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="parsevariable_8h" kind="file" language="C++">
    <compoundname>parsevariable.h</compoundname>
    <includes refid="entity_8h" local="yes">entity.h</includes>
    <includes refid="parseobject_8h" local="yes">parseobject.h</includes>
    <includedby refid="ai__interpret_8c" local="yes">dumb-ways-to-memorize/ai_interpret.c</includedby>
    <includedby refid="game_8c" local="yes">dumb-ways-to-memorize/game.c</includedby>
    <includedby refid="parselevel_8c" local="yes">dumb-ways-to-memorize/parselevel.c</includedby>
    <includedby refid="parsepowerup_8c" local="yes">dumb-ways-to-memorize/parsepowerup.c</includedby>
    <includedby refid="parsevariable_8c" local="yes">dumb-ways-to-memorize/parsevariable.c</includedby>
    <incdepgraph>
      <node id="455">
        <label>globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="456" relation="include">
        </childnode>
      </node>
      <node id="459">
        <label>SDL.h</label>
      </node>
      <node id="456">
        <label>jsmn.h</label>
        <link refid="jsmn_8h"/>
        <childnode refid="457" relation="include">
        </childnode>
      </node>
      <node id="461">
        <label>parseobject.h</label>
        <link refid="parseobject_8h"/>
        <childnode refid="456" relation="include">
        </childnode>
      </node>
      <node id="457">
        <label>stddef.h</label>
      </node>
      <node id="453">
        <label>dumb-ways-to-memorize/parsevariable.h</label>
        <link refid="parsevariable.h"/>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
      </node>
      <node id="454">
        <label>entity.h</label>
        <link refid="entity_8h"/>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
      </node>
      <node id="458">
        <label>graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
      </node>
      <node id="460">
        <label>ai_interpret.h</label>
        <link refid="ai__interpret_8h"/>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="466">
        <label>dumb-ways-to-memorize/parsepowerup.c</label>
        <link refid="parsepowerup_8c"/>
      </node>
      <node id="464">
        <label>dumb-ways-to-memorize/game.c</label>
        <link refid="game_8c"/>
      </node>
      <node id="467">
        <label>dumb-ways-to-memorize/parsevariable.c</label>
        <link refid="parsevariable_8c"/>
      </node>
      <node id="462">
        <label>dumb-ways-to-memorize/parsevariable.h</label>
        <link refid="parsevariable.h"/>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
      </node>
      <node id="465">
        <label>dumb-ways-to-memorize/parselevel.c</label>
        <link refid="parselevel_8c"/>
      </node>
      <node id="463">
        <label>dumb-ways-to-memorize/ai_interpret.c</label>
        <link refid="ai__interpret_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43" prot="public" static="no">
        <name>EntityMembers</name>
        <enumvalue id="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a677cd0d5164b66bacecb95e8fd760f02" prot="public">
          <name>ENTITY_MEMBER_HAZARDS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the entity member hazards </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a5bf3fcb47f83cfcca63bd8ee741ed978" prot="public">
          <name>ENTITY_MEMBER_HEALTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the entity member health </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a0c56462a8b776bb0ea37c22cf0b825a0" prot="public">
          <name>ENTITY_MEMBER_COLLISION_TYPE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the entity member collision type </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a84d5f99d096860bdef80f955ba485546" prot="public">
          <name>ENTITY_MEMBER_ENTITY_STATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the entity member entity state </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a204ac38f4d3eab5b09b6db8e8a64d04c" prot="public">
          <name>ENTITY_MEMBER_SPRITES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the entity member sprites </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a108d8c704e5f4c344a33503071f056dc" prot="public">
          <name>ENTITY_MEMBER_ACCEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the entity member accel </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a100ecf079439bf77e5f04b39252e6c6a" prot="public">
          <name>ENTITY_MEMBER_VELOCITY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the entity member velocity </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a09b4e850815f606e0859ee62e8536df2" prot="public">
          <name>ENTITY_MEMBER_POSITION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the entity member position </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43ab21e72ea3a1269e5a95562f97edffc2f" prot="public">
          <name>ENTITY_MEMBER_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the enum for variables in the entity structure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsevariable.h" line="12" column="1" bodyfile="dumb-ways-to-memorize/parsevariable.h" bodystart="11" bodyend="23"/>
      </memberdef>
      <memberdef kind="enum" id="parsevariable_8h_1a3364407dac472d6f76df7f89341b2a5a" prot="public" static="no">
        <name>OtherNumbers</name>
        <enumvalue id="parsevariable_8h_1a3364407dac472d6f76df7f89341b2a5aa38b9241136017b93ea2755a49cf0a000" prot="public">
          <name>HEIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the heights of the sprites </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="parsevariable_8h_1a3364407dac472d6f76df7f89341b2a5aa73c0818986b7c462c2977f57afd00522" prot="public">
          <name>WIDTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the widths of th sprites </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="parsevariable_8h_1a3364407dac472d6f76df7f89341b2a5aa0233623f1ec67ee345913c5d13cfa660" prot="public">
          <name>FRAMES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enum constant representing the number of frames in each sprite </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the enum for graphics members in the entity </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsevariable.h" line="27" column="1" bodyfile="dumb-ways-to-memorize/parsevariable.h" bodystart="26" bodyend="31"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="parsevariable_8h_1aa9cea9281b3ad2f4065f8765ff335241" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* AssignableVariableNames[]</definition>
        <argsstring>[]</argsstring>
        <name>AssignableVariableNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsevariable.h" line="7" column="1" bodyfile="dumb-ways-to-memorize/parsevariable.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="parsevariable_8h_1aa773235cab938d0b4234a5ffaca172f9" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* OtherVariableNames[]</definition>
        <argsstring>[]</argsstring>
        <name>OtherVariableNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsevariable.h" line="8" column="1" bodyfile="dumb-ways-to-memorize/parsevariable.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="parsevariable_8h_1a2e27044cc4aa03202b8d1c8fbb3213ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EditEntity</definition>
        <argsstring>(entity_t *ent, EntityMembers member, void *value)</argsstring>
        <name>EditEntity</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type><ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43" kindref="member">EntityMembers</ref></type>
          <declname>member</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Directly Edit the entity with the given data and member type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ent</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the ent. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>The member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">value</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/30/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsevariable.h" line="43" column="1" bodyfile="dumb-ways-to-memorize/parsevariable.c" bodystart="15" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="parsevariable_8h_1a884bad6dac384af63e9becea40966bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MiniParseFunc</definition>
        <argsstring>(entity_t *ent, jsmntok_t *token, char *str, EntityMembers member, int size)</argsstring>
        <name>MiniParseFunc</name>
        <param>
          <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type><ref refid="structjsmntok__t" kindref="compound">jsmntok_t</ref> *</type>
          <declname>token</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43" kindref="member">EntityMembers</ref></type>
          <declname>member</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mini parse function, handles entering / converting the data into the entity given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ent</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the ent. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">token</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the token. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>The member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsevariable.h" line="57" column="1" bodyfile="dumb-ways-to-memorize/parsevariable.c" bodystart="136" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="parsevariable_8h_1ab44c577d09cbd67632c75301d846676e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="entity_8h_1ad0c3149de5542539dcb5c9251c68fbd2" kindref="member">entity_t</ref> *</type>
        <definition>entity_t* ParseToEntity</definition>
        <argsstring>(object_t *object, char *str)</argsstring>
        <name>ParseToEntity</name>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse to entity. Tries to Assign everything , but the entity function pointers. Current <ref refid="struct_frame" kindref="compound">Frame</ref> = 0, Weight = 1</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">object</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null if it fails, else a pointer to an entity_t.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/21/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsevariable.h" line="72" column="1" bodyfile="dumb-ways-to-memorize/parsevariable.c" bodystart="36" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="parsevariable_8h_1aece06ba78503ca86b77daa6c0f64d01f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="globals_8h_1a773f2054819bb6014f1e50baa39cb5e3" kindref="member">vec2_t</ref> *</type>
        <definition>vec2_t* ParseToVec2</definition>
        <argsstring>(object_t *object, char *str)</argsstring>
        <name>ParseToVec2</name>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse given obj/str to vector 2.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">object</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null if it fails, else a pointer to a vec2_t.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsevariable.h" line="85" column="1" bodyfile="dumb-ways-to-memorize/parsevariable.c" bodystart="186" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="parsevariable_8h_1a090f6fa5f93d7a5becca914af766d1d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char** ParseToStringArray</definition>
        <argsstring>(object_t *object, char *str)</argsstring>
        <name>ParseToStringArray</name>
        <param>
          <type><ref refid="parseobject_8h_1a965db53884ff9e4e077dd5e2e2d6a5e2" kindref="member">object_t</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse obj/data to string array.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">object</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">str</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, the string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null if it fails, else a handle to a char.</para></simplesect>
<simplesect kind="author"><para>Anthony Rios </para></simplesect>
<simplesect kind="date"><para>3/29/2016 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dumb-ways-to-memorize/parsevariable.h" line="98" column="1" bodyfile="dumb-ways-to-memorize/parsevariable.c" bodystart="203" bodyend="219"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__PARSE_VARIABLE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PARSE_VARIABLE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="entity_8h" kindref="compound">entity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parseobject_8h" kindref="compound">parseobject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="parsevariable_8h_1aa9cea9281b3ad2f4065f8765ff335241" kindref="member">AssignableVariableNames</ref>[];</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="parsevariable_8h_1aa773235cab938d0b4234a5ffaca172f9" kindref="member">OtherVariableNames</ref>[];</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13" refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a677cd0d5164b66bacecb95e8fd760f02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a677cd0d5164b66bacecb95e8fd760f02" kindref="member">ENTITY_MEMBER_HAZARDS</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="14" refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a5bf3fcb47f83cfcca63bd8ee741ed978" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a5bf3fcb47f83cfcca63bd8ee741ed978" kindref="member">ENTITY_MEMBER_HEALTH</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15" refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a0c56462a8b776bb0ea37c22cf0b825a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a0c56462a8b776bb0ea37c22cf0b825a0" kindref="member">ENTITY_MEMBER_COLLISION_TYPE</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16" refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a84d5f99d096860bdef80f955ba485546" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a84d5f99d096860bdef80f955ba485546" kindref="member">ENTITY_MEMBER_ENTITY_STATE</ref>,<sp/></highlight></codeline>
<codeline lineno="17" refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a204ac38f4d3eab5b09b6db8e8a64d04c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a204ac38f4d3eab5b09b6db8e8a64d04c" kindref="member">ENTITY_MEMBER_SPRITES</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="18" refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a108d8c704e5f4c344a33503071f056dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a108d8c704e5f4c344a33503071f056dc" kindref="member">ENTITY_MEMBER_ACCEL</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19" refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a100ecf079439bf77e5f04b39252e6c6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a100ecf079439bf77e5f04b39252e6c6a" kindref="member">ENTITY_MEMBER_VELOCITY</ref>,<sp/></highlight></codeline>
<codeline lineno="20" refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a09b4e850815f606e0859ee62e8536df2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43a09b4e850815f606e0859ee62e8536df2" kindref="member">ENTITY_MEMBER_POSITION</ref>,<sp/></highlight></codeline>
<codeline lineno="21" refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43ab21e72ea3a1269e5a95562f97edffc2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43ab21e72ea3a1269e5a95562f97edffc2f" kindref="member">ENTITY_MEMBER_MAX</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}<ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43" kindref="member">EntityMembers</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="parsevariable_8h_1a3364407dac472d6f76df7f89341b2a5a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28" refid="parsevariable_8h_1a3364407dac472d6f76df7f89341b2a5aa38b9241136017b93ea2755a49cf0a000" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsevariable_8h_1a3364407dac472d6f76df7f89341b2a5aa38b9241136017b93ea2755a49cf0a000" kindref="member">HEIGHT</ref>,<sp/></highlight></codeline>
<codeline lineno="29" refid="parsevariable_8h_1a3364407dac472d6f76df7f89341b2a5aa73c0818986b7c462c2977f57afd00522" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsevariable_8h_1a3364407dac472d6f76df7f89341b2a5aa73c0818986b7c462c2977f57afd00522" kindref="member">WIDTH</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="30" refid="parsevariable_8h_1a3364407dac472d6f76df7f89341b2a5aa0233623f1ec67ee345913c5d13cfa660" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parsevariable_8h_1a3364407dac472d6f76df7f89341b2a5aa0233623f1ec67ee345913c5d13cfa660" kindref="member">FRAMES</ref><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal">}<ref refid="parsevariable_8h_1a3364407dac472d6f76df7f89341b2a5a" kindref="member">OtherNumbers</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsevariable_8h_1a2e27044cc4aa03202b8d1c8fbb3213ec" kindref="member">EditEntity</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*ent,<sp/><ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43" kindref="member">EntityMembers</ref><sp/>member,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parsevariable_8h_1a884bad6dac384af63e9becea40966bfb" kindref="member">MiniParseFunc</ref>(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*ent,<sp/><ref refid="structjsmntok__t" kindref="compound">jsmntok_t</ref>*<sp/>token,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/><ref refid="parsevariable_8h_1a05aa3ed10f55de7389364b5f1a6cda43" kindref="member">EntityMembers</ref><sp/>member,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*<ref refid="parsevariable_8h_1ab44c577d09cbd67632c75301d846676e" kindref="member">ParseToEntity</ref>(<ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structvec2__s" kindref="compound">vec2_t</ref><sp/>*<ref refid="parsevariable_8h_1aece06ba78503ca86b77daa6c0f64d01f" kindref="member">ParseToVec2</ref>(<ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="parsevariable_8h_1a090f6fa5f93d7a5becca914af766d1d8" kindref="member">ParseToStringArray</ref>(<ref refid="structobject__s" kindref="compound">object_t</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="dumb-ways-to-memorize/parsevariable.h"/>
  </compounddef>
</doxygen>
