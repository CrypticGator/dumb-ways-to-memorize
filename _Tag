<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>ai_interpret.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d2/de7/ai__interpret_8c</filename>
    <includes id="d5/d82/ai__interpret_8h" name="ai_interpret.h" local="yes" imported="no">ai_interpret.h</includes>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <includes id="dd/d14/parseentity_8h" name="parseentity.h" local="yes" imported="no">parseentity.h</includes>
    <includes id="de/dc0/parsepowerup_8h" name="parsepowerup.h" local="yes" imported="no">parsepowerup.h</includes>
    <includes id="d6/de2/mystrings_8h" name="mystrings.h" local="yes" imported="no">mystrings.h</includes>
    <member kind="function">
      <type>void</type>
      <name>NothingAI</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a899aebed78e696979cefcf070b027cad</anchor>
      <arglist>(entity_t *ent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MoveAI</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a10ee1734c344fd6bed742812af740c88</anchor>
      <arglist>(entity_t *ent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WalkAI</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a187e8425c18dfb7aca0508d0a7057f44</anchor>
      <arglist>(entity_t *ent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>JumpAI</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a9ca66c7d5e6e94ce7118ff064d84b086</anchor>
      <arglist>(entity_t *ent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AttackAI</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>ae87f37befef63c363d791c175cbac93e</anchor>
      <arglist>(entity_t *ent)</arglist>
    </member>
    <member kind="function">
      <type>ai_function_t *</type>
      <name>ParseAI</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a487d35ce74f749b0bfb024a900699f37</anchor>
      <arglist>(object_t *obj, char *g_str, char **variables)</arglist>
    </member>
    <member kind="function">
      <type>ai_function_t *</type>
      <name>ParsePresetAI</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a325c62634a19a96fcd9117b5f59968d6</anchor>
      <arglist>(object_t *obj, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAI_Var</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>ad92c44a495d72fcacc695531329548d7</anchor>
      <arglist>(ai_function_t *function, char *data_str, ai_variables_t var_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAI_Action</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a3a313f5cb5b3cbc61b3e479ef185a0b5</anchor>
      <arglist>(ai_function_t *function, object_t *obj, jsmntok_t *tok, char *g_str, ai_actions_t action_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAI_Check</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a86743612d894c6d9b4ebb191c5d4942c</anchor>
      <arglist>(ai_function_t *function, char **variables_str, char *data_str, ai_conditions_t condition)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>InitAISystem</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a766fc5dc0fd99733613cc7a396f6efdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShutdownAISystem</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a7a593ea725968a09171ad562877652a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ai_type_t</type>
      <name>StrToAI_Type</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a38d0ac016fd6a956b4fcdd5eefdff0c1</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>ai_actions_t</type>
      <name>StrToAI_Action</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>aa905cee9ea67faf79f9f5a0024aec57c</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>ai_conditions_t</type>
      <name>StrToAI_Condition</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a5b44dc13ea5f87379949b546737bcbcb</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>ai_variables_t</type>
      <name>StrToVariableType</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a4185a9dcdca07ed7c43c15f52d9be79d</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="variable">
      <type>ai_function_t *</type>
      <name>gVariableAIs</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a449e08cb7867c0c42e9ad59904dcb947</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ai_function_t *</type>
      <name>gPresetAIs</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a86b6f52e393a91915168567c0c60709c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gAI_Variables</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a4d72b855449c33319a1ad798a9fc3fc7</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gAI_Actions</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>ad51a73747c32e703010066d34b299de2</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gAI_Conditions</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>ab5cd8fb380975357a1de5deae48bf85f</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>void(*)(entity_t *)</type>
      <name>GetFunctionAI</name>
      <anchorfile>d2/de7/ai__interpret_8c.html</anchorfile>
      <anchor>a5ad36cd8551508ec69032e3dc782a1ba</anchor>
      <arglist>(ai_function_t *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ai_interpret.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d5/d82/ai__interpret_8h</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <includes id="d2/dc6/parseobject_8h" name="parseobject.h" local="yes" imported="no">parseobject.h</includes>
    <class kind="struct">ai_function_s</class>
    <member kind="define">
      <type>#define</type>
      <name>MAX_AI</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>adfd8cb6f070423c4a34b4009b0fb47e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_PATH</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a2e44d65e5471bdee5cf225da4ad2fa13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_FUNCTION_OBJECT</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a8241201468b0b49abac3940cb0527ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_VAR_G_STR</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>acc4636e00d8f71734fc22104c3f064c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_TYPE_STR</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>aa3f803bbc58a2e44d676b2d4e0a55e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_TYPE_PRESET_STR</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a81d12be75ce1905126f4e82e9edb951a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_TYPE_VARIABLE_STR</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>aee545ee676dd6fbcc4ce58b97d821f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_TYPE_RECURSIVE_STR</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a0798c22bf2111720f0e1fa3afb6e92af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_VAR_GRAVITY_STR</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a70f88dc6c4b3bb3364101130db4b0452</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_VAR_STR</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>aa438859ab4448dbffef630c7df6fa8da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_CHECK_STR</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a359a134c740c26d3f8eb41174d483405</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_BASE_JUMP</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>aab127305df5b44889696f3220565be08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_BASE_SPEED</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a4fd3497e396da261e5049f3125e20d29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_BASE_THINK_FRAMES</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a2072f0a2f2335d17070a938b2b3f378d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AI_BASE_DAMAGE</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a9e473d026b1cb0faf976cd27350420f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ai_type_t</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a9fc7d2b2756bda7167434e15ddd43159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_TYPE_NULL</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a9fc7d2b2756bda7167434e15ddd43159adcedad9c8bae06b1e0a33bf7534bb8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_TYPE_PRESET</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a9fc7d2b2756bda7167434e15ddd43159a6122d777385c6b1ae97b800595e46e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_TYPE_VARIABLE</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a9fc7d2b2756bda7167434e15ddd43159ac795c273b7af067af5b7fabfa7a711ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_TYPE_RECURSIVE</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a9fc7d2b2756bda7167434e15ddd43159a83ca55055c0e00f9355c3e48bef19b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ai_variables_t</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a0fd706f9f199bde94857277c893baa47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_VAR_SPEED</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a0fd706f9f199bde94857277c893baa47a52140aacf61b5d7be0229d847281ad2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_VAR_FRAMES</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a0fd706f9f199bde94857277c893baa47a0f413fab2c7a95b839d11b5fbc933122</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_VAR_TIME</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a0fd706f9f199bde94857277c893baa47af143db04baea39ca4ef7d2bfdfd237b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_VAR_DAMAGE</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a0fd706f9f199bde94857277c893baa47ac3233de200d915cf261df689ec43ca0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_VAR_DIR_X</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a0fd706f9f199bde94857277c893baa47a9295d6cb5092cc1a0de936f8abc09619</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_VAR_DIR_Y</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a0fd706f9f199bde94857277c893baa47a6eede82ca0eb902da5ddc90926776a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_VAR_CHECK</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a0fd706f9f199bde94857277c893baa47a682c194be42cbd5ca0d0deabb0239876</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_VAR_MAX</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a0fd706f9f199bde94857277c893baa47a63a64e0e8db6e4f80553f0f42dba43bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ai_flags_t</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>aab487a4dae4d7338733bfd01a5658b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_FLAG_CHECK_PLAYER</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>aab487a4dae4d7338733bfd01a5658b23a1e62188aa9d46d657686622ed91447e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_FLAG_CHECK_OBJECT</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>aab487a4dae4d7338733bfd01a5658b23a2f4801c84fb1ead492802fc8b93d1619</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_FLAG_GRAVITY</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>aab487a4dae4d7338733bfd01a5658b23a2d86daab51b8e7812c93f672ebfb6db9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ai_actions_t</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a42492ef6b9956883af49be159eb55dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_ACTION_NOTHING</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a42492ef6b9956883af49be159eb55dffaa8c277933e2d21a6fde065ab745d0fdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_ACTION_MOVE</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a42492ef6b9956883af49be159eb55dffa6b5238de81f107855780253611db0147</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_ACTION_WALK</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a42492ef6b9956883af49be159eb55dffa5a4cdc97564cafbc4ce6b8a11eec0ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_ACTION_JUMP</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a42492ef6b9956883af49be159eb55dffa10840c0a524082dc68990373e17f2128</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_ACTION_ATTACK</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a42492ef6b9956883af49be159eb55dffacd9af8f735c788a43a9a38b14748691a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_ACTION_MAX</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a42492ef6b9956883af49be159eb55dffa34da75a350277c5cd7ebfb9cf5fe5655</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ai_conditions_t</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a8af91f1468f5db98c3e82f6b9d18a618</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_CONDITION_PLAYER_DISTANCE</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a8af91f1468f5db98c3e82f6b9d18a618abd77464bb970bd6743817183f35d3c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_CONDITION_OBJECT_DISTANCE</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a8af91f1468f5db98c3e82f6b9d18a618ab8cba79b3029f8bdd46139c4ed3c5cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_CONDITION_OBJECT_NAME</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a8af91f1468f5db98c3e82f6b9d18a618ae919e1843bb328c0538d9cee91738612</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_CONDITION_LINK_AI</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a8af91f1468f5db98c3e82f6b9d18a618a982f87ff08bedfb4502e0a23b2aacfcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_CONDITION_LINK_ACTION</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a8af91f1468f5db98c3e82f6b9d18a618adc9e63995dc0964e7ba235674f43b3b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AI_CONDITION_MAX</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a8af91f1468f5db98c3e82f6b9d18a618a2db9fa0bb7ff50b7f04334dd990ec308</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ai_function_t *</type>
      <name>ParseAI</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a487d35ce74f749b0bfb024a900699f37</anchor>
      <arglist>(object_t *obj, char *g_str, char **variables)</arglist>
    </member>
    <member kind="function">
      <type>ai_function_t *</type>
      <name>ParsePresetAI</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a325c62634a19a96fcd9117b5f59968d6</anchor>
      <arglist>(object_t *obj, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAI_Var</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>ad92c44a495d72fcacc695531329548d7</anchor>
      <arglist>(ai_function_t *function, char *data_str, ai_variables_t var_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAI_Action</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a3a313f5cb5b3cbc61b3e479ef185a0b5</anchor>
      <arglist>(ai_function_t *function, object_t *obj, jsmntok_t *tok, char *g_str, ai_actions_t action_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAI_Check</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a86743612d894c6d9b4ebb191c5d4942c</anchor>
      <arglist>(ai_function_t *function, char **variables_str, char *data_str, ai_conditions_t condition)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>InitAISystem</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a766fc5dc0fd99733613cc7a396f6efdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShutdownAISystem</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a7a593ea725968a09171ad562877652a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ai_type_t</type>
      <name>StrToAI_Type</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a38d0ac016fd6a956b4fcdd5eefdff0c1</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>ai_actions_t</type>
      <name>StrToAI_Action</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>aa905cee9ea67faf79f9f5a0024aec57c</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>ai_conditions_t</type>
      <name>StrToAI_Condition</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a5b44dc13ea5f87379949b546737bcbcb</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>ai_variables_t</type>
      <name>StrToVariableType</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a4185a9dcdca07ed7c43c15f52d9be79d</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gAI_Variables</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a4d72b855449c33319a1ad798a9fc3fc7</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gAI_Actions</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>ad51a73747c32e703010066d34b299de2</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gAI_Conditions</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>ab5cd8fb380975357a1de5deae48bf85f</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>ai_function_t *</type>
      <name>gVariableAIs</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a449e08cb7867c0c42e9ad59904dcb947</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ai_function_t *</type>
      <name>gPresetAIs</name>
      <anchorfile>d5/d82/ai__interpret_8h.html</anchorfile>
      <anchor>a86b6f52e393a91915168567c0c60709c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>audio.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>da/d09/audio_8h</filename>
    <class kind="struct">sound_s</class>
    <member kind="define">
      <type>#define</type>
      <name>MAX_SOUNDS</name>
      <anchorfile>da/d09/audio_8h.html</anchorfile>
      <anchor>a7bbdbdcfece918fba0f794f7419cd6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>sound_mixer_group</name>
      <anchorfile>da/d09/audio_8h.html</anchorfile>
      <anchor>aefd8a54164d8e94ab23d6e2325d31d62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOUND_GROUP_PLAYER</name>
      <anchorfile>da/d09/audio_8h.html</anchorfile>
      <anchor>aefd8a54164d8e94ab23d6e2325d31d62a2b9da067c6fc24368dca1cf17421484f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOUND_GROUP_OTHER_ENTS</name>
      <anchorfile>da/d09/audio_8h.html</anchorfile>
      <anchor>aefd8a54164d8e94ab23d6e2325d31d62a70f02ae9357941e0fba9753a0a0d8960</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOUND_GROUP_MUSIC</name>
      <anchorfile>da/d09/audio_8h.html</anchorfile>
      <anchor>aefd8a54164d8e94ab23d6e2325d31d62a6d02e919f899c40cda24fbefdb2e08fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOUND_GROUP_OTHER</name>
      <anchorfile>da/d09/audio_8h.html</anchorfile>
      <anchor>aefd8a54164d8e94ab23d6e2325d31d62ad0b6930c93171de1630e25ca7bb9ec78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>sound_mixer_effects</name>
      <anchorfile>da/d09/audio_8h.html</anchorfile>
      <anchor>a9e08ab776531ab461b6da94a2e6b8f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOUND_EFFECT_NULL</name>
      <anchorfile>da/d09/audio_8h.html</anchorfile>
      <anchor>a9e08ab776531ab461b6da94a2e6b8f4ca9eb6a7302c6f7d3551961dd653376858</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOUND_EFFECT_WALK</name>
      <anchorfile>da/d09/audio_8h.html</anchorfile>
      <anchor>a9e08ab776531ab461b6da94a2e6b8f4cabdc3a63c3a99451d91dde262b71951b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOUND_EFFECT_ATTACK</name>
      <anchorfile>da/d09/audio_8h.html</anchorfile>
      <anchor>a9e08ab776531ab461b6da94a2e6b8f4ca56b12beae6941486c61c3e5d06c3fd76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOUND_EFFECT_JUMP</name>
      <anchorfile>da/d09/audio_8h.html</anchorfile>
      <anchor>a9e08ab776531ab461b6da94a2e6b8f4ca25e15a57801776f3ed5dc2c6c7217317</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOUND_EFFECT_DIE</name>
      <anchorfile>da/d09/audio_8h.html</anchorfile>
      <anchor>a9e08ab776531ab461b6da94a2e6b8f4caf7e7ac2d473495e822cf0cd15b78cb03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dumb_physics.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>da/d6c/dumb__physics_8c</filename>
    <includes id="dc/d70/dumb__physics_8h" name="dumb_physics.h" local="yes" imported="no">dumb_physics.h</includes>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <includes id="d3/d62/player_8h" name="player.h" local="yes" imported="no">player.h</includes>
    <member kind="function">
      <type>void</type>
      <name>RunPhysics</name>
      <anchorfile>da/d6c/dumb__physics_8c.html</anchorfile>
      <anchor>ae354ed0629e54a219f0a00be20f6e2f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CheckCollision</name>
      <anchorfile>da/d6c/dumb__physics_8c.html</anchorfile>
      <anchor>ac2d2a3c3841dcc0533751a2421d21b58</anchor>
      <arglist>(entity_t *self, entity_t *other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DoCollision</name>
      <anchorfile>da/d6c/dumb__physics_8c.html</anchorfile>
      <anchor>a9e6b8c74bb414eeffcbd423e4a40e542</anchor>
      <arglist>(entity_t *self, entity_t *other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplySpeedLimit</name>
      <anchorfile>da/d6c/dumb__physics_8c.html</anchorfile>
      <anchor>a1605813c3093dd564cd63719073ce122</anchor>
      <arglist>(vec2_t *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyBounds</name>
      <anchorfile>da/d6c/dumb__physics_8c.html</anchorfile>
      <anchor>aac1300a97cdd2b37a4ddfa316dc92ece</anchor>
      <arglist>(entity_t *ent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyFriction</name>
      <anchorfile>da/d6c/dumb__physics_8c.html</anchorfile>
      <anchor>a04c93e0b3d3d778e28fc804fc52bf88b</anchor>
      <arglist>(vec2_t *a)</arglist>
    </member>
    <member kind="variable">
      <type>vec2_t</type>
      <name>gGravity</name>
      <anchorfile>da/d6c/dumb__physics_8c.html</anchorfile>
      <anchor>a014e115137722e6de4b923adf3da681b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dumb_physics.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>dc/d70/dumb__physics_8h</filename>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <member kind="enumeration">
      <type></type>
      <name>physics_laws_t</name>
      <anchorfile>dc/d70/dumb__physics_8h.html</anchorfile>
      <anchor>a8a3549fa7a1515ef10a78d6f382fe09c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHYSICS_NULL</name>
      <anchorfile>dc/d70/dumb__physics_8h.html</anchorfile>
      <anchor>a8a3549fa7a1515ef10a78d6f382fe09caaf0ba684f808817efe2a9f619fa3e135</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHYSICS_BASE_FRICTION</name>
      <anchorfile>dc/d70/dumb__physics_8h.html</anchorfile>
      <anchor>a8a3549fa7a1515ef10a78d6f382fe09cadba46d443195d2b8b7100dc6cea0385d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHYSICS_BASE_SPEED_X</name>
      <anchorfile>dc/d70/dumb__physics_8h.html</anchorfile>
      <anchor>a8a3549fa7a1515ef10a78d6f382fe09ca4e8c0a7e071da8325b356ced17474cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHYSICS_BASE_SPEED_Y</name>
      <anchorfile>dc/d70/dumb__physics_8h.html</anchorfile>
      <anchor>a8a3549fa7a1515ef10a78d6f382fe09cafd3fa3c618743a3b2092dea0874751ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHYSICS_MAX_SPEED</name>
      <anchorfile>dc/d70/dumb__physics_8h.html</anchorfile>
      <anchor>a8a3549fa7a1515ef10a78d6f382fe09ca805eb0202fcd39e9f3cfc8ec39a6c41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHYSICS_MAX</name>
      <anchorfile>dc/d70/dumb__physics_8h.html</anchorfile>
      <anchor>a8a3549fa7a1515ef10a78d6f382fe09ca2e61b2ff5df60b2418d1b96722fbe06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RunPhysics</name>
      <anchorfile>dc/d70/dumb__physics_8h.html</anchorfile>
      <anchor>ae354ed0629e54a219f0a00be20f6e2f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CheckCollision</name>
      <anchorfile>dc/d70/dumb__physics_8h.html</anchorfile>
      <anchor>ac2d2a3c3841dcc0533751a2421d21b58</anchor>
      <arglist>(entity_t *self, entity_t *other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DoCollision</name>
      <anchorfile>dc/d70/dumb__physics_8h.html</anchorfile>
      <anchor>a9e6b8c74bb414eeffcbd423e4a40e542</anchor>
      <arglist>(entity_t *self, entity_t *other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplySpeedLimit</name>
      <anchorfile>dc/d70/dumb__physics_8h.html</anchorfile>
      <anchor>a1605813c3093dd564cd63719073ce122</anchor>
      <arglist>(vec2_t *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyBounds</name>
      <anchorfile>dc/d70/dumb__physics_8h.html</anchorfile>
      <anchor>aac1300a97cdd2b37a4ddfa316dc92ece</anchor>
      <arglist>(entity_t *ent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyFriction</name>
      <anchorfile>dc/d70/dumb__physics_8h.html</anchorfile>
      <anchor>a04c93e0b3d3d778e28fc804fc52bf88b</anchor>
      <arglist>(vec2_t *a)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>entity.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d1/d06/entity_8c</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <includes id="d7/d04/graphics_8h" name="graphics.h" local="yes" imported="no">graphics.h</includes>
    <includes id="d5/d62/player__controller_8h" name="player_controller.h" local="yes" imported="no">player_controller.h</includes>
    <includes id="d3/d62/player_8h" name="player.h" local="yes" imported="no">player.h</includes>
    <includes id="d0/d0a/parselevel_8h" name="parselevel.h" local="yes" imported="no">parselevel.h</includes>
    <includes id="de/dc0/parsepowerup_8h" name="parsepowerup.h" local="yes" imported="no">parsepowerup.h</includes>
    <member kind="function">
      <type>void</type>
      <name>DrawGeneric</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a8572f94d16405fa3b42dd584893852bd</anchor>
      <arglist>(entity_t *self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawPlayer</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>af5e7ffbf279b65e179e3f89caad2ec45</anchor>
      <arglist>(entity_t *self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ThinkGeneric</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>adb84b9e6a5a5c18dc147a1c0de60fd85</anchor>
      <arglist>(entity_t *self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ThinkPlayer</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>ae11597dd27ad4ab341e8c1ebf07c15f8</anchor>
      <arglist>(entity_t *self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ThinkEnemy</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a6c8f8a4a732c4324caca6ba22521e5a7</anchor>
      <arglist>(entity_t *self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TouchGeneric</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a2eb4fef990cd3eb845b5a99fbd22e0fc</anchor>
      <arglist>(entity_t *self, entity_t *other, int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TouchPlayer</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a0090f3a150bf7833709c04eba953c6e2</anchor>
      <arglist>(entity_t *self, entity_t *other, int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TouchEnemy</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a8460f228ddd46eb74cf3693274191365</anchor>
      <arglist>(entity_t *self, entity_t *other, int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TouchGoal</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a4929b147240092a570d720f74ce10617</anchor>
      <arglist>(entity_t *self, entity_t *other, int type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>InitEntitySystem</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a9aa4a5f113750202be9f45db34908955</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>InitNewEntity</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>ad5cd21060189ddd8246414069ee01676</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>FindNextFreeCachePos</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a373409dde746bc4935afd92aa8975f4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawEntities</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a7406ec610d0755cd8022ceea378f83a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RunEntities</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a4804d845517ee1430fc40dfdc3d333df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>FindCachedEntity</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a018dc9e984dbb58b293f263775b528c6</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>FindEntity</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>aa4c00fea364c35f0a56dd90b9c38efb0</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>FindFreeEntity</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>ace2c9f2a6fee203dab937c5e716ad7dd</anchor>
      <arglist>(int *position)</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>LookForEntityAtPos</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a69811b56fbaa2dfc61154fb027632ea8</anchor>
      <arglist>(vec2_t position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Distance2Entity</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a1c8f7981791b1935beab73c3faab96a5</anchor>
      <arglist>(entity_t *self, entity_t *other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeEntity</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>ae27dad323fa0f26748bd2485f5d019e3</anchor>
      <arglist>(entity_t *ent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeNonPlayerEntities</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>aec8aad072a0215184b68b9815194950c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShutdownEntitySystem</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a8aebaea1606f89c449d67b1f1afb7cdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>entity_t *</type>
      <name>gEntities</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a725e495de3797c12610995f701dd8a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gLastEntity</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a7c67a8b083cb98b1c3eaf871bc4dd4cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>Hazards_str</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a4a2a39e414a5c7caa23e9a8faf5b0e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>Collisions_str</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>acaf43cd754d2eb69556f0502847bc524</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>EntityStates_str</name>
      <anchorfile>d1/d06/entity_8c.html</anchorfile>
      <anchor>a4cb66787ca1de7d1e390016a47ecea04</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>entity.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d8/d83/entity_8h</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <includes id="d7/d04/graphics_8h" name="graphics.h" local="yes" imported="no">graphics.h</includes>
    <includes id="d5/d82/ai__interpret_8h" name="ai_interpret.h" local="yes" imported="no">ai_interpret.h</includes>
    <class kind="struct">entity_s</class>
    <member kind="define">
      <type>#define</type>
      <name>MAX_ENTITIES</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a0b7e155f796ed5e7b49b0f44867135ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENTITY_DIR_LEFT</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a06fc171388523b3731c50218617d64b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENTITY_DIR_RIGHT</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a500b112c5fef7d3144b377ab85307075</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>InitEntitySystem</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a9aa4a5f113750202be9f45db34908955</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>InitNewEntity</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>ad5cd21060189ddd8246414069ee01676</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>FindNextFreeCachePos</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a373409dde746bc4935afd92aa8975f4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>FindCachedEntity</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a018dc9e984dbb58b293f263775b528c6</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>FindEntity</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>aa4c00fea364c35f0a56dd90b9c38efb0</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>FindFreeEntity</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>ace2c9f2a6fee203dab937c5e716ad7dd</anchor>
      <arglist>(int *position)</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>LookForEntityAtPos</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a69811b56fbaa2dfc61154fb027632ea8</anchor>
      <arglist>(vec2_t position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Distance2Entity</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a1c8f7981791b1935beab73c3faab96a5</anchor>
      <arglist>(entity_t *self, entity_t *other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RunEntities</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a4804d845517ee1430fc40dfdc3d333df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawEntities</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a7406ec610d0755cd8022ceea378f83a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintEntity</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a9a3d7af463607a209c8f52caf9e15c70</anchor>
      <arglist>(entity_t *ent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeEntity</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>ae27dad323fa0f26748bd2485f5d019e3</anchor>
      <arglist>(entity_t *ent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeNonPlayerEntities</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>aec8aad072a0215184b68b9815194950c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShutdownEntitySystem</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a8aebaea1606f89c449d67b1f1afb7cdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawGeneric</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a8572f94d16405fa3b42dd584893852bd</anchor>
      <arglist>(entity_t *self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawPlayer</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>af5e7ffbf279b65e179e3f89caad2ec45</anchor>
      <arglist>(entity_t *self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ThinkGeneric</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>adb84b9e6a5a5c18dc147a1c0de60fd85</anchor>
      <arglist>(entity_t *self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ThinkPlayer</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>ae11597dd27ad4ab341e8c1ebf07c15f8</anchor>
      <arglist>(entity_t *self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ThinkEnemy</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a6c8f8a4a732c4324caca6ba22521e5a7</anchor>
      <arglist>(entity_t *self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TouchGeneric</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a2eb4fef990cd3eb845b5a99fbd22e0fc</anchor>
      <arglist>(entity_t *self, entity_t *other, int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TouchPlayer</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a0090f3a150bf7833709c04eba953c6e2</anchor>
      <arglist>(entity_t *self, entity_t *other, int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TouchEnemy</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a8460f228ddd46eb74cf3693274191365</anchor>
      <arglist>(entity_t *self, entity_t *other, int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TouchGoal</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a4929b147240092a570d720f74ce10617</anchor>
      <arglist>(entity_t *self, entity_t *other, int type)</arglist>
    </member>
    <member kind="variable">
      <type>entity_t *</type>
      <name>gEntityDictionary</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>af8475c9d8ef741632cc7461fec5c0fad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>entity_t *</type>
      <name>gEntities</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a725e495de3797c12610995f701dd8a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gLastEntity</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a7c67a8b083cb98b1c3eaf871bc4dd4cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*)(entity_t *)</type>
      <name>GetFunctionAI</name>
      <anchorfile>d8/d83/entity_8h.html</anchorfile>
      <anchor>a5ad36cd8551508ec69032e3dc782a1ba</anchor>
      <arglist>(ai_function_t *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>jsmn.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/External_Libs/</path>
    <filename>df/db5/jsmn_8c</filename>
    <includes id="de/d60/jsmn_8h" name="jsmn.h" local="yes" imported="no">jsmn.h</includes>
    <member kind="function" static="yes">
      <type>static jsmntok_t *</type>
      <name>jsmn_alloc_token</name>
      <anchorfile>df/db5/jsmn_8c.html</anchorfile>
      <anchor>a0d7a964b95b65cd16699a355ede80394</anchor>
      <arglist>(jsmn_parser *parser, jsmntok_t *tokens, size_t num_tokens)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>jsmn_fill_token</name>
      <anchorfile>df/db5/jsmn_8c.html</anchorfile>
      <anchor>a20b875e37a2a5c88888c6d80068715be</anchor>
      <arglist>(jsmntok_t *token, jsmntype_t type, int start, int end)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>jsmn_parse_primitive</name>
      <anchorfile>df/db5/jsmn_8c.html</anchorfile>
      <anchor>a4d1f29464811e2bbf5506fbe5c7ee9de</anchor>
      <arglist>(jsmn_parser *parser, const char *js, size_t len, jsmntok_t *tokens, size_t num_tokens)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>jsmn_parse_string</name>
      <anchorfile>df/db5/jsmn_8c.html</anchorfile>
      <anchor>a568f184e45bb9718270088e1e05a4264</anchor>
      <arglist>(jsmn_parser *parser, const char *js, size_t len, jsmntok_t *tokens, size_t num_tokens)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>jsmn_parse</name>
      <anchorfile>df/db5/jsmn_8c.html</anchorfile>
      <anchor>a774f985a9750a10c7e88304e30191e03</anchor>
      <arglist>(jsmn_parser *parser, const char *js, size_t len, jsmntok_t *tokens, unsigned int num_tokens)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jsmn_init</name>
      <anchorfile>df/db5/jsmn_8c.html</anchorfile>
      <anchor>a8d4a8b3ce5c3d600feea38615b5f9aa6</anchor>
      <arglist>(jsmn_parser *parser)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>jsmn.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/External_Libs/</path>
    <filename>de/d60/jsmn_8h</filename>
    <class kind="struct">jsmntok_t</class>
    <class kind="struct">jsmn_parser</class>
    <member kind="enumeration">
      <type></type>
      <name>jsmntype_t</name>
      <anchorfile>de/d60/jsmn_8h.html</anchorfile>
      <anchor>a065320719769f9dc1fbe30094e52802f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JSMN_UNDEFINED</name>
      <anchorfile>de/d60/jsmn_8h.html</anchorfile>
      <anchor>a065320719769f9dc1fbe30094e52802fa7bc5faeddd33197250cf352af984f185</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JSMN_OBJECT</name>
      <anchorfile>de/d60/jsmn_8h.html</anchorfile>
      <anchor>a065320719769f9dc1fbe30094e52802fa416d6e733082bedc1166f0d66f571867</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JSMN_ARRAY</name>
      <anchorfile>de/d60/jsmn_8h.html</anchorfile>
      <anchor>a065320719769f9dc1fbe30094e52802fabc4c47216dacf36bd4f64ac3d649d471</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JSMN_STRING</name>
      <anchorfile>de/d60/jsmn_8h.html</anchorfile>
      <anchor>a065320719769f9dc1fbe30094e52802fad4ea6277c135d9d3377bf8b719779539</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JSMN_PRIMITIVE</name>
      <anchorfile>de/d60/jsmn_8h.html</anchorfile>
      <anchor>a065320719769f9dc1fbe30094e52802fa2550c93fe929f81f30ea9b629ed98742</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>jsmnerr</name>
      <anchorfile>de/d60/jsmn_8h.html</anchorfile>
      <anchor>afbbe22e63007677ec9e7837b5c1b80ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JSMN_ERROR_NOMEM</name>
      <anchorfile>de/d60/jsmn_8h.html</anchorfile>
      <anchor>afbbe22e63007677ec9e7837b5c1b80eaafa350a2c19cc5fddbfb7c90309d3fe41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JSMN_ERROR_INVAL</name>
      <anchorfile>de/d60/jsmn_8h.html</anchorfile>
      <anchor>afbbe22e63007677ec9e7837b5c1b80eaa3297b1c54d926ce497b7a20530689171</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JSMN_ERROR_PART</name>
      <anchorfile>de/d60/jsmn_8h.html</anchorfile>
      <anchor>afbbe22e63007677ec9e7837b5c1b80eaa851a0e75343c14a13c6893b3727ead16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jsmn_init</name>
      <anchorfile>de/d60/jsmn_8h.html</anchorfile>
      <anchor>a8d4a8b3ce5c3d600feea38615b5f9aa6</anchor>
      <arglist>(jsmn_parser *parser)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>jsmn_parse</name>
      <anchorfile>de/d60/jsmn_8h.html</anchorfile>
      <anchor>a774f985a9750a10c7e88304e30191e03</anchor>
      <arglist>(jsmn_parser *parser, const char *js, size_t len, jsmntok_t *tokens, unsigned int num_tokens)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>simple_logger.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/External_Libs/</path>
    <filename>d2/dbc/simple__logger_8c</filename>
    <includes id="d4/d68/simple__logger_8h" name="simple_logger.h" local="yes" imported="no">simple_logger.h</includes>
    <member kind="function">
      <type>void</type>
      <name>close_logger</name>
      <anchorfile>d2/dbc/simple__logger_8c.html</anchorfile>
      <anchor>ad1ae3faf97c2b2d3beb3fe8b4240401b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_logger</name>
      <anchorfile>d2/dbc/simple__logger_8c.html</anchorfile>
      <anchor>a7559e5b69b98077997f625eb5d4200ab</anchor>
      <arglist>(const char *log_file_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_slog</name>
      <anchorfile>d2/dbc/simple__logger_8c.html</anchorfile>
      <anchor>a94aefe2ae91b60d1f0e9f604ba85f701</anchor>
      <arglist>(char *f, int l, char *msg,...)</arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>__log_file</name>
      <anchorfile>d2/dbc/simple__logger_8c.html</anchorfile>
      <anchor>a2c0e67c0e339f89ee4a2eb9232360c91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>simple_logger.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/External_Libs/</path>
    <filename>d4/d68/simple__logger_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>slog</name>
      <anchorfile>d4/d68/simple__logger_8h.html</anchorfile>
      <anchor>a25f0677308ee574b6660aef61af6b591</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_logger</name>
      <anchorfile>d4/d68/simple__logger_8h.html</anchorfile>
      <anchor>a7559e5b69b98077997f625eb5d4200ab</anchor>
      <arglist>(const char *log_file_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_slog</name>
      <anchorfile>d4/d68/simple__logger_8h.html</anchorfile>
      <anchor>a94aefe2ae91b60d1f0e9f604ba85f701</anchor>
      <arglist>(char *f, int l, char *msg,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>game.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d1/dcb/game_8c</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <includes id="d5/d62/player__controller_8h" name="player_controller.h" local="yes" imported="no">player_controller.h</includes>
    <includes id="d2/dd5/game_8h" name="game.h" local="yes" imported="no">game.h</includes>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <includes id="d6/de2/mystrings_8h" name="mystrings.h" local="yes" imported="no">mystrings.h</includes>
    <includes id="d2/dc6/parseobject_8h" name="parseobject.h" local="yes" imported="no">parseobject.h</includes>
    <includes id="dd/d14/parseentity_8h" name="parseentity.h" local="yes" imported="no">parseentity.h</includes>
    <includes id="de/dc0/parsepowerup_8h" name="parsepowerup.h" local="yes" imported="no">parsepowerup.h</includes>
    <includes id="d0/d0a/parselevel_8h" name="parselevel.h" local="yes" imported="no">parselevel.h</includes>
    <includes id="dc/d70/dumb__physics_8h" name="dumb_physics.h" local="yes" imported="no">dumb_physics.h</includes>
    <includes id="d3/d62/player_8h" name="player.h" local="yes" imported="no">player.h</includes>
    <includes id="d7/d04/graphics_8h" name="graphics.h" local="yes" imported="no">graphics.h</includes>
    <includes id="d3/d54/menu_8h" name="menu.h" local="yes" imported="no">menu.h</includes>
    <member kind="function">
      <type>int</type>
      <name>LoadGameData</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a52972542fcf0985d5ee7277513fbc94c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadEntityData</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a3c5ed8ec6399e50f714fcdab2e6c070a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadLevelData</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a80fc9e8ab6c9f36242aca245edee14c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadPowerUpData</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a8c608fbaa05aed812f106331f8dad649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadMenuData</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>abc5753dfa46f96a3f00ce0c228e8e281</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SelectLevels</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a94f46db60f69856665f7b6fce5db209e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RandomizeSelectedLevels</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a61420beeaf5d0198b41709412508cfd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadSelectedLevel</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>ae4bccf3c8c8b60d039485212d07c6489</anchor>
      <arglist>(int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Poll</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a28255989d2c8adf3bca455e48b6736c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdatePlaying</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a3ddcf597916a7185f18d493a51684845</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>aec0783b5a136e042adcc47bae4fe5291</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawSplash</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>addfb0717b9d4923ffd6ca6a879a24d8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawStart</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a649bc00af241211bb527b38ea5100f35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawGuess</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a3d1af84dd28675b906294f461ba1eacd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawChoose</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>aa4fdce6f0033a5f2bfc633e9d5edc55a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawPlaying</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a3d331e84879ecaad643c10c9b0a74164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Draw</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a3d5cf0d8d37b6b17224867eb397c9a16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Setup</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a50ac2197010a8cf188eafc647122f1a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Run</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>aac704aea738c1edc384a97e51d60662b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Shutdown</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>ac5f038c2b480cf9ef5e19e3eba8dbaf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>exitRequest</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>aaaad6d2ffd165538265b1e68f60ab837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gDelay</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a9736f3ab7bf57237ebee62b9cbd15f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gLevelsPerGame</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a9527243766b6dbc450b03e44a940e8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>jsmn_parser</type>
      <name>gParser</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a93e375e494425adf95818f2524f06891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>gLevels</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>ad2b9ce520a1c8afb8f8e07fcd4b6e58f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>gSelectedLevels</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a74afd8193cb4b707d3c1cbe7c6109f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>gSelectedPowerUps</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a66329b13979a75d803e9f5d705f5a755</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>gUsedPowerUps</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a6540f730c8dc68b12d940f68358ca677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>jsmntok_t *</type>
      <name>gGameTokens</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a141d6ca754370006cba996c9d17ad16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>jsmntok_t *</type>
      <name>gEntityTokens</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>ae426c13677e3a0be6593f5af1a3995ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>jsmntok_t *</type>
      <name>gLevelTokens</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a9f795d64c303e4534a33fa56b0ac3476</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>object_t *</type>
      <name>gGameObject</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>abf114e18525eeabfe0ba238c1ef5985d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>object_t *</type>
      <name>gEntityObject</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a837b44a004dc14ea18337c23f78a569f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>object_t *</type>
      <name>gLevelObject</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a161d9225397ace076dabb57b90ff2c1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gGameData</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>ae4c70a31e9d973c951caa5d0081f371b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gEntityData</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a2438de532d787b051cc555989e00eaf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gLevelData</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>acff6c545ae762a933011c296fda1ead0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gEntitiesFile</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>ae41ba571b800cdaf245c2fb320f897c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gPowerUpsFile</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>ad2abc3c2640a4883d78427b9cd1b3b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>entity_t *</type>
      <name>gEntityDictionary</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>af8475c9d8ef741632cc7461fec5c0fad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>power_t *</type>
      <name>gPowerUps</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a3a8af497dc09185b0764ca27f6afff1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gCurrentPowerUpName</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a66f3fc97502132ecdb2983351ffed1b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GameState</type>
      <name>gGameState</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>aafc8457d9121884bb074efeff2941e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sprite_t *</type>
      <name>gSplash</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>adc658e2e6011d6fb1cdac68634b26a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec2_t</type>
      <name>gZeroPos</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a6cec6004c302c98221d23e95d2e2dff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SDL_Event</type>
      <name>gEventQ</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a66f12a481d172f126a6bf8d3e4a683df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SDL_GameController *</type>
      <name>gController</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>ace39fee8ad9b40be707e8bb899b4b66e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SDL_GameControllerButton</type>
      <name>gButtonQ</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a644f3aeee8c48bb2c622244836ef2046</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>gCurrentTime</name>
      <anchorfile>d1/dcb/game_8c.html</anchorfile>
      <anchor>a708e57fe7cda9dcf5fc11de7d0ec0e5e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>game.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d2/dd5/game_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SCREEN_RES_X</name>
      <anchorfile>d2/dd5/game_8h.html</anchorfile>
      <anchor>a34ab434d791c91656751bb62800e5218</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCREEN_RES_Y</name>
      <anchorfile>d2/dd5/game_8h.html</anchorfile>
      <anchor>a37acfcd6d0042c8cde42b0fe4051c72b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>JSON_FILE</name>
      <anchorfile>d2/dd5/game_8h.html</anchorfile>
      <anchor>aae6948b99853ea69a786492d3bb3453c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENTITY_FILE</name>
      <anchorfile>d2/dd5/game_8h.html</anchorfile>
      <anchor>ac1d0d9869e6ce15be2a789ffc82d1aa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPLASH_SCREEN</name>
      <anchorfile>d2/dd5/game_8h.html</anchorfile>
      <anchor>a8e1907a18d4e5313d8fca7fbdec694e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVELS_NOT_DEFAULT</name>
      <anchorfile>d2/dd5/game_8h.html</anchorfile>
      <anchor>a28d12f0e56f63ba5aebe17c819d95526</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LIVES_DEFAULT</name>
      <anchorfile>d2/dd5/game_8h.html</anchorfile>
      <anchor>acb27f7d0941d87ef9aba997a78b7f8e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVELS_DEFAULT</name>
      <anchorfile>d2/dd5/game_8h.html</anchorfile>
      <anchor>a603aab592ed467dac063a1cf44a55c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Setup</name>
      <anchorfile>d2/dd5/game_8h.html</anchorfile>
      <anchor>a50ac2197010a8cf188eafc647122f1a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Run</name>
      <anchorfile>d2/dd5/game_8h.html</anchorfile>
      <anchor>aac704aea738c1edc384a97e51d60662b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Shutdown</name>
      <anchorfile>d2/dd5/game_8h.html</anchorfile>
      <anchor>ac5f038c2b480cf9ef5e19e3eba8dbaf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mState</name>
      <anchorfile>d2/dd5/game_8h.html</anchorfile>
      <anchor>a9170ea7c3cb727e1c86da45a7ed88a54</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>globals.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d5/d87/globals_8h</filename>
    <includes id="de/d60/jsmn_8h" name="jsmn.h" local="no" imported="no">jsmn.h</includes>
    <class kind="struct">vec2_t</class>
    <class kind="struct">KV_Pair_t</class>
    <member kind="define">
      <type>#define</type>
      <name>STRING_TYPE</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a532ab1a902d469381a35e3286dca3021</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SIGN_BIT</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a23ba328b586aa404188bf6dbcac1dc91</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAZARD_NULL</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a280e46b940d0a42b68758e663db5b23f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAZARD_MAX</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a675210b5beae2282d2d78410c9a4892a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAZARD_DAMAGE</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a64503cbd995995a54eaa8ee4c5f4419d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAZARD_STUN_FRAMES</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>af1a2e554453150b34cd34fc077cd217a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENTITIES_FILE_STR</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>ad3f536d6b289b57569cb1a0298059b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POWER_UPS_STR</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>ae3a2e4fbacd8fc047e40bc4dcbe1ed86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>G_NAME_STR</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a4ca59b935766b727b7d2b1340f5befc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOC_NAME_STR</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a239a28ce65b112a24a27062afa7e7668</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FRAME_DELAY</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a33fabd29c10aabcb416dfbf5c84d3e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PHYSICS_LIMITER</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a0f595a73aa5c05ebf73729966239e15a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>address_t</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a2bc144218f3051b70834068a1d309e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>entity_state_t</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a99f3d33a52ee74fc145c14ceee9d4154</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_STATE_DEAD</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a99f3d33a52ee74fc145c14ceee9d4154a0f1e28ef3eaf9b477ca798f1161bdfbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_STATE_ALIVE</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a99f3d33a52ee74fc145c14ceee9d4154a7d90ca90059e8406d23fb38b473c1d58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_STATE_OTHER</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a99f3d33a52ee74fc145c14ceee9d4154ad407e73756368ce6310657a3c80299df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>collision_type_t</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a09e75d7e17aa0fd73648231363dcc13a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLLISION_TYPE_STATIC</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a09e75d7e17aa0fd73648231363dcc13aaca8cf2b8670715dc64f0b04625fee211</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLLISION_TYPE_RAGDOLL</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a09e75d7e17aa0fd73648231363dcc13aa7e4186c206af11ddf23d64e3d19c4bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLLISION_TYPE_CLIP</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a09e75d7e17aa0fd73648231363dcc13aadaf36ae19b0226a720a707942aea87e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>menu_item_state_t</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a82d3a17b01eab2136e9f3ee50640b89f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_ITEM_STATE_NULL</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a82d3a17b01eab2136e9f3ee50640b89fa6608ad97d094319cd005d3377288fd6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_ITEM_STATE_SELECTED</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a82d3a17b01eab2136e9f3ee50640b89fa67f7e72d6ff1c47e3bd9d92a40c76f48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_ITEM_STATE_NOT_SELECTED</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a82d3a17b01eab2136e9f3ee50640b89fa7d5af9aa82596fba5dac11601b34bf19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_ITEM_STATE_PICKED</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a82d3a17b01eab2136e9f3ee50640b89fab813795d0b9d360f25383957026e3481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_ITEM_STATE_MAX</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a82d3a17b01eab2136e9f3ee50640b89faeef63aba056e1367462753d037a154db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>animation_state_t</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>aa6f86057c10bca778f0390185896f050</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANIMATION_IDLE</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>aa6f86057c10bca778f0390185896f050a365057b4417eea6fa7f37cb60877369d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANIMATION_WALK</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>aa6f86057c10bca778f0390185896f050a83054b457d88f8f493483de9ce763359</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANIMATION_JUMP</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>aa6f86057c10bca778f0390185896f050a536257d8a375b02042100ec9457f25dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANIMATION_ATTACK</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>aa6f86057c10bca778f0390185896f050a1dd751c641fd646c86604000653d31d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANIMATION_HIT</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>aa6f86057c10bca778f0390185896f050a1dfa398765a2780df83e82c8de685710</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANIMATION_MAX</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>aa6f86057c10bca778f0390185896f050a09f8d29af561bc4b40092226507387fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GameState</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a7899b65f1ea0f655e4bbf8d2a5714285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPLASH</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a7899b65f1ea0f655e4bbf8d2a5714285a96a92720d3d9970db2d464166b8a569e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a7899b65f1ea0f655e4bbf8d2a5714285a13d000b4d7dc70d90239b7430d1eb6b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GUESS</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a7899b65f1ea0f655e4bbf8d2a5714285ab8c769f7e7a67d0a91a2fe34fdc5dbea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHOOSE</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a7899b65f1ea0f655e4bbf8d2a5714285a58a9a2b13d64bdcda325c28725c1a73f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAYING</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a7899b65f1ea0f655e4bbf8d2a5714285af095245f5cebc27a97a124345269fed8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a7899b65f1ea0f655e4bbf8d2a5714285adc6f24fd6915a3f2786a1b7045406924</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Vec2Add</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a0b07daa7e4d5ab9bc9842dbd07ffbd1c</anchor>
      <arglist>(vec2_t *A, vec2_t *B, vec2_t *C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Vec2Subtract</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>aad91f1e528aceb82eb58eeaeef31ba96</anchor>
      <arglist>(vec2_t *First, vec2_t *Second, vec2_t *C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Vec2MultiplyScalar</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>aa9e0b764ef33951a7a3e46dfa128837b</anchor>
      <arglist>(vec2_t *A, int B, vec2_t *C)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LargestDivisor</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a9aa87727325e75d1590d911602eab803</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <type>GameState</type>
      <name>StrToGameState</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a295e14f293c2d135e244c6b9f417a447</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>StrToMenuType</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a7d08e8b15cd91ee8dfc2acfcf9c7ca8d</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>StrToHazard</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>abe578bfaa1629eec4e43d2ec76b0499b</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>collision_type_t</type>
      <name>StrToCollisionType</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a44b3e24411aec8ef45be1d5430c5b2eb</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>entity_state_t</type>
      <name>StrToEntityState</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a228d03ca7eff58ad7ed8fccb3a7bc9c9</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SelectLevels</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a94f46db60f69856665f7b6fce5db209e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadSelectedLevel</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>ae4bccf3c8c8b60d039485212d07c6489</anchor>
      <arglist>(int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RandomizeSelectedLevels</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a61420beeaf5d0198b41709412508cfd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CountMem</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>ab5272b6a1f2bf961c7534ec91a243715</anchor>
      <arglist>(void *src, int size_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AllocateDynamic</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a2263fb5e65c0597a8e4c35fa0c05e15d</anchor>
      <arglist>(void **dst, void *src, int size_type, int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareMemToMemArray</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a4cda7fb3c8f061cba2e2dff0710400ee</anchor>
      <arglist>(void *mem, void *mem_array, int size_type, int size_array)</arglist>
    </member>
    <member kind="function">
      <type>vec2_t *</type>
      <name>ParseToVec2</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a78cd305147adb56827b99da05fc6e079</anchor>
      <arglist>(struct object_s *object, char *str)</arglist>
    </member>
    <member kind="function">
      <type>char **</type>
      <name>ParseToStringArray</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a52b135149a8b38239a5274903dfecbb5</anchor>
      <arglist>(struct object_s *object, char *str)</arglist>
    </member>
    <member kind="variable">
      <type>vec2_t</type>
      <name>gZeroPos</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a6cec6004c302c98221d23e95d2e2dff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GameState</type>
      <name>gGameState</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>aafc8457d9121884bb074efeff2941e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>Hazards_str</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a4a2a39e414a5c7caa23e9a8faf5b0e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gEntitiesFile</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>ae41ba571b800cdaf245c2fb320f897c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>Collisions_str</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>acaf43cd754d2eb69556f0502847bc524</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>EntityStates_str</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a4cb66787ca1de7d1e390016a47ecea04</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gPowerUpsFile</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>ad2abc3c2640a4883d78427b9cd1b3b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec2_t *</type>
      <name>mousePos</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>adfb61c9280504c470a83ce9da1384ae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>keyPower</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>abf3c4f267001e0e0f3e5b748b3b1c5e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>gSelectedPowerUps</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a66329b13979a75d803e9f5d705f5a755</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>gUsedPowerUps</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a6540f730c8dc68b12d940f68358ca677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gCurrentPowerUpName</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a66f3fc97502132ecdb2983351ffed1b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>gLevels</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>ad2b9ce520a1c8afb8f8e07fcd4b6e58f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>gSelectedLevels</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a74afd8193cb4b707d3c1cbe7c6109f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>gWorld</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>abc10adf2681d11b06b6878800b3ca08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>gMouse</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>ab049bafb778aa304baa073bba7d0f306</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gPlayerLives</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a7460e61d712f20efd9bca05176757e88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gLevelsPerGame</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a9527243766b6dbc450b03e44a940e8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gScreenWidth</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>abc330db94c68edccfc134b50a56e134e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gScreenHeight</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a530fa2ce59634663df7be20316444f8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>gCurrentTime</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a708e57fe7cda9dcf5fc11de7d0ec0e5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec2_t</type>
      <name>gGravity</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a014e115137722e6de4b923adf3da681b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>exitRequest</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>aaaad6d2ffd165538265b1e68f60ab837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>jsmn_parser</type>
      <name>gParser</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a93e375e494425adf95818f2524f06891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>jsmntok_t *</type>
      <name>gGameTokens</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a141d6ca754370006cba996c9d17ad16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct object_s *</type>
      <name>gGameObject</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a251a8e16ca7c41f1e7a6120dd23cff4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>jsmntok_t *</type>
      <name>gEntityTokens</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>ae426c13677e3a0be6593f5af1a3995ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct object_s *</type>
      <name>gEntityObject</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>ae9a03a398547a2b1de15b7513a1a4ee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>jsmntok_t *</type>
      <name>gLevelTokens</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a9f795d64c303e4534a33fa56b0ac3476</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct object_s *</type>
      <name>gLevelObject</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a298cfdaa57c7c170b3e7556a36d4f95b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gGameData</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>ae4c70a31e9d973c951caa5d0081f371b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gEntityData</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>a2438de532d787b051cc555989e00eaf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gLevelData</name>
      <anchorfile>d5/d87/globals_8h.html</anchorfile>
      <anchor>acff6c545ae762a933011c296fda1ead0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>graphics.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d5/d95/graphics_8c</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <includes id="d7/d04/graphics_8h" name="graphics.h" local="yes" imported="no">graphics.h</includes>
    <member kind="function">
      <type>int</type>
      <name>InitGraphics</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a5a91ce2f20cdb3efdd3a10f8bcd79fe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShutdownGraphics</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a57deac6adc760a6c690d7c05b1b32b3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>sprite_t *</type>
      <name>LoadSprite</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a9ef47fe758affb875f01b07e551513c7</anchor>
      <arglist>(const char *name, int flags)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DrawSprite</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a17fde33b1d856d825920d633285aec6e</anchor>
      <arglist>(sprite_t *sprite, int *frame, vec2_t *position, SDL_Renderer *renderer)</arglist>
    </member>
    <member kind="function">
      <type>Frame *</type>
      <name>LoadAnimation</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a9cf2216f8c9099f0767277b29b0b8044</anchor>
      <arglist>(int frame_width, int frame_height, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>sprite_t *</type>
      <name>FindSprite</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>af4c49239d2f0e5306964c66be9553832</anchor>
      <arglist>(const char *name, int *position)</arglist>
    </member>
    <member kind="function">
      <type>sprite_t *</type>
      <name>FindFreeSprite</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a88a59e4cda72f43e47b635ed6c6a9f95</anchor>
      <arglist>(int *position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeSprite</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a5668bec74dc06834b3141ac6da4063a2</anchor>
      <arglist>(sprite_t *sprite)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IncrementFrame</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>aa804be8d810666078d9915033a3d4317</anchor>
      <arglist>(sprite_t *sprite)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SDL_SetRect</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>af04a9f3481d89afc13d2e2e0a621fad6</anchor>
      <arglist>(SDL_Rect *rect, int x, int y, int w, int h)</arglist>
    </member>
    <member kind="variable">
      <type>SDL_Window *</type>
      <name>gWindow</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a222f53a6a442d8f716dffd665e83528a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SDL_Renderer *</type>
      <name>gRenderer</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a4735638969a524c4ac90a88f23c59a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SDL_Surface *</type>
      <name>gRedSurface</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>aec8ecf79cbfef975bd1751e8eac92e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SDL_Texture *</type>
      <name>gRedTexture</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a3b5a0de489d49963cac9fd22f187d813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SDL_Renderer *</type>
      <name>gRedRenderer</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a324d0637f44d796996709bb187909c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sprite_t *</type>
      <name>gSprites</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a7e583fa4ad1a7137e056e5dece1ed6c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gLastSprite</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a3555fbac07f5c5a609c2e9b8c1b81731</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gScreenWidth</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>abc330db94c68edccfc134b50a56e134e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gScreenHeight</name>
      <anchorfile>d5/d95/graphics_8c.html</anchorfile>
      <anchor>a530fa2ce59634663df7be20316444f8b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>graphics.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d7/d04/graphics_8h</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <class kind="struct">Frame</class>
    <class kind="struct">sprite_s</class>
    <member kind="define">
      <type>#define</type>
      <name>GAME_NAME</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>aed7818555b2da57314243d796315e4e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCREEN_STRING</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>aa7c5e8a32eb1645ee26fda856b4ca41a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCREEN_RES_W</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>ab4f60dcfaf8e1c328b2862723508d851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCREEN_RES_H</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a7a7d00e9da31c5ddbab5d35adab314f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_SPRITES</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>aeb21c7ac080eea985b7701df626d9cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_ANIMATIONS</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a99f9cfd68ef4237b568bda6e3e63312f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>InitGraphics</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a5a91ce2f20cdb3efdd3a10f8bcd79fe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShutdownGraphics</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a57deac6adc760a6c690d7c05b1b32b3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Frame *</type>
      <name>LoadAnimation</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a9cf2216f8c9099f0767277b29b0b8044</anchor>
      <arglist>(int frame_width, int frame_height, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>sprite_t *</type>
      <name>FindSprite</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>af4c49239d2f0e5306964c66be9553832</anchor>
      <arglist>(const char *name, int *position)</arglist>
    </member>
    <member kind="function">
      <type>sprite_t *</type>
      <name>FindFreeSprite</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a88a59e4cda72f43e47b635ed6c6a9f95</anchor>
      <arglist>(int *position)</arglist>
    </member>
    <member kind="function">
      <type>sprite_t *</type>
      <name>LoadSprite</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a9ef47fe758affb875f01b07e551513c7</anchor>
      <arglist>(const char *name, int flags)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DrawSprite</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a17fde33b1d856d825920d633285aec6e</anchor>
      <arglist>(sprite_t *sprite, int *frame, vec2_t *position, SDL_Renderer *renderer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeSprite</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a5668bec74dc06834b3141ac6da4063a2</anchor>
      <arglist>(sprite_t *sprite)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IncrementFrame</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>aa804be8d810666078d9915033a3d4317</anchor>
      <arglist>(sprite_t *sprite)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SDL_SetRect</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>af04a9f3481d89afc13d2e2e0a621fad6</anchor>
      <arglist>(SDL_Rect *rect, int x, int y, int w, int h)</arglist>
    </member>
    <member kind="variable">
      <type>sprite_t *</type>
      <name>gSprites</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a7e583fa4ad1a7137e056e5dece1ed6c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gLastSprite</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a3555fbac07f5c5a609c2e9b8c1b81731</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SDL_Window *</type>
      <name>gWindow</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a222f53a6a442d8f716dffd665e83528a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SDL_Renderer *</type>
      <name>gRenderer</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a4735638969a524c4ac90a88f23c59a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SDL_Surface *</type>
      <name>gRedSurface</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>aec8ecf79cbfef975bd1751e8eac92e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SDL_Texture *</type>
      <name>gRedTexture</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a3b5a0de489d49963cac9fd22f187d813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SDL_Renderer *</type>
      <name>gRedRenderer</name>
      <anchorfile>d7/d04/graphics_8h.html</anchorfile>
      <anchor>a324d0637f44d796996709bb187909c0c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>main.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d0/d29/main_8c</filename>
    <includes id="d4/dbf/main_8h" name="main.h" local="yes" imported="no">main.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>d0/d29/main_8c.html</anchorfile>
      <anchor>ae66f6b31b5ad750f1fe042a706a4e3d4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>main.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d4/dbf/main_8h</filename>
    <includes id="d2/dd5/game_8h" name="game.h" local="yes" imported="no">game.h</includes>
  </compound>
  <compound kind="file">
    <name>menu.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d2/d0a/menu_8c</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <includes id="d7/d04/graphics_8h" name="graphics.h" local="yes" imported="no">graphics.h</includes>
    <includes id="d3/d54/menu_8h" name="menu.h" local="yes" imported="no">menu.h</includes>
    <includes id="d6/de2/mystrings_8h" name="mystrings.h" local="yes" imported="no">mystrings.h</includes>
    <includes id="de/dc0/parsepowerup_8h" name="parsepowerup.h" local="yes" imported="no">parsepowerup.h</includes>
    <includes id="d0/d0a/parselevel_8h" name="parselevel.h" local="yes" imported="no">parselevel.h</includes>
    <includes id="d3/d62/player_8h" name="player.h" local="yes" imported="no">player.h</includes>
    <member kind="function">
      <type>void</type>
      <name>DeselectItemByNum</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>a4e4ef9cbfcd4be548e989655712272a1</anchor>
      <arglist>(menu_t *self, int item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SelectItemByNum</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>a6d1957abbc96c1fae5a5baee797eb4b8</anchor>
      <arglist>(menu_t *self, int item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateVerticalMenu</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>a5db349f6528f6875243365dfb9d9a7f1</anchor>
      <arglist>(menu_t *self, SDL_GameControllerButton button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdatePowerUpMenu</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>aa9b02df49523b8c264f21ea4022db35c</anchor>
      <arglist>(menu_t *self, SDL_GameControllerButton button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdatePowerSelectMenu</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>a5c05034491d908bb3ac48a67be87d300</anchor>
      <arglist>(menu_t *self, SDL_GameControllerButton button)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>InitMenuSystem</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>a1c427a4122a85bc392880fdcf2a843ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawMenuByNum</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>ad2751e2bba6d6da7cf3658079447e629</anchor>
      <arglist>(menu_t *self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawMenuByState</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>a07e521149cdeaef92a6ba4c82945f7ca</anchor>
      <arglist>(menu_t *self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessMenuItemsByType</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>ac633a4b1666d690b51d887d296c9e3d2</anchor>
      <arglist>(menu_item_t *items, menu_type_t type)</arglist>
    </member>
    <member kind="function">
      <type>menu_t *</type>
      <name>LoadMenu</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>a6f4a9eb4cd081c5b7a3e5e0475ed8437</anchor>
      <arglist>(object_t *object, char *g_str, GameState curr_state, GameState previous_state)</arglist>
    </member>
    <member kind="function">
      <type>menu_t *</type>
      <name>FindMenuFromGameState</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>a9cd9b0277a6a4e88c4c065e0efeb6192</anchor>
      <arglist>(GameState curr_state)</arglist>
    </member>
    <member kind="function">
      <type>menu_t *</type>
      <name>FindFreeMenu</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>a7cb8c357e2b15b9a01f236ff19382427</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>menu_item_t *</type>
      <name>FindMenuItem</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>af50d4e67c36ed63b1b84befc82d8ac8a</anchor>
      <arglist>(menu_t *menu, char *item)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>StrToMenuType</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>a7d08e8b15cd91ee8dfc2acfcf9c7ca8d</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="variable">
      <type>menu_t *</type>
      <name>gMenus</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>ac9844c472d09220d402c191e16f6474e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gCurrentSelectedItem</name>
      <anchorfile>d2/d0a/menu_8c.html</anchorfile>
      <anchor>aedbdd42a09e1068fad843e6a3d867271</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>menu.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d3/d54/menu_8h</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <includes id="d7/d04/graphics_8h" name="graphics.h" local="yes" imported="no">graphics.h</includes>
    <includes id="d2/dc6/parseobject_8h" name="parseobject.h" local="yes" imported="no">parseobject.h</includes>
    <class kind="struct">menu_item_s</class>
    <class kind="struct">menu_s</class>
    <member kind="define">
      <type>#define</type>
      <name>MENU_ITEM_MAX</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>ab4ca22b3abeffba22f56886bbb39c0f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_MENUS</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>ab2b40834d297a20af015b5c3b13e31e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MENU_BACKGROUND</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>a61e9cfe2e8569082ec57ba6a7c3e7cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MENU_ITEMS</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>a9d4a2080871448b284a8449cd899898f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MENU_ITEM_SPRITE</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>aa9ede24621a515a557d60a374f4dff6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MENU_ITEM_TEXT</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>a4b6cafdbf81fcaff2646bea1c99cdc33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MENU_ITEM_LINK</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>aa17ff70e4da81270ffeab1dcb19cacb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MENU_ITEM_EXTRA</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>a31141b0e1ee4f4ab9f3f64e7ed63a6e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MENU_TYPE</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>a7608eabfc6ac732a60c62ec331346032</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MENU_TYPE_STR_POWER</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>a184f67b2269e942df91f4cc4ef314b77</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MENU_TYPE_STR_CHOOSE</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>a14d7adc2f2315acd3a25c75f0df1b00a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MENU_TYPE_STR_H</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>ad93a7e08ccb25a8e9d9ff257c6d00d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MENU_TYPE_STR_V</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>a6e3272cde8626b4dbe6fb12af2a4fec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MENU_TYPE_STR_GRID</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>af1d21de0fd729ce50359d39fc89b84bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>menu_type_t</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>ae04d0184eeca6be261090a6cfc49b92e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_TYPE_NULL</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>ae04d0184eeca6be261090a6cfc49b92ea40eba317709e6fb74680ab0be4506ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_TYPE_H</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>ae04d0184eeca6be261090a6cfc49b92ea44093eb84c021250710c21d7040742c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_TYPE_V</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>ae04d0184eeca6be261090a6cfc49b92eae51e962ec8beccece27215c15adcead4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_TYPE_GRID</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>ae04d0184eeca6be261090a6cfc49b92eadf5c230f1c0e9ba8cb94248e675e520c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_TYPE_POWER</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>ae04d0184eeca6be261090a6cfc49b92eaed4cdae7debfa0f072aed36802897c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_TYPE_CHOOSE</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>ae04d0184eeca6be261090a6cfc49b92eaf382d35204a24dfcc899f49a21d6180a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_TYPE_MAX</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>ae04d0184eeca6be261090a6cfc49b92ea029b59e4df4e951f090850a0f1e6800b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>InitMenuSystem</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>a1c427a4122a85bc392880fdcf2a843ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>menu_t *</type>
      <name>LoadMenu</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>a6f4a9eb4cd081c5b7a3e5e0475ed8437</anchor>
      <arglist>(object_t *object, char *g_str, GameState curr_state, GameState previous_state)</arglist>
    </member>
    <member kind="function">
      <type>menu_t *</type>
      <name>FindMenuFromGameState</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>a9cd9b0277a6a4e88c4c065e0efeb6192</anchor>
      <arglist>(GameState curr_state)</arglist>
    </member>
    <member kind="function">
      <type>menu_t *</type>
      <name>FindFreeMenu</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>a7cb8c357e2b15b9a01f236ff19382427</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>menu_item_t *</type>
      <name>FindMenuItem</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>af50d4e67c36ed63b1b84befc82d8ac8a</anchor>
      <arglist>(menu_t *menu, char *item)</arglist>
    </member>
    <member kind="variable">
      <type>menu_t *</type>
      <name>gMenus</name>
      <anchorfile>d3/d54/menu_8h.html</anchorfile>
      <anchor>ac9844c472d09220d402c191e16f6474e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mymath.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d0/d97/mymath_8c</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <member kind="function">
      <type>int</type>
      <name>LargestDivisor</name>
      <anchorfile>d0/d97/mymath_8c.html</anchorfile>
      <anchor>a9aa87727325e75d1590d911602eab803</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Vec2Add</name>
      <anchorfile>d0/d97/mymath_8c.html</anchorfile>
      <anchor>a0b07daa7e4d5ab9bc9842dbd07ffbd1c</anchor>
      <arglist>(vec2_t *A, vec2_t *B, vec2_t *C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Vec2Subtract</name>
      <anchorfile>d0/d97/mymath_8c.html</anchorfile>
      <anchor>aad91f1e528aceb82eb58eeaeef31ba96</anchor>
      <arglist>(vec2_t *First, vec2_t *Second, vec2_t *C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Vec2MultiplyScalar</name>
      <anchorfile>d0/d97/mymath_8c.html</anchorfile>
      <anchor>aa9e0b764ef33951a7a3e46dfa128837b</anchor>
      <arglist>(vec2_t *A, int B, vec2_t *C)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CountMem</name>
      <anchorfile>d0/d97/mymath_8c.html</anchorfile>
      <anchor>ab5272b6a1f2bf961c7534ec91a243715</anchor>
      <arglist>(void *src, int size_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AllocateDynamic</name>
      <anchorfile>d0/d97/mymath_8c.html</anchorfile>
      <anchor>a2263fb5e65c0597a8e4c35fa0c05e15d</anchor>
      <arglist>(void **dst, void *src, int size_type, int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareMemToMemArray</name>
      <anchorfile>d0/d97/mymath_8c.html</anchorfile>
      <anchor>a4cda7fb3c8f061cba2e2dff0710400ee</anchor>
      <arglist>(void *mem, void *mem_array, int size_type, int size_array)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mystrings.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>df/d66/mystrings_8c</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <includes id="d6/de2/mystrings_8h" name="mystrings.h" local="yes" imported="no">mystrings.h</includes>
    <includes id="d2/dc6/parseobject_8h" name="parseobject.h" local="yes" imported="no">parseobject.h</includes>
    <member kind="enumeration">
      <type></type>
      <name>FreeVar</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a1da99834a75d917d81dc9c9921da4f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARSER</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a1da99834a75d917d81dc9c9921da4f19a24e246e9a582f56a2b81bf805261840b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a1da99834a75d917d81dc9c9921da4f19aee847e634a4297b274316de8a8ca9921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOKEN</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a1da99834a75d917d81dc9c9921da4f19a07fe54e18c187cac6548db45a3f3676a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>jsmntok_t *</type>
      <name>FindKey</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a6466498df69994b55bb62b9b53652142</anchor>
      <arglist>(jsmntok_t *token, char *key, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>JsmnToString</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a78d7d9580e10b30e6409ebfeb29e5cfe</anchor>
      <arglist>(jsmntok_t *token, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>FindValue</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>ac183085aec4f8b1867b5737aacb9c37f</anchor>
      <arglist>(struct object_s *obj, char *key, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>JsmnToInt</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>aa5c26c3bf9ec4cf5d58937787db2d415</anchor>
      <arglist>(jsmntok_t *token, char *str, int *dst)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>StrToInt</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a7847ecf365cd64921278854576e5ddcc</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CharToInt</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a357780097bc5067ece05926de2d77eae</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>TypeFromJSON</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a1f4734e9e15d21a1c72758530c1a468f</anchor>
      <arglist>(jsmntype_t Type)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>FileToString</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a641da0f4b770922d999f38d2d23b2ed6</anchor>
      <arglist>(char *fileName)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ConvertFileToUseable</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a496e2427daae7d276aa1c25bf7173f9b</anchor>
      <arglist>(char *fileName, jsmn_parser *parser, char **stringStorage, jsmntok_t **jsmnStorage)</arglist>
    </member>
    <member kind="function">
      <type>GameState</type>
      <name>StrToGameState</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a295e14f293c2d135e244c6b9f417a447</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>StrToHazard</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>abe578bfaa1629eec4e43d2ec76b0499b</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>collision_type_t</type>
      <name>StrToCollisionType</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a44b3e24411aec8ef45be1d5430c5b2eb</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>entity_state_t</type>
      <name>StrToEntityState</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a228d03ca7eff58ad7ed8fccb3a7bc9c9</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>vec2_t *</type>
      <name>ParseToVec2</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>aece06ba78503ca86b77daa6c0f64d01f</anchor>
      <arglist>(object_t *object, char *str)</arglist>
    </member>
    <member kind="function">
      <type>char **</type>
      <name>ParseToStringArray</name>
      <anchorfile>df/d66/mystrings_8c.html</anchorfile>
      <anchor>a090f6fa5f93d7a5becca914af766d1d8</anchor>
      <arglist>(object_t *object, char *str)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mystrings.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d6/de2/mystrings_8h</filename>
    <includes id="de/d60/jsmn_8h" name="jsmn.h" local="no" imported="no">jsmn.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ALLOC_STR</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>aa063848210bb153608dd1b382a9e1c44</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GAME_STATE_SPLASH_STR</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>abee22002c9d20fec0bc94a3bfd4e40ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GAME_STATE_START_STR</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>a06f08b51f172bd9daaa65efb9a67ec85</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GAME_STATE_GUESS_STR</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>aba8c67d5ed1579335310ff77649ff89e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GAME_STATE_CHOOSE_STR</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>abe75cf0ea422164cff13e9821b1aedf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GAME_STATE_PLAYING_STR</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>acfc3e6c9cf34eaee72d09667d7d265db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GAME_STATE_END_STR</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>a4e38eab119f1fee536a85e1f29c1ee44</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>FileToString</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>a0357c834f41f5fa46fafa8b8ade095e4</anchor>
      <arglist>(char *file)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>TypeFromJSON</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>a1f4734e9e15d21a1c72758530c1a468f</anchor>
      <arglist>(jsmntype_t Type)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>JsmnToString</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>a78d7d9580e10b30e6409ebfeb29e5cfe</anchor>
      <arglist>(jsmntok_t *token, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>FindValue</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>ac183085aec4f8b1867b5737aacb9c37f</anchor>
      <arglist>(struct object_s *obj, char *key, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>JsmnToInt</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>aa5c26c3bf9ec4cf5d58937787db2d415</anchor>
      <arglist>(jsmntok_t *token, char *str, int *dst)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>StrToInt</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>a7847ecf365cd64921278854576e5ddcc</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CharToInt</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>a357780097bc5067ece05926de2d77eae</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>jsmntok_t *</type>
      <name>FindKey</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>a6466498df69994b55bb62b9b53652142</anchor>
      <arglist>(jsmntok_t *token, char *key, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ConvertFileToUseable</name>
      <anchorfile>d6/de2/mystrings_8h.html</anchorfile>
      <anchor>a496e2427daae7d276aa1c25bf7173f9b</anchor>
      <arglist>(char *fileName, jsmn_parser *parser, char **stringStorage, jsmntok_t **jsmnStorage)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parseentity.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>df/dfd/parseentity_8c</filename>
    <includes id="dd/d14/parseentity_8h" name="parseentity.h" local="yes" imported="no">parseentity.h</includes>
    <includes id="d2/dc6/parseobject_8h" name="parseobject.h" local="yes" imported="no">parseobject.h</includes>
    <includes id="d6/de2/mystrings_8h" name="mystrings.h" local="yes" imported="no">mystrings.h</includes>
    <includes id="de/d60/jsmn_8h" name="jsmn.h" local="no" imported="no">jsmn.h</includes>
    <member kind="function">
      <type>void</type>
      <name>AddComplexMemToEnt</name>
      <anchorfile>df/dfd/parseentity_8c.html</anchorfile>
      <anchor>a83a910cc17be01f6abed3e9891e36141</anchor>
      <arglist>(entity_t *ent, entity_members_complex_t member, void *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddVector2Entity</name>
      <anchorfile>df/dfd/parseentity_8c.html</anchorfile>
      <anchor>aa32143bbc934bc48668cafeb0e3248a1</anchor>
      <arglist>(entity_t *ent, entity_members_vector2_t member, vec2_t *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddSpritesToEnt</name>
      <anchorfile>df/dfd/parseentity_8c.html</anchorfile>
      <anchor>a57a6f329f94510889db3011b26943f37</anchor>
      <arglist>(entity_t *ent, char **files, int size)</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>ParseToEntity</name>
      <anchorfile>df/dfd/parseentity_8c.html</anchorfile>
      <anchor>ab44c577d09cbd67632c75301d846676e</anchor>
      <arglist>(object_t *object, char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ParseComplexMember</name>
      <anchorfile>df/dfd/parseentity_8c.html</anchorfile>
      <anchor>a7a4d2a55ace162f6c7bacb3246439e40</anchor>
      <arglist>(entity_t *ent, jsmntok_t *token, char *str, entity_members_complex_t member, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintEntity</name>
      <anchorfile>df/dfd/parseentity_8c.html</anchorfile>
      <anchor>a9a3d7af463607a209c8f52caf9e15c70</anchor>
      <arglist>(entity_t *ent)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>ComplexVariableNames</name>
      <anchorfile>df/dfd/parseentity_8c.html</anchorfile>
      <anchor>affe1241635b5b2826b55ace851274521</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>Vector2VariableNames</name>
      <anchorfile>df/dfd/parseentity_8c.html</anchorfile>
      <anchor>aa6f945937c822bc3524a9b96b7100e90</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>SimpleVariableNames</name>
      <anchorfile>df/dfd/parseentity_8c.html</anchorfile>
      <anchor>a1325b83b387f27036869cc2cf84e5302</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parseentity.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>dd/d14/parseentity_8h</filename>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <includes id="d2/dc6/parseobject_8h" name="parseobject.h" local="yes" imported="no">parseobject.h</includes>
    <member kind="enumeration">
      <type></type>
      <name>entity_members_complex_t</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a3030673ffe6bb9306db2059733aa7947</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_MEMBER_HAZARDS</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a3030673ffe6bb9306db2059733aa7947a677cd0d5164b66bacecb95e8fd760f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_MEMBER_COLLISION_TYPE</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a3030673ffe6bb9306db2059733aa7947a0c56462a8b776bb0ea37c22cf0b825a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_MEMBER_ENTITY_STATE</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a3030673ffe6bb9306db2059733aa7947a84d5f99d096860bdef80f955ba485546</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_MEMBER_MAX</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a3030673ffe6bb9306db2059733aa7947ab21e72ea3a1269e5a95562f97edffc2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>entity_members_vector2_t</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a46383234d2c2bc563b9ab0c0e0740b62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_MEMBER_ACCEL</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a46383234d2c2bc563b9ab0c0e0740b62a108d8c704e5f4c344a33503071f056dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_MEMBER_VELOCITY</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a46383234d2c2bc563b9ab0c0e0740b62a100ecf079439bf77e5f04b39252e6c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_MEMBER_POSITION</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a46383234d2c2bc563b9ab0c0e0740b62a09b4e850815f606e0859ee62e8536df2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>entity_members_simple_t</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a6d485bd1f590cb7494bab05a07c009ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_MEMBER_SPRITE</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a6d485bd1f590cb7494bab05a07c009eda3ac938ab19959059c0f2fe61b29419ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_MEMBER_HEALTH</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a6d485bd1f590cb7494bab05a07c009eda5bf3fcb47f83cfcca63bd8ee741ed978</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_MEMBER_DAMAGE</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a6d485bd1f590cb7494bab05a07c009eda7a49e7a7bcab123e10943922757f6e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_MEMBER_HEIGHT</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a6d485bd1f590cb7494bab05a07c009eda9c31c26a0c1943b6601cbd5f3fe3c34c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_MEMBER_WIDTH</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a6d485bd1f590cb7494bab05a07c009eda301af45831c03cf42ba8799260fc5cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITY_MEMBER_FRAMES</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a6d485bd1f590cb7494bab05a07c009eda8399495fab1842359f322210aec9c699</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddComplexMemToEnt</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a83a910cc17be01f6abed3e9891e36141</anchor>
      <arglist>(entity_t *ent, entity_members_complex_t member, void *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ParseComplexMember</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a7a4d2a55ace162f6c7bacb3246439e40</anchor>
      <arglist>(entity_t *ent, jsmntok_t *token, char *str, entity_members_complex_t member, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddVector2Entity</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>aa32143bbc934bc48668cafeb0e3248a1</anchor>
      <arglist>(entity_t *ent, entity_members_vector2_t member, vec2_t *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddSpritesToEnt</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a57a6f329f94510889db3011b26943f37</anchor>
      <arglist>(entity_t *ent, char **files, int size)</arglist>
    </member>
    <member kind="function">
      <type>entity_t *</type>
      <name>ParseToEntity</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>ab44c577d09cbd67632c75301d846676e</anchor>
      <arglist>(object_t *object, char *str)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>ComplexVariableNames</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>affe1241635b5b2826b55ace851274521</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>Vector2VariableNames</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>aa6f945937c822bc3524a9b96b7100e90</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>SimpleVariableNames</name>
      <anchorfile>dd/d14/parseentity_8h.html</anchorfile>
      <anchor>a1325b83b387f27036869cc2cf84e5302</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parsefunction.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>de/db2/parsefunction_8c</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <includes id="db/d02/parsefunction_8h" name="parsefunction.h" local="yes" imported="no">parsefunction.h</includes>
    <member kind="function">
      <type>void *</type>
      <name>ParseToFunction</name>
      <anchorfile>de/db2/parsefunction_8c.html</anchorfile>
      <anchor>a3364b018786a8ca3a643e80ee703807f</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetWorld</name>
      <anchorfile>de/db2/parsefunction_8c.html</anchorfile>
      <anchor>a73c2d9e32b37716a4fa1a886f7cbb1e3</anchor>
      <arglist>(entity_t *self, entity_t **targ)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetAtPoint</name>
      <anchorfile>de/db2/parsefunction_8c.html</anchorfile>
      <anchor>a2bd9d331736aa28b1650dcb48d2ad141</anchor>
      <arglist>(entity_t *self, entity_t **targ)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetSelf</name>
      <anchorfile>de/db2/parsefunction_8c.html</anchorfile>
      <anchor>ad5c9fe379d9ad3c5c1047b2d290c0302</anchor>
      <arglist>(entity_t *self, entity_t **targ)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetX</name>
      <anchorfile>de/db2/parsefunction_8c.html</anchorfile>
      <anchor>a2f1ce1fc3533578da89e9d9e566769af</anchor>
      <arglist>(entity_t *self, int *button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetMousePos</name>
      <anchorfile>de/db2/parsefunction_8c.html</anchorfile>
      <anchor>a9f48ba431a0a1cfb77ac410398303773</anchor>
      <arglist>(entity_t *self, vec2_t *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetXMouse</name>
      <anchorfile>de/db2/parsefunction_8c.html</anchorfile>
      <anchor>a0f50ddf2c031233309190bfe8e3f8701</anchor>
      <arglist>(entity_t *self, int *button, vec2_t *pos)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>FunctionNames</name>
      <anchorfile>de/db2/parsefunction_8c.html</anchorfile>
      <anchor>a77aa3443e1cc11d1389a851b108f3328</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>void</type>
      <name>FunctionSymbols</name>
      <anchorfile>de/db2/parsefunction_8c.html</anchorfile>
      <anchor>a69c92da9a6a5e5dd4c02c68ab396ab9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parsefunction.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>db/d02/parsefunction_8h</filename>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <member kind="function">
      <type>void *</type>
      <name>ParseToFunction</name>
      <anchorfile>db/d02/parsefunction_8h.html</anchorfile>
      <anchor>a3364b018786a8ca3a643e80ee703807f</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetWorld</name>
      <anchorfile>db/d02/parsefunction_8h.html</anchorfile>
      <anchor>a73c2d9e32b37716a4fa1a886f7cbb1e3</anchor>
      <arglist>(entity_t *self, entity_t **targ)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetAtPoint</name>
      <anchorfile>db/d02/parsefunction_8h.html</anchorfile>
      <anchor>a2bd9d331736aa28b1650dcb48d2ad141</anchor>
      <arglist>(entity_t *self, entity_t **targ)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetSelf</name>
      <anchorfile>db/d02/parsefunction_8h.html</anchorfile>
      <anchor>ad5c9fe379d9ad3c5c1047b2d290c0302</anchor>
      <arglist>(entity_t *self, entity_t **targ)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetX</name>
      <anchorfile>db/d02/parsefunction_8h.html</anchorfile>
      <anchor>a2f1ce1fc3533578da89e9d9e566769af</anchor>
      <arglist>(entity_t *self, int *button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetMousePos</name>
      <anchorfile>db/d02/parsefunction_8h.html</anchorfile>
      <anchor>a9f48ba431a0a1cfb77ac410398303773</anchor>
      <arglist>(entity_t *self, vec2_t *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetXMouse</name>
      <anchorfile>db/d02/parsefunction_8h.html</anchorfile>
      <anchor>a0f50ddf2c031233309190bfe8e3f8701</anchor>
      <arglist>(entity_t *self, int *button, vec2_t *pos)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>FunctionNames</name>
      <anchorfile>db/d02/parsefunction_8h.html</anchorfile>
      <anchor>a77aa3443e1cc11d1389a851b108f3328</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>void *[]</type>
      <name>FunctionSymbols</name>
      <anchorfile>db/d02/parsefunction_8h.html</anchorfile>
      <anchor>a1a22b108a457c916e27af13baf7c97a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parselevel.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d2/d2a/parselevel_8c</filename>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <includes id="d0/d0a/parselevel_8h" name="parselevel.h" local="yes" imported="no">parselevel.h</includes>
    <includes id="d2/dc6/parseobject_8h" name="parseobject.h" local="yes" imported="no">parseobject.h</includes>
    <includes id="dd/d14/parseentity_8h" name="parseentity.h" local="yes" imported="no">parseentity.h</includes>
    <includes id="d5/d82/ai__interpret_8h" name="ai_interpret.h" local="yes" imported="no">ai_interpret.h</includes>
    <includes id="d6/de2/mystrings_8h" name="mystrings.h" local="yes" imported="no">mystrings.h</includes>
    <member kind="function">
      <type>int</type>
      <name>LoadLevel</name>
      <anchorfile>d2/d2a/parselevel_8c.html</anchorfile>
      <anchor>ad9ebda29344f8ab359a5630fadc56489</anchor>
      <arglist>(object_t *level, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SpawnInLevel</name>
      <anchorfile>d2/d2a/parselevel_8c.html</anchorfile>
      <anchor>afd1ec7c09a102e0695a56e7882eec799</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawLevel</name>
      <anchorfile>d2/d2a/parselevel_8c.html</anchorfile>
      <anchor>af0b3b2530a9027139729335d90824340</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>level_t *</type>
      <name>gCurrentLevel</name>
      <anchorfile>d2/d2a/parselevel_8c.html</anchorfile>
      <anchor>acd0b27bf2cd52ed665c0f708aea8e48f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parselevel.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d0/d0a/parselevel_8h</filename>
    <includes id="d2/dc6/parseobject_8h" name="parseobject.h" local="yes" imported="no">parseobject.h</includes>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <class kind="struct">level_s</class>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_BACKGROUND_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>aace118d77fff2b2dbd5552f8bf787a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_HINT_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>a2611794385f4b4e2077c295550260146</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_SPAWN_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>a73ec4bac6de3bd9b0a4b2ce4030438bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_TILE_X_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>a07457be1d84573522d483ab123ca000c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_TILE_Y_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>afb7badf24ff0111bbcbd3d4af09b5991</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_ENEMY_OBJ_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>a403feb4054715e96447f8a8ac31ad2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_ENEMY_NAME_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>a34681cbe3818085ebadf80e37327bb18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_ITEM_OBJ_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>aad789b078e1dd3a35317626bd46f2370</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_ITEM_NAME_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>ac06257f244acb2bee834947199e05c13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_ITEM_XTRA_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>a386a51e3a6fe0b31dd2ba059a550a60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_AI_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>a973b8d892b3acf95aa32fe5dbf95a991</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_POSITION_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>a4e7de1799b1fd58bdfb7852e9764c2dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_FLAG_TILE_X_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>aee158c52140a44c72e79ab26b1458b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_FLAG_TILE_Y_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>a5b8a0edd7468a03071907218eb016f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LEVEL_VARIABLES_STR</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>ab42ad82f69f40cbcbca9ffd6fa3d0386</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LoadLevel</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>ad9ebda29344f8ab359a5630fadc56489</anchor>
      <arglist>(object_t *level, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawLevel</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>af0b3b2530a9027139729335d90824340</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>level_t *</type>
      <name>gCurrentLevel</name>
      <anchorfile>d0/d0a/parselevel_8h.html</anchorfile>
      <anchor>acd0b27bf2cd52ed665c0f708aea8e48f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parseobject.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>df/de3/parseobject_8c</filename>
    <includes id="d2/dc6/parseobject_8h" name="parseobject.h" local="yes" imported="no">parseobject.h</includes>
    <includes id="d6/de2/mystrings_8h" name="mystrings.h" local="yes" imported="no">mystrings.h</includes>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <member kind="function">
      <type>object_t *</type>
      <name>ParseToObject</name>
      <anchorfile>df/de3/parseobject_8c.html</anchorfile>
      <anchor>abeb996817aa47a5e463a47275c897483</anchor>
      <arglist>(jsmntok_t *token, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>object_t *</type>
      <name>FindObject</name>
      <anchorfile>df/de3/parseobject_8c.html</anchorfile>
      <anchor>a0d7610fbd167c6f81519e6ab3403e3bd</anchor>
      <arglist>(object_t *obj, char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CountObjectMembers</name>
      <anchorfile>df/de3/parseobject_8c.html</anchorfile>
      <anchor>aef0cb86d9b54e11206d154c369cb9a7e</anchor>
      <arglist>(object_t *obj, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CountObjectChildren</name>
      <anchorfile>df/de3/parseobject_8c.html</anchorfile>
      <anchor>acaa82337937e66fae84e360325cabdc6</anchor>
      <arglist>(object_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintObject</name>
      <anchorfile>df/de3/parseobject_8c.html</anchorfile>
      <anchor>ae7d41e06515589776dc92961481d56ab</anchor>
      <arglist>(object_t *obj, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CopyObjectToObjectArray</name>
      <anchorfile>df/de3/parseobject_8c.html</anchorfile>
      <anchor>a66550ec5ad5119b002932431e1ce8578</anchor>
      <arglist>(object_t **dst, object_t *src, int size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parseobject.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d2/dc6/parseobject_8h</filename>
    <includes id="de/d60/jsmn_8h" name="jsmn.h" local="no" imported="no">jsmn.h</includes>
    <class kind="struct">object_s</class>
    <member kind="function">
      <type>object_t *</type>
      <name>ParseToObject</name>
      <anchorfile>d2/dc6/parseobject_8h.html</anchorfile>
      <anchor>abeb996817aa47a5e463a47275c897483</anchor>
      <arglist>(jsmntok_t *token, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>object_t *</type>
      <name>FindObject</name>
      <anchorfile>d2/dc6/parseobject_8h.html</anchorfile>
      <anchor>a0d7610fbd167c6f81519e6ab3403e3bd</anchor>
      <arglist>(object_t *obj, char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CountObjectMembers</name>
      <anchorfile>d2/dc6/parseobject_8h.html</anchorfile>
      <anchor>aef0cb86d9b54e11206d154c369cb9a7e</anchor>
      <arglist>(object_t *obj, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CountObjectChildren</name>
      <anchorfile>d2/dc6/parseobject_8h.html</anchorfile>
      <anchor>acaa82337937e66fae84e360325cabdc6</anchor>
      <arglist>(object_t *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintObject</name>
      <anchorfile>d2/dc6/parseobject_8h.html</anchorfile>
      <anchor>ae7d41e06515589776dc92961481d56ab</anchor>
      <arglist>(object_t *obj, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CopyObjectToObjectArray</name>
      <anchorfile>d2/dc6/parseobject_8h.html</anchorfile>
      <anchor>a66550ec5ad5119b002932431e1ce8578</anchor>
      <arglist>(object_t **dst, object_t *src, int size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parsepowerup.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>dd/d4e/parsepowerup_8c</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <includes id="db/d02/parsefunction_8h" name="parsefunction.h" local="yes" imported="no">parsefunction.h</includes>
    <includes id="de/dc0/parsepowerup_8h" name="parsepowerup.h" local="yes" imported="no">parsepowerup.h</includes>
    <includes id="d2/dc6/parseobject_8h" name="parseobject.h" local="yes" imported="no">parseobject.h</includes>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <includes id="d6/de2/mystrings_8h" name="mystrings.h" local="yes" imported="no">mystrings.h</includes>
    <includes id="de/d60/jsmn_8h" name="jsmn.h" local="no" imported="no">jsmn.h</includes>
    <includes id="dc/d70/dumb__physics_8h" name="dumb_physics.h" local="yes" imported="no">dumb_physics.h</includes>
    <includes id="d3/d62/player_8h" name="player.h" local="yes" imported="no">player.h</includes>
    <member kind="function">
      <type>void</type>
      <name>Move</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>a289b46202a6f305acde1afc2d821207e</anchor>
      <arglist>(entity_t *targ, entity_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Destroy</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>a6b34755eb80b623ca36505219d6e1012</anchor>
      <arglist>(entity_t *targ, entity_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Spawn</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>a050ba84fee976778201dc7aff3e6ff41</anchor>
      <arglist>(entity_t *targ, entity_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Edit</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>a288e67be7e4235a802f8f0a779dfa68a</anchor>
      <arglist>(entity_t *targ, entity_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Nullify</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>abbf1dd6779e0cb88bade4a2dcbc06671</anchor>
      <arglist>(entity_t *targ, entity_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateNormal</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>abfc420da26ddb1f9d592bf432644c94c</anchor>
      <arglist>(power_t *power)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateInfinite</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>a7ae6cede71041d57a4863372b0f2a43a</anchor>
      <arglist>(power_t *power)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetUseType</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>a5eacfd4521f47eb6ce756416ed91ffb4</anchor>
      <arglist>(const char *var, int *useType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CallInfo</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>a4e4cd8f4b3499de1268fd7cf1ed0a790</anchor>
      <arglist>(power_t *self)</arglist>
    </member>
    <member kind="function">
      <type>power_t *</type>
      <name>ParseToPowerUp</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>a8d842ada05e7a3a934447d48af492f7f</anchor>
      <arglist>(object_t *power, char *g_str)</arglist>
    </member>
    <member kind="function">
      <type>power_t *</type>
      <name>FindPower</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>a94356a5fdd8b29d6a5fa2b730266275e</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UsePower</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>a283d180401ea1bf0ee68755d094b275a</anchor>
      <arglist>(power_t *power)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>InteractionNames</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>a4df04830c86d6dcbd3ef4557df82d9bd</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>void</type>
      <name>InteractionSymbols</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>ae5fb8c4f4ec5d863b1344f069b50d8c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>power_t *</type>
      <name>gCurrentPowerUp</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>a90fefa2dda0184e13839a0b67950fc88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec2_t *</type>
      <name>mousePos</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>adfb61c9280504c470a83ce9da1384ae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>keyPower</name>
      <anchorfile>dd/d4e/parsepowerup_8c.html</anchorfile>
      <anchor>abf3c4f267001e0e0f3e5b748b3b1c5e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parsepowerup.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>de/dc0/parsepowerup_8h</filename>
    <includes id="d2/dc6/parseobject_8h" name="parseobject.h" local="yes" imported="no">parseobject.h</includes>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <class kind="struct">power_s</class>
    <member kind="define">
      <type>#define</type>
      <name>POWER_TARGET_STR</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>ae4ff7ab7b5ce057c9af5622a291cc4d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POWER_USE_TYPE_STR</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a2939e5dcdb99093d66f2dcf2a9cdcefc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POWER_INTERACTION_STR</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a452f9650ebca3a4bdf7e47196426070b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POWER_INPUT_TYPE_STR</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a334dcc2970f95cee54b9ffe8d95b117e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POWER_ENTITY_STR</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>ab2ae8695bdfb17d6bb3a797a6416cc13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>use_type_t</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a2231c1a21540cc394825ca5e5df7cab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INFINITE</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a2231c1a21540cc394825ca5e5df7cab4a6a1459101774b7f68e084098fa8bacbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATIC</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a2231c1a21540cc394825ca5e5df7cab4ae55a36a850c67d46b3b3325de7fce0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>info_type_t</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a3482867a9df48b02d0dcfe459b6e81c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INFO_NONE</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a3482867a9df48b02d0dcfe459b6e81c5a4b7dcb53be065c6db542a2de0f0231ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INFO_BUTTON</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a3482867a9df48b02d0dcfe459b6e81c5af4924e029416352949b8726ad12153e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INFO_MOUSE</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a3482867a9df48b02d0dcfe459b6e81c5a415d1df754c472023341c16ab6343b4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INFO_BOTH</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a3482867a9df48b02d0dcfe459b6e81c5a424e7ac8424cb2b5f8ad421ce7049960</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CallInfo</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a4e4cd8f4b3499de1268fd7cf1ed0a790</anchor>
      <arglist>(power_t *self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateNormal</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>abfc420da26ddb1f9d592bf432644c94c</anchor>
      <arglist>(power_t *power)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateInfinite</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a7ae6cede71041d57a4863372b0f2a43a</anchor>
      <arglist>(power_t *power)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetUseType</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a5eacfd4521f47eb6ce756416ed91ffb4</anchor>
      <arglist>(const char *var, int *useType)</arglist>
    </member>
    <member kind="function">
      <type>power_t *</type>
      <name>ParseToPowerUp</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>aac472c2c38ac3fd8b451c7aaf31b8bdf</anchor>
      <arglist>(object_t *power, char *str)</arglist>
    </member>
    <member kind="function">
      <type>power_t *</type>
      <name>FindPower</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a94356a5fdd8b29d6a5fa2b730266275e</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UsePower</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a283d180401ea1bf0ee68755d094b275a</anchor>
      <arglist>(power_t *power)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Move</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a289b46202a6f305acde1afc2d821207e</anchor>
      <arglist>(entity_t *targ, entity_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Destroy</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a6b34755eb80b623ca36505219d6e1012</anchor>
      <arglist>(entity_t *targ, entity_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Spawn</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a050ba84fee976778201dc7aff3e6ff41</anchor>
      <arglist>(entity_t *targ, entity_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Edit</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a288e67be7e4235a802f8f0a779dfa68a</anchor>
      <arglist>(entity_t *targ, entity_t *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Nullify</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>abbf1dd6779e0cb88bade4a2dcbc06671</anchor>
      <arglist>(entity_t *targ, entity_t *info)</arglist>
    </member>
    <member kind="variable">
      <type>power_t *</type>
      <name>gPowerUps</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a3a8af497dc09185b0764ca27f6afff1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>power_t *</type>
      <name>gCurrentPowerUp</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a90fefa2dda0184e13839a0b67950fc88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>InteractionNames</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a4df04830c86d6dcbd3ef4557df82d9bd</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>void *[]</type>
      <name>InteractionSymbols</name>
      <anchorfile>de/dc0/parsepowerup_8h.html</anchorfile>
      <anchor>a8a8a842e8d72c67addd165fbe8c293ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>player.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d1/db8/player_8c</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <includes id="de/dc0/parsepowerup_8h" name="parsepowerup.h" local="yes" imported="no">parsepowerup.h</includes>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <includes id="d3/d62/player_8h" name="player.h" local="yes" imported="no">player.h</includes>
    <includes id="d0/d0a/parselevel_8h" name="parselevel.h" local="yes" imported="no">parselevel.h</includes>
    <member kind="function">
      <type>void</type>
      <name>InitPlayer</name>
      <anchorfile>d1/db8/player_8c.html</anchorfile>
      <anchor>ab1e3218036977e006ae6fd1f66c16ae4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DecrementPlayerLives</name>
      <anchorfile>d1/db8/player_8c.html</anchorfile>
      <anchor>ae53c08c808a1dc1314ea3d3bfcb0ff1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gPlayerName</name>
      <anchorfile>d1/db8/player_8c.html</anchorfile>
      <anchor>a6796f4467fe6aa940a363aef4004dd0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>entity_t *</type>
      <name>gPlayer</name>
      <anchorfile>d1/db8/player_8c.html</anchorfile>
      <anchor>a39b4143c78f14357b34548d43450c880</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gPlayerLives</name>
      <anchorfile>d1/db8/player_8c.html</anchorfile>
      <anchor>a7460e61d712f20efd9bca05176757e88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>player.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d3/d62/player_8h</filename>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PLAYER_NAME</name>
      <anchorfile>d3/d62/player_8h.html</anchorfile>
      <anchor>a31b5c3a330ed3472634dac473596287c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLAYER_LIVES</name>
      <anchorfile>d3/d62/player_8h.html</anchorfile>
      <anchor>a9d84f6e79f74322526a49e2eb0d82a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLAYER_BASE_JUMP</name>
      <anchorfile>d3/d62/player_8h.html</anchorfile>
      <anchor>a70c671ff041da80a2d89834b31559a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLAYER_BASE_SPEED</name>
      <anchorfile>d3/d62/player_8h.html</anchorfile>
      <anchor>a8652c9805fbaf4fd5a2ab6943f024510</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitPlayer</name>
      <anchorfile>d3/d62/player_8h.html</anchorfile>
      <anchor>ab1e3218036977e006ae6fd1f66c16ae4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DecrementPlayerLives</name>
      <anchorfile>d3/d62/player_8h.html</anchorfile>
      <anchor>ae53c08c808a1dc1314ea3d3bfcb0ff1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>entity_t *</type>
      <name>gPlayer</name>
      <anchorfile>d3/d62/player_8h.html</anchorfile>
      <anchor>a39b4143c78f14357b34548d43450c880</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gPlayerName</name>
      <anchorfile>d3/d62/player_8h.html</anchorfile>
      <anchor>a6796f4467fe6aa940a363aef4004dd0c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>player_controller.c</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d3/d5d/player__controller_8c</filename>
    <includes id="d5/d87/globals_8h" name="globals.h" local="yes" imported="no">globals.h</includes>
    <includes id="d5/d62/player__controller_8h" name="player_controller.h" local="yes" imported="no">player_controller.h</includes>
    <includes id="d8/d83/entity_8h" name="entity.h" local="yes" imported="no">entity.h</includes>
    <includes id="de/dc0/parsepowerup_8h" name="parsepowerup.h" local="yes" imported="no">parsepowerup.h</includes>
    <includes id="d3/d62/player_8h" name="player.h" local="yes" imported="no">player.h</includes>
    <member kind="function">
      <type>void</type>
      <name>DoPlayerThink</name>
      <anchorfile>d3/d5d/player__controller_8c.html</anchorfile>
      <anchor>afa7747dae7b1cb4e00338fa86a4f88ce</anchor>
      <arglist>(void *player, SDL_GameControllerButton button)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>player_controller.h</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/dumb-ways-to-memorize/</path>
    <filename>d5/d62/player__controller_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>BUTTON_NO_INPUT</name>
      <anchorfile>d5/d62/player__controller_8h.html</anchorfile>
      <anchor>ab7820abcb4653b4fcf13da1a7a724b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DoPlayerThink</name>
      <anchorfile>d5/d62/player__controller_8h.html</anchorfile>
      <anchor>afa7747dae7b1cb4e00338fa86a4f88ce</anchor>
      <arglist>(void *player, SDL_GameControllerButton button)</arglist>
    </member>
    <member kind="variable">
      <type>SDL_GameController *</type>
      <name>gController</name>
      <anchorfile>d5/d62/player__controller_8h.html</anchorfile>
      <anchor>ace39fee8ad9b40be707e8bb899b4b66e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SDL_GameControllerButton</type>
      <name>gButtonQ</name>
      <anchorfile>d5/d62/player__controller_8h.html</anchorfile>
      <anchor>a644f3aeee8c48bb2c622244836ef2046</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>README.md</name>
    <path>C:/Users/Junji/Documents/Visual Studio 2010/Projects/dumb-ways-to-memorize/</path>
    <filename>d9/dd6/_r_e_a_d_m_e_8md</filename>
  </compound>
  <compound kind="struct">
    <name>ai_function_s</name>
    <filename>dc/da2/structai__function__s.html</filename>
    <member kind="variable">
      <type>ai_type_t</type>
      <name>mType</name>
      <anchorfile>dc/da2/structai__function__s.html</anchorfile>
      <anchor>a475b63c8fe9cbd22b9f7857b0151464c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ai_actions_t</type>
      <name>mAction</name>
      <anchorfile>dc/da2/structai__function__s.html</anchorfile>
      <anchor>ade86cd2fb81c8d7e82101b7ad9fe5250</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mFlags</name>
      <anchorfile>dc/da2/structai__function__s.html</anchorfile>
      <anchor>a92d89ca6e516acf1dc0f8635b0fa4f95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mVariables</name>
      <anchorfile>dc/da2/structai__function__s.html</anchorfile>
      <anchor>a111a3fac080d1364b5e432b6e3fe2c26</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>mObject</name>
      <anchorfile>dc/da2/structai__function__s.html</anchorfile>
      <anchor>a3f4052f31d8fa30ce6a4a84c4f24fc49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>mObjectCheck</name>
      <anchorfile>dc/da2/structai__function__s.html</anchorfile>
      <anchor>a84b6de036b68deb42d5bcb0e32197cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ai_function_t *</type>
      <name>mLink</name>
      <anchorfile>dc/da2/structai__function__s.html</anchorfile>
      <anchor>a2fa9dc7cea89c8c7563db70a7ca60d5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>entity_s</name>
    <filename>de/d0b/structentity__s.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>mHazards</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>a0e3f7f351efc9032cdcb03ba4dc2c919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNextThink</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>a6d88a55d0f1d51adee4e42f25ff3502b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mHealth</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>a34f4bdd4f5d491376cbd73cee7773619</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mDamage</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>ac43e3ea939c03534a0aaf2868a86ad6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mWeight</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>a79feac0c66d057dc4dee939cffeb5e21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mCurrentFrame</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>a85093fd1c5b39f316a58b4d071fe3c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mDirection</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>a52b1c5d06706e4644c53d6c9b869b28b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>collision_type_t</type>
      <name>mCollisionType</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>a20e83b36c69ba15bb0d7197df8f714b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>entity_state_t</type>
      <name>mEntityState</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>a08d5c3da92ad730bb745ac5f37077c85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sprite_t **</type>
      <name>mSprites</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>a3e323c54d4398797d0cf47784ad912fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sprite_t *</type>
      <name>mAnimation</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>ab234f822e766db5b9771789ad7a236d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ai_function_t *</type>
      <name>mData</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>a2cca7f822998b6501c5fd25207bff0c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>mName</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>ae435d89c8a4b7fc0d0955b0cffdef19f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec2_t</type>
      <name>mAccel</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>afd6d1d609846f855b646ebc1705cdb20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec2_t</type>
      <name>mVelocity</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>a53ffbde94547891afb4e776188a475a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec2_t</type>
      <name>mPosition</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>ae5f82e490568bf625f8adc4de0232085</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>Think</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>aa5b2c8d5419fd4280a4413886d5361d3</anchor>
      <arglist>)(entity_t *self)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>Touch</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>a2c8516f061262feb0b1293978f495cc2</anchor>
      <arglist>)(entity_t *self, entity_t *other, int type)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>Draw</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>ac774d3301d59e18c2c9ac7ed4dcb369a</anchor>
      <arglist>)(entity_t *self)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>PowerUp</name>
      <anchorfile>de/d0b/structentity__s.html</anchorfile>
      <anchor>abefea82a0b3c1db3b16678ba5f10c424</anchor>
      <arglist>)(struct power_s *info)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Frame</name>
    <filename>d5/d15/struct_frame.html</filename>
    <member kind="variable">
      <type>vec2_t</type>
      <name>Position</name>
      <anchorfile>d5/d15/struct_frame.html</anchorfile>
      <anchor>ad146076c6fd7a2f4aa7031aaf2b17a22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>jsmn_parser</name>
    <filename>d4/d33/structjsmn__parser.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>pos</name>
      <anchorfile>d4/d33/structjsmn__parser.html</anchorfile>
      <anchor>a3d0d6e48d3d5b24262f9e0c2241dc456</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>toknext</name>
      <anchorfile>d4/d33/structjsmn__parser.html</anchorfile>
      <anchor>af640efd7d154218124a964b65f114bff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>toksuper</name>
      <anchorfile>d4/d33/structjsmn__parser.html</anchorfile>
      <anchor>af11fcec48d9f1298909777a12f1d1e39</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>jsmntok_t</name>
    <filename>d5/d78/structjsmntok__t.html</filename>
    <member kind="variable">
      <type>jsmntype_t</type>
      <name>type</name>
      <anchorfile>d5/d78/structjsmntok__t.html</anchorfile>
      <anchor>ac03dbd6b83cbcd979eb64702d5b9943e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>start</name>
      <anchorfile>d5/d78/structjsmntok__t.html</anchorfile>
      <anchor>a0a8f55d0095f268ce8e224fe1234acd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>end</name>
      <anchorfile>d5/d78/structjsmntok__t.html</anchorfile>
      <anchor>ab49e0369f39e9b6174141e7f5bde5996</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>size</name>
      <anchorfile>d5/d78/structjsmntok__t.html</anchorfile>
      <anchor>a8ac3694b7335456c8e602197778883db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>KV_Pair_t</name>
    <filename>d1/d76/struct_k_v___pair__t.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>key</name>
      <anchorfile>d1/d76/struct_k_v___pair__t.html</anchorfile>
      <anchor>ae6e713435f386d93debe478a514c56de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>address_t</type>
      <name>value</name>
      <anchorfile>d1/d76/struct_k_v___pair__t.html</anchorfile>
      <anchor>a896f66cf4660b0ccfee1052e19aa778f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>level_s</name>
    <filename>dc/d54/structlevel__s.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>mName</name>
      <anchorfile>dc/d54/structlevel__s.html</anchorfile>
      <anchor>a4efc9801572117ed944a1d6c5f3e0cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>mHint</name>
      <anchorfile>dc/d54/structlevel__s.html</anchorfile>
      <anchor>a3dd328bc94c8a53212ad716fa9c3c299</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sprite_t *</type>
      <name>mBackground</name>
      <anchorfile>dc/d54/structlevel__s.html</anchorfile>
      <anchor>af74fa09fa889b00e9e5b716c109a1466</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec2_t</type>
      <name>mSpawnPoint</name>
      <anchorfile>dc/d54/structlevel__s.html</anchorfile>
      <anchor>a726051b845fc559457ee676bdb5c5ce0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>menu_item_s</name>
    <filename>d9/d8d/structmenu__item__s.html</filename>
    <member kind="variable">
      <type>menu_item_state_t</type>
      <name>State</name>
      <anchorfile>d9/d8d/structmenu__item__s.html</anchorfile>
      <anchor>abd7bbacccc14aed16ae5e4a9851364b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GameState</type>
      <name>NextState</name>
      <anchorfile>d9/d8d/structmenu__item__s.html</anchorfile>
      <anchor>aa47049ee4520253a477168b238d2f4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec2_t</type>
      <name>Position</name>
      <anchorfile>d9/d8d/structmenu__item__s.html</anchorfile>
      <anchor>aabaf9b0caae4faf8bfdc627ab62da6e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>Name</name>
      <anchorfile>d9/d8d/structmenu__item__s.html</anchorfile>
      <anchor>a5b22d1de11c12256fc1e1183b2ee1549</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sprite_t *</type>
      <name>Image</name>
      <anchorfile>d9/d8d/structmenu__item__s.html</anchorfile>
      <anchor>a33c1f40f353b8391bddcffed02b3873f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Info</name>
      <anchorfile>d9/d8d/structmenu__item__s.html</anchorfile>
      <anchor>ad5157a407f27f576d4870e88040a61fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>menu_s</name>
    <filename>d8/d8c/structmenu__s.html</filename>
    <member kind="variable">
      <type>menu_item_t</type>
      <name>mItems</name>
      <anchorfile>d8/d8c/structmenu__s.html</anchorfile>
      <anchor>a9c82051d8a9af274b548ae747791afdf</anchor>
      <arglist>[MENU_ITEM_MAX]</arglist>
    </member>
    <member kind="variable">
      <type>menu_item_t *</type>
      <name>mSelectedItem</name>
      <anchorfile>d8/d8c/structmenu__s.html</anchorfile>
      <anchor>aaff56584ee2083806174530116d6e228</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sprite_t *</type>
      <name>mBackground</name>
      <anchorfile>d8/d8c/structmenu__s.html</anchorfile>
      <anchor>a81835a18587d799a289c50eca2e88df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GameState</type>
      <name>mCurrentState</name>
      <anchorfile>d8/d8c/structmenu__s.html</anchorfile>
      <anchor>aae37bf06b55374db7eee096613b2a837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GameState</type>
      <name>mPreviousState</name>
      <anchorfile>d8/d8c/structmenu__s.html</anchorfile>
      <anchor>aaa6cdfc7fc2e645886e1f3247a5928f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mItemCount</name>
      <anchorfile>d8/d8c/structmenu__s.html</anchorfile>
      <anchor>a546bdbbc28bef099e91919fd88c17d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>Update</name>
      <anchorfile>d8/d8c/structmenu__s.html</anchorfile>
      <anchor>a22770aae7cbb7a931cd0fdbcab84c62a</anchor>
      <arglist>)(menu_t *self, SDL_GameControllerButton button)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>Draw</name>
      <anchorfile>d8/d8c/structmenu__s.html</anchorfile>
      <anchor>a749294d39d4c31290dc4d20ae3b03faf</anchor>
      <arglist>)(menu_t *self)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>object_s</name>
    <filename>d5/dfc/structobject__s.html</filename>
    <member kind="variable">
      <type>object_t *</type>
      <name>parent</name>
      <anchorfile>d5/dfc/structobject__s.html</anchorfile>
      <anchor>a340b0ed6eeb10065ec24642195a5062a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>object_t *</type>
      <name>children</name>
      <anchorfile>d5/dfc/structobject__s.html</anchorfile>
      <anchor>ac075beaaeb40723cefc5f4c551845211</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>jsmntok_t *</type>
      <name>keys</name>
      <anchorfile>d5/dfc/structobject__s.html</anchorfile>
      <anchor>a50f9c9f44e7233ab9d7f944ea5a7d11f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>jsmntok_t *</type>
      <name>values</name>
      <anchorfile>d5/dfc/structobject__s.html</anchorfile>
      <anchor>a50af028b966ebf26e471ec5c97f7ee2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>d5/dfc/structobject__s.html</anchorfile>
      <anchor>ac7552aa95df18b723526711da18c17e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>power_s</name>
    <filename>db/d0f/structpower__s.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>db/d0f/structpower__s.html</anchorfile>
      <anchor>a3c10bc550705bf4f34770c39f68e85ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>UpdateInput</name>
      <anchorfile>db/d0f/structpower__s.html</anchorfile>
      <anchor>a537d07c161df1f5e27d02d5ad92f6b7a</anchor>
      <arglist>)(power_t *self)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>GetTarg</name>
      <anchorfile>db/d0f/structpower__s.html</anchorfile>
      <anchor>ac9219ab38ef3b22ca3550d32b55e0950</anchor>
      <arglist>)(entity_t *self, entity_t **targ)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>UpdateUse</name>
      <anchorfile>db/d0f/structpower__s.html</anchorfile>
      <anchor>a0f24897ecbecae897cf48234a558afe0</anchor>
      <arglist>)(power_t *power)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>DoPower</name>
      <anchorfile>db/d0f/structpower__s.html</anchorfile>
      <anchor>ad2f26c41fcd9e1aaf57eaaf2e548f03a</anchor>
      <arglist>)(entity_t *targ, entity_t *info)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>uses</name>
      <anchorfile>db/d0f/structpower__s.html</anchorfile>
      <anchor>a94946849666ddb0fc68c137c1f8fa16d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>info_type_t</type>
      <name>info_type</name>
      <anchorfile>db/d0f/structpower__s.html</anchorfile>
      <anchor>ad5bd7b2b16ab7666cf3e8fb1b52ec1f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>entity_t *</type>
      <name>target</name>
      <anchorfile>db/d0f/structpower__s.html</anchorfile>
      <anchor>a83561edc39bf4c52bdbd71c8db6c05e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>entity_t *</type>
      <name>info</name>
      <anchorfile>db/d0f/structpower__s.html</anchorfile>
      <anchor>a9ea9577fb2e6a2b14a7d5feb2328207c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sound_s</name>
    <filename>de/df8/structsound__s.html</filename>
    <member kind="variable">
      <type>sound_mixer_group</type>
      <name>group_id</name>
      <anchorfile>de/df8/structsound__s.html</anchorfile>
      <anchor>a474123e0705734e2c0f5fcccbe2ec99e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mix_Chunk *</type>
      <name>sounds</name>
      <anchorfile>de/df8/structsound__s.html</anchorfile>
      <anchor>a0720093e46754b21c9a4f205e34432d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sprite_s</name>
    <filename>d8/d16/structsprite__s.html</filename>
    <member kind="variable">
      <type>Frame</type>
      <name>mAnimations</name>
      <anchorfile>d8/d16/structsprite__s.html</anchorfile>
      <anchor>ac66a25701913a4666397d2284e77ffbb</anchor>
      <arglist>[MAX_ANIMATIONS]</arglist>
    </member>
    <member kind="variable">
      <type>SDL_Texture *</type>
      <name>mTexture</name>
      <anchorfile>d8/d16/structsprite__s.html</anchorfile>
      <anchor>aca94ae342493e0c32d205c4fe4f385b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec2_t</type>
      <name>mSize</name>
      <anchorfile>d8/d16/structsprite__s.html</anchorfile>
      <anchor>afee85e2b61426c7884dda4df358aefc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mFrames</name>
      <anchorfile>d8/d16/structsprite__s.html</anchorfile>
      <anchor>acc0f3e6a911ca9f4fa82641b3bcc9275</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>refCount</name>
      <anchorfile>d8/d16/structsprite__s.html</anchorfile>
      <anchor>ae1c0a03bb8232142c3b32a93ff383b98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>d8/d16/structsprite__s.html</anchorfile>
      <anchor>a0fca977c38e782df96645e41911a18a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vec2_t</name>
    <filename>d9/d78/structvec2__t.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>d9/d78/structvec2__t.html</anchorfile>
      <anchor>a41f4a015f84313376b45c581ca67d2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>d9/d78/structvec2__t.html</anchorfile>
      <anchor>aa91695e583cce2caf43f0272899a1cec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>md_README</name>
    <title>dumb-ways-to-memorize</title>
    <filename>md_README</filename>
  </compound>
</tagfile>
